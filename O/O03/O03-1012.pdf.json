{"sections":[{"title":"Mencius: A Chinese Named Entity Recognizer Using Hybrid Model ","paragraphs":["Tzong-Han Tsai* g , Shih-Hung Wug",", and Wen-Lian Hsug  * Department of Computer Science and Information Engineering National Taiwan University Taipei, Taiwan, R.O.C. d90013@csie.ntu.edu.tw"," g Institute of Information Science, Academia Sinica. Taipei, Taiwan, R.O.C. {thtsai, shwu, hsu}@iis.sinica.edu.tw "]},{"title":"Abstract ","paragraphs":["This paper presents a maximum entropy based Chinese named entity recognizer (NER): Mencius. It aims to address Chinese NER problems by combining the advantages of rule-based and machine learning (ML) based NER systems. Rule-based NER systems can explicitly encode human comprehension and can be tuned conveniently, while ML-based systems are robust, portable and inexpensive to develop. Our hybrid system incorporates a rule-based knowledge representation and template-matching tool, InfoMap [1], into a maximum entropy (ME) framework. Named entities are represented in InfoMap as templates, which serve as ME features in Mencius. These features are edited manually and their weights are estimated by the ME framework according to the training data. To avoid the errors caused by word segmentation, we model the NER problem as a character-based tagging problem. In our experiments, Mencius outperforms both pure rule-based and pure ME-based NER systems. The F-Measures of person names (PER), location names (LOC) and organization names (ORG) in the experiment are respectively 92.4%, 73.7% and 75.3%. "]},{"title":"1 Introduction ","paragraphs":["Information Extraction (IE) is the task of extracting information of interest from unconstrained text. IE involves two main tasks: the recognition of named entities, and the recognition of the relationships among these named entities. Named Entity Recognition (NER) involves the identification of proper names in text and their classification into different types of named entities (e.g., persons, organizations, locations). NER is not only important in IE [3] but also in lexical acquisition for the development of robust NLP systems [4]. Moreover, NER has proven fruitful for tasks such as documents indexing, and maintenance of databases containing identified named entities.  During the last decade, NER has drawn much attention at Message Understanding Conferences (MUC) [5] [6]. Both rule-based and machine learning NER systems have had some success. Previous rule-based approaches have used manually constructed finite state patterns, which match text against a sequence of words. Such system (like University of Edinburgh's LTG [7]) do not need too much training data and can encode expert human knowledge. However, rule-based approaches lack robustness and portability. Each new source of text requires a significant tweaking of the rules to maintain optimal performance; the maintenance costs can be quite steep.  Another popular approach in NER is machine-learning (ML). ML is more attractive in that it is more portable and less expensive to maintain. The representative ML approaches used in NER are HMM (BBN's IdentiFinder in [8, 9] and Maximum Entropy (ME) (New York Univ.'s MEME in [10] [11]). Although ML systems are relatively inexpensive to develop, the outputs of these systems are difficult to interpret. As well, it is difficult to improve the system performance through error analysis. The performance of a ML system can be very poor when training data is insufficient. Furthermore, the performance of ML systems is worse than that of rule-based ones by about 2% as witnessed in MUC-6 [12] and MUC-7 [13]. This might be due to the fact that current ML approaches can capture non-parametric factors less effectively than human experts who handcraft the rules. Nonetheless, ML approaches do provide important statistical information that is unattainable by human experts. Currently, the F-measure in English rule-based and ML NER systems are 85% ~ 94% on MUC-7 data [14]. This is higher than the average performance of Chinese NER systems, which ranges from 79% to 86% [14].  In this paper, we address the problem of Chinese NER. In Chinese sentences, there are no spaces between words, no capital letters to denote proper names or sentence breaks, and, worst of all, no standard definition of “words”. As a result, word boundaries cannot, at times, be discerned without context. As well, the length of a named entity is longer on average than an English one, thus, the complexity of a Chinese NER system is greater.   Previous works [15] [16] [2] on Chinese NER rely on the word segmentation module. However, an error in the word segmentation step could lead to errors in NER results. Therefore, we bypass word segmentation and use a character-based tagger, treat each character as a token, and combine the tagged outcomes of continuing characters to form an NER output.  Borthwick [11] uses an ME framework to integrate many NLP resources, including previous systems such as Proteus, a POS tagger. In this paper, Mencius incorporates a rule-based knowledge representation and template-matching tool, InfoMap [1], into a maximum entropy (ME) framework. Named entities are represented in InfoMap as templates, which serve as ME features in Mencius. These features are edited manually and their weights are estimated by the ME framework according to the training data.  This paper is organized as follows. Section 2 provides the ME-based framework for NER. Section 3 describes features and how to represent them in our knowledge representation system, InfoMap. The data set and experimental results are discussed in Section 4. Section 5 gives our conclusions and possible extensions of the current work. "]},{"title":"2. Maximum Entropy-Based NER Framework ","paragraphs":["For our purpose, we regard each character as a token. Consider a test corpus and a set of n named entity categories. Since a named entity can have more than one token, we associate two tags to each category x: x_begin and x_continue. In addition, we use the tag unknown to indicate that a token is not part of a named entity. The NER problem can then be rephrased as the problem of assigning one of 2n + 1 tags to each token. In Mencius, there are 3 named entity categories and 7 tags: person_begin, person_continue, location_begin, location_continue, organization_begin, organization_continue and unknown. For example, the phrase [李 遠 哲 在 高 雄 市] (Lee, Yuan Tseh in Kaohsiung City) could be tagged as [person_begin, person_continue, person_continue, unknown, location_begin, location_continue, location_continue].  2.1 Maximum Entropy ME is a flexible statistical model which assigns an outcome for each token based on its history and features. Outcome space is comprised of the seven Mencius tags for an ME formulation of NER. ME computes the probability p(o|h) for any o from the space of all possible outcomes O, and for every h from the space of all possible histories H. A  history is all the conditioning data that enables one to assign probabilities to the space of outcomes. In NER, history could be viewed as all information derivable from the test corpus relative to the current token.  The computation of p(o|h) in ME depends on a set of binary-valued features, which are helpful in making a prediction about the outcome. For instance, one of our features is: when the current character is a known surname, it is likely to be the leading character of a person name. More formally, we can represent this feature as  ⎩⎨⎧ == = else :0 _ and trueSurname(h)-Char-Current if : 1 ),(","beginpersono ohf (1)  Here, Current-Char-Surname(h) is a binary function that returns the value true if the current character of the history h is in the surname list.  Given a set of features and a training corpus, the ME estimation process produces a model in which every feature fi has a weight αi. This allows us to compute the conditional probability as follows [17]. "]},{"title":"∏","paragraphs":["= i ohf i i hZ hop ),(",")(1 )|( α (2)  Intuitively, the probability is the multiplication of weights of active features (i.e. those fi (h,o) = 1). The weight αi is estimated by a procedure called Generalized Iterative Scaling (GIS) [18]. This is an iterative method that improves the estimation of the weights at each iteration. The ME estimation technique guarantees that for every feature fi, the expected value ofαi equals the empirical expectation ofαi in the training corpus.  As Borthwick [11] remarked, ME allows the modeler to concentrate on finding the features that characterize the problem while letting the ME estimation routine deal with assigning relative weights to the features.  2.2 Decoding After having trained an ME model and assigned the proper weight αi to each feature fi, decoding (i.e. marking up) a new piece of text becomes a simple task. First, Mencius tokenizes the text and preprocesses the testing sentence. Then for each token we check which features are active and combine theαi of the active features according to  equation 2. Finally, a Viterbi search is run to find the highest probability path through the lattice of conditional probabilities that does not produce any invalid tag sequences (for instance the sequence [person_begin, location_continue] is invalid). Further details on the Viterbi search can be found in [19]. "]},{"title":"3 Features ","paragraphs":["We divide features that can be used to recognize named entities into four categories according to whether they are external and whether they are category dependent. McDonald defined internal and external features in [20]. The internal evidence is found within the entity, while the external evidence is gathered from its context. We use category-independent features to distinguish named entities from non-named entities (e.g., first-character-of-a-sentence, capital-letter, out-of-vocabulary), and category-dependent features to distinguish between different named entity categories (for example, surname and given name lists are used for recognizing person names). However, to simplify our design, we only use internal features that are category-dependent in this paper.  3.1 InfoMap – Our Knowledge Representation System To calculate values of location features and organization features, Mencius uses InfoMap. InfoMap is our knowledge representation and template matching tool, which represents location or organization names as templates. An input string (sentence) is first matched to one or more location or organization templates by InfoMap and then passed to Mencius, there it is assigned feature values which further distinguish which named entity category it falls into.  3.1.1 Knowledge Representation Scheme in InfoMap InfoMap is a hierarchical knowledge representation scheme, consisting of several domains, each with a tree-like taxonomy. The basic units of information in InfoMap are called generic nodes which represent concepts, and function nodes which represent the relationships among generic nodes of one specific domain. In addition, generic nodes can also contain cross references to other nodes to avoid needless repetition.  In Mencius, we apply the geographical taxonomy of InfoMap called GeoMap. Our location and organization templates refer to generic nodes in Geomap. In Figure 1, GeoMap has three sub-domains: World, Mainland China, and Taiwan. Under the sub-domain Taiwan, there are four attributes: Cities, Parks, Counties and City Districts. Moreover, these attributes can be further divided, for example, Counties separates into  individual counties: Taipei County, Taoyuan County, etc. In InfoMap, we refer to generic nodes (or concept node) by paths. A path of generic nodes consists of all node names from the root of the domain to the specific generic node, in which function nodes are omitted. The node names are separated by periods. For example, the path for the “Taipei County” node is “GeoMap.Counties.Taipei County.”               Figure 1. A partial view of GeoMap  3.1.2 InfoMap Templates In InfoMap, text templates are stored in generic nodes. Templates can consist of character strings, wildcards (see $$ in Table 1), and references to other generic nodes in InfoMap. For example, the template, [ 通用地理. 台灣. 縣 ]:$$(2..4): 局 ([GeoMap.Taiwan.Counties]:$$(2..4):Department), can be used to recognize county level governmental departments in Taiwan. The syntax used in InfoMap templates are shown in Table 1. The first part of our sample template above (enclosed by “[]”) is a path that refers to the generic node “Counties”. The second element is a wildcard ($$) which must be 2 to 4 characters in length. The third element is a specified character “局” (Department). ","Table 1. InfoMap template syntax","Symbol Semantics Example Template Sample Matching","String",": Concatenate two strings A:B AB","$$(m..n) Wildcards (number of characters can be from m to n; both m and n have to be non-negative integers)","A:$$(1..2):B ACB, ADDB, ACDB [p] A path to a generic node. [GeoMap.Taiwan.Counties] Taipei County,   Taoyuan County, Hsinchu County, etc. 3.2 Category-Dependent Internal Features Recall that category-dependent features are used to distinguish among different named entity categories.  3.2.1 Features for Recognizing Person Names Mencius only deals with surname plus first name (usually with two characters), for example, 陳水扁 (Chen Shui-bian). There are various way to express a person in a sentence, such as 陳先生 (Mr. Chen) and老陳 (Old Chen), which have not been incorporated into the current system. Furthermore, we do not target transliterated names, such as 布希 (Bush), since they do not follow Chinese name composition rules. We use a table of frequently occurring names to process our candidate test data. If a character and its context (history) correspond to a feature condition, the value of the current character for that feature will be set to 1. Feature conditions, examples and explanations for each feature are shown in Table 2. In the feature conditions column, c-1, c0, and c1 represent the preceding character, the current character, and the following character respectively.  Table 2. Person Features","Feature Feature","Conditions Example Explanation","Current-Char-Person-Surname c0c1c2 or c0c1 are in the name list “陳”水扁, “連”戰 Probably the first character of a person name","Current-Char-Person-Given-Name c-2c-1c0 or c-1c0 or c-1c0c1 are in the name list 陳“水”扁, 陳水“扁”, 連“戰” Probably the second or third character of a person name","Current-Char-Surname c0 are in the surname list “陳”, “林”, “李” Probably a surname","Current-Char-Given-Name c0c1 or c-1c0 are in the given name list 黃“其”聖, 黃其“聖” Probably part of a popular given name Current-Char-Freq-Given-Name-Character Both c0, c1 or c-1, c1 are in the frequent given name character list 羅“方”全, 羅方“全” Probably a given name character","Current-Char-Speaking-Verb c0 or c0c1 or c-1c0 are in the list of verbs indicating speech “說”, “表” 示, 表 “示” Probably part of a verb indicating speech (ex: John said he was tired)","Current-Char-Title c0 or c0c1 or c-1c0 are in the title list “先”生, 先 “生” Probably part of a title  Current-Char-Person-Surname: This feature is set to 1 if c0c1c2 or c0c1 are in the person name database. For example, in the case c0c1c2 = 陳水扁, the feature  Current-Char-Person-Surname for 陳 is active since c0 and its following characters c1c2 satisfy the feature condition. Current-Char-Person-Given-Name: This feature is set to 1 if c-2c-1c0, c-1c0, or c-1c0c1 are in the person name database. Current-Char-Surname: This feature is set to 1 if c0 is in the top 300 popular surname list. Current-Char-Given-Name: This feature is set to 1 if c0c1 or c-1c0 are in the given name database. Current-Char-Freq-Given-Name-Character: (c0 and c1) or (c-1 and c0) are in the frequently given name character list Current-Char-Speaking-Verb: c0 or c0c1 or c-1c0 are in the speaking verb list. This feature distinguishes a trigram containing a speaking verb such as 陳沖說 (Chen Chong said) from a real person name. Current-Char-Title: c0 or c0c1 or c-1c0 are in the title list. This feature distinguishes a trigram containing a title such as 陳先生 (Mr. Chen) from a real person name.  3.2.2 Features for Recognizing Location Names In general, locations are divided into four types: administrative division, public area (park, airport, or port), landmark (road, road section, cross section or address), and landform (mountain, river, sea, or ocean). An administrative division name usually contains one or more than one location names in hierarchical order, such as 安大略省 多倫多市 (Toronto, Ontario). A public area name is composed of a Region-Name and a Place-Name. However, the Region-Name is usually omitted in news content if it was previously mentioned. For example, 倫敦海德公園 (Hyde Park, London) contains a Region-Name 倫敦 (London) and a Place-Name 海德公園 (Hyde Park). But “Hyde Park, London” is usually abbreviated as “Hyde Park” within the report. The same rule can be applied to landmark names. A landmark name includes a Region-Name and a Position-Name. In a news article, the Region-Name can be omitted if the Place-Name has been mentioned previously. For example, 溫哥華市羅伯遜街五號 (No. 5, Robson St., Vancouver City), will be stated as 羅伯遜街五號 (No. 5, Robson St.) in the report later.  In Mencius, we build templates to recognize three types of location names. Our administrative division templates contain more than one set of location names in hierarchical order. For example, the template, [通用地理.台灣.市]:[ 通用地理.台灣. 各市行政區] ([GeoMap.Taiwan.Cities]:[GeoMap.Taiwan.City Districts]), is for recognizing all Taiwanese city districts. In addition, public area templates contain one set of location names and a set of Place-Name. For example, [通用地理.台灣.市]:[通  用地理. 台灣. 公園] ([GeoMap.Taiwan.Cities]:[GeoMap.Taiwan.Parks]) is for recognizing all Taiwanese city parks. Landmark templates are built in the same way. E.g., [通用地理.台灣.市]:$$(2..4):路 ([GeoMap.Taiwan.Cities]:$$(2..4):Road), is for recognizing roads in Taiwan.  For each InfoMap template category x (e.g., location and organization), there are two features associated with it. The first is Current-Char-InfoMap-x-Begin, which is set to 1 for the first character of matched string and set to 0 for the remaining characters. The other is Current-Char-InfoMap-x-Continue, which is set to 1 for all the characters of matched string except for the first character and set to 0 for the first character. The intuition is: using InfoMap to help ME detect which character in the sentence is the first character of a location name and which characters are the remaining characters of a location name. That is, Current-Char-InfoMap-x-Begin is helpful for determining which character is tagged as x_begin while Current-Char-InfoMap-x-Continue is helpful for determining which character is tagged as x_continue if we build InfoMap template for that category x. The two features associated with x category are showed below.  ⎩⎨⎧ == = else :0 _ and trueBegin-x-InfoMap-Char-Current if : 1 ),(","beginxo ohf (3)  ⎩⎨⎧ == = else :0 _ and trueContinue-x-InfoMap-Char-Current if : 1 ),(","continuexo ohf (4)  In recognizing a location name in a sentence, we test if any location templates match the sentence. If several matched templates overlap, we select the longest matched one. As we mentioned above, the feature Current-Character-InfoMap-Location-Begin of the first character of the matched string is set to 1 while the feature Current-Character-InfoMap-Location-Continue of the remaining characters of the matched string is set to 1. Table 3 shows the necessary conditions for each organization feature and gives examples of matched data. ","Table 3. Location Features","Feature Feature Conditions Example Explanations","Current-Char-InfoMap-Location-Begin c0~cn-1 matches an InfoMap location template, where the character length of the template is n “台”北縣板 橋市 Probably the leading character of a location","Current-Char-InfoMap-Location-Continue ca...c0....cb matches an InfoMap location 台”北”縣板 橋市 Probably the continuing  template where a is a negative integer and b is a non-negative integer character of a location 3.2.3 Features for Recognizing Organization Names Organizations include named corporate, governmental, or other organizational entity. The difficulty of recognizing an organization name is that an organization name is usually led by location names, such as 台北市地檢署 (Taipei District Public Prosecutors Office). Therefore, traditional machine learning NER systems only identify the location part rather than the full organization name. For example, the system only extracts 台北市 (Taipei City) from 台北市 SOGO 百貨週年慶 (Taipei SOGO Department Store Anniversary) rather than 台北市 SOGO 百貨 (Taipei SOGO Department Store). According to our analysis of the structure of Chinese organization names, we found that organization names are mostly ended with a specific keyword or led by a location name. Therefore, we use those keywords and location names as the boundary markers of organization names. Based on our observation, we categorize organization names into four types by boundary markers:  Type I: With left and right boundary markers: The organization name in this category is led by one or more than one geographical names and ended by an organization keyword. For example, 台北市 (Taipei City) is the left boundary marker of 台北市捷運公司 (Taipei City Rapid Transit Corporation) while an organization keyword, 公司 (Corporation), is the right boundary marker.  Type II: With left boundary markers: The organization name in this category is led by one or more than one geographical names but the organization keyword (e.g., 公司 (Corporation)) is omitted. For example, 台灣捷安特 (Giant Taiwan) only contains the left boundary 台灣 (Taiwan).  Type III: With right boundary marker: The organization name in this category is ended by an organization keyword. For example, 捷安特公司 (Giant Corporation) only contains the right boundary 公司 (Corporation).  Type IV: No boundary marker: In this category, both left and right boundaries as above mentioned are omitted, such as 捷安特 (Giant). The organization names in this category are usually in the abbreviated form.   In Mencius, we build templates for recognizing Type I organization names. Each organization template begins with a location name in GeoMap and ends with an organization keyword. For example, we build [ 通用地理. 台灣. 市 ]:$$(2..4): 局 ([GeoMap.Taiwan.Cities]:$$(2..4):Department) for recognizing county level government departments in Taiwan. However, in Type II, III, IV, organization names cannot be recognized by templates. Therefore, the maximum entropy model uses features of characters (from c-2 to c2), tags (from t-2 to t2), and organization keywords, e.g., 公司 (Corporation), to find the most likely tag sequences and recognize them.  Once a string matches an organization template, the feature Current-Character-InfoMap-Organization-Start of the first character is set to 1. In addition, the feature Current-Character-InfoMap-Organization-Continue of the remaining characters is set to 1. The necessary conditions for each organization feature and examples of matched data are shown in Table 4. These features are helpful in recognizing organization names. ","Table 4. Organization Features","Feature Feature Conditions Example Explanations","Current-Char-InfoMap-Organization-Begin c0~cn-1 is matches an InfoMap organization template, where the character length of the template is n “台”北市 捷運公司 Probably the leading character of an organization","Current-Char-InfoMap-Organization-Continue ca...c0....cb matches an InfoMap organization template, where a is a negative integer and b is a non-negative integer 台”北”市 捷運公司 Probably the leading character of an organization","Current-Char-Organization-Keyword c0 or c0c1 or c-1c0 are in the organization keyword list “公”司, 公 “司” Probably part of an organization keyword "]},{"title":"4 Experiments  4.1 Data Sets","paragraphs":["For Chinese NER, the most famous corpus is MET-2 [6]. There are two main differences between our corpus and MET-2: the number of domains and the amount of data. First, MET-2 contains only one domain (Accident) while our corpus, which is collected from the online United Daily News in December 2002 (http://www.udn.com.tw), contains six domains: Local News, Social Affairs,  Investment, Politics, Headline news and Business, which provides more varieties of organization names than single domain corpus does. The full location names and organization names are comparatively longer in length and our corpus contains more location names under county level and addresses. Therefore, the patterns of location names and organization names are more complex in our corpus.  Secondly, our corpus is much larger than MET2. MET2 contains 174 Chinese PER, 750 LOC, and 377 ORG while our corpus contains 1,242 Chinese PER, 954 LOC, and 1,147 ORG in 10,000 sentences (about 126,872 Chinese characters). The statistics of our data is shown in Table 5. ","Table 5. Statistics of Data Set","Number of Named Entities Domain","PER LOC ORG Size (in","characters) Local News 84 139 97 11835 Social Affairs 310 287 354 37719 Investment 20 63 33 14397 Politics 419 209 233 17168 Headline News 267 70 243 19938 Business 142 186 187 25815 Total 1242 954 1147 126872  4.2 Experimental Results To demonstrate that Mencius performs better than pure rule-based and ML systems, we conduct the following three experiments. We use a 4-fold cross validation to test our system.  4.2.1 Name Lists and Templates (Rule-based) In this experiment, we use a person name list and InfoMap templates to recognize all named entities. The number of lexicons in person name lists and gazetteers is 32000. As shown in Table 6, the results indicate the F-Measures of PER, LOC and ORG are 83.6%, 71.2% and 76.8%, respectively. ","Table 6. Performance of Name Lists and Templates NE P(%) R(%) F(%) PER 72.98 97.93 83.63 LOC 67.96 74.67 71.16 ORG 95.77 64.07 76.78 Total 75.62 82.13 78.74  4.2.2 Pure Maximum Entropy Model (ML-based)  In this experiment, we apply the pure ME model, which only uses context information of characters from c-2 to c2 and tags from t-2 to t2. As shown in Table 7, the results indicate that the F-Measures of PER, LOC and ORG are 32.1%, 29.3% and 2.2%, respectively.","Table 7. Performance of Pure Maximum Entropy NE P(%) R(%) F(%) PER 62.38 21.64 32.13 LOC 72.83 18.31 29.26 ORG 38.24 1.15 2.23 Total 65.03 13.89 22.89  4.2.3 Integrating Name Lists and Templates into A Maximum Entropy-Based Framework (Hybrid) In this experiment, we integrate name lists, location templates, and organization templates into a maximum-Entropy-Based framework. As shown in Table 8, the results indicate that the performance of PER, LOC, ORG is better than those in 4.2.1 and 4.2.2. ","Table 8. Hybrid Performance NE P(%) R(%) F(%) PER 97.94 87.39 92.36 LOC 78.60 69.35 73.69 ORG 94.39 62.57 75.25 Total 90.56 73.70 81.26  4.3 Discussions In this section, we discuss problems encountered by Mencius.  4.3.1 Data Sparseness As shown in Tables 6, 7 and 8, Mencius outperforms the rule-based method (Lists and Templates) and ML-based method (pure ME) in the total F-Measure. However, rule-based approach outperforms Mencius in the ORG category. It is due to the data sparseness problem. For example, 中壢天晟醫院 is tagged as [organization_begin, organization_continue, unknown, unknown, organization_continue, organization_continue]. Because 中壢天晟醫院 rarely occurs, it might not appear as an organization name in training set during the 4-fold cross validation experiment. The Viterbi search cannot deal with sequences containing unknown tags. With an appropriate post-processing procedure, this kind of error can be resolved. We can treat the unknown tag as x_continue in a certain window size.  4.3.2 Other Errors  In this section, we show error cases associated with each named entity category.  A. Person Names The summary report in Table 8 shows that the precision and recall rates for person names are 97.9% and 87.4%, respectively. The major errors are listed below. \\  (1) The surname character of a person name is not in surname list or the given-name character is not in the given-name character list. Therefore, some of the person features are not set to 1. For example, 李哖 (Lee Nian) are not recognized because 哖 (Nian) is not in the given-name character list. (2) A person name follows a single-character word which can be a surname. For example, 戴 is both a surname (Dai) and a verb (wear) in Chinese lexicon. However, in 頭戴李應元的帽子 (wear Lee Ying Yuan’s Hat), 戴 means wear while Mencius mistakenly considers 戴 as a surname. Therefore, Mencius mistakenly recognizes 戴李應 (Dai Lee-Ying) as a person name rather than the correct person name 李應 元 (Lee, Ying-Yuan). (3) Several person names appear consecutively while all of their given names are omitted. Since the context of two person names and one person name are similar, Mencius may mistakenly extract an incorrect name. For example, in the sentence 吳、黃二人在他就職前兩天 , Mencius extracts 黃二人 from it. However, 二人 in English means “both”, not the given name. (4) Transliterated names are not defined in the person name category in Mencius. However, some transliterated person names look like Chinese person names. Therefore, Mencius mistakenly extracts 柯林頓 (Clinton), 夏馨 (Shaheen) from sentences. (5) Some Japanese and Korean person names look like Chinese person names. For example, Mencius mistakenly extracts 盧武鉉 (Roh, Moo Hyun) from sentences.  B. Location Names The summary report in Table 8 shows the precision and recall rates for location names are 78.6% and 69.4%, respectively. The major errors are listed below.  (1) Location names within an organization name are extracted but the organization name is not recognized. For example, 韓國東洋製果 (Korea Orion Food) is not recognized as an organization name, but 韓國 (Korea) is recognized as a location name. (2) The location name is abbreviated. For example, 台 (Tai), the abbreviated form of 台 灣 (Taiwan), is not recognized in some cases.  (3) The Chinese usually call a market street. For example, 電子街 (Electronics St.) represents an electronics market. However, this is an informal name.  C. Organization Names Table 8 shows the precision and recall rate for organization name recognition are 94.4% and 62.6%, respectively. We illustrate standard error analysis with examples.  (1) The organization name is a bilingual term. For example, eBay 台灣 (eBay Taiwan) is not recognized. (2) The organization name is in Type II, III, or IV category (defined in Section 3.2.3). For example, 韓國東洋製果 (Korea Orion Food), 東洋製果公司 (Korea Orion Food Corporation), and 東洋製果 (Orion Food). (3) Several organization names appear consecutively while part of each name is omitted. For example, in 台北市龍安, 信義, 吳興等國小 (Taipei Long-Ann, Hsin-Yi, and Wu-Xin elementary schools) , 龍安 (Long-Ann), 信義 (Xin-Yi) and 吳興 (Wu-Xin) are not recognized as organizations because the organization ending boundary markers are abbreviated. (4) The organization name is a foreign organization name, which is not considered by our organization template. For example, 日本農林中央金庫 (The Norinchukin Bank) is not recognized as an organization name. (5) The organization name is an exception. In 台北縣第二所國中 (the second junior high school in Taipei county), 第二所 means “the second”, and appear in the wildcard part of template [ 通用地理. 台灣. 縣 ]:$$(2..13): 國中 ([GeoMap.Taiwan.Counties]: $$(2..13):Junior-High-School). We need more out of vocabulary (OOV) knowledge to represent all the number plus quantifier patterns. "]},{"title":"5 Conclusions ","paragraphs":["In this paper, we developed a Chinese NER system, Mencius, which does not rely on the word segmentation module. Instead, we model the NER problem as a character-based tagging problem. Mencius uses ME modeling combining advantages of rule-based and ML-based NER systems. Our hybrid system uses a rule-based knowledge representation system, InfoMap, and incorporates it into the ME framework. The F-Measures of person names (PER), location names (LOC) and organization names (ORG) in the experiment are respectively 92.4%, 73.7% and 75.3%. These are comparatively better than the results obtained by pure rule-based and pure ME-based method.   We are persuaded Mencius can be improved in the following directions. We only use internal features that are category-dependent in this version. In the future, we will collect more features, especially external ones. In addition, we will design a post-processing module to deal with the data sparseness problem. Moreover, we will use document level context information to recognize abbreviated names which cannot be recognized at present. "]},{"title":"References ","paragraphs":["[1] S. H. Wu, M. Y. Day, T. H. Tsai, and W. L. Hsu, \"FAQ-centered Organizational Memory,\" in Knowledge Management and Organizational Memories, R. Dieng-Kuntz, Ed. Boston: Kluwer Academic Publishers, 2002. [2] J. Sun, J. F. Gao, L. Zhang, M. Zhou, and C. N. Huang, \"Chinese Named Entity Identification Using Class-based Language Model,\" presented at the 19th International Conference on Computational Linguistics,, 2002. [3] R. Grishman, \"Information Extraction: Techniques and Challenges,\" in Information Extraction: A Multidisciplinary Approach to an Emerging Information Technology, J. G. Carbonell, Ed. Frascati, Italy: Springer, 1997, pp. 10-26. [4] S. Coates-Stephens, \"The Analysis and Acquisition of Proper Names for Robust Text Understanding,\" in Dept. of Computer Science. London: City University, 1992. [5] N. Chinchor, \"MUC-6 Named Entity Task Definition (Version 2.1),\" presented at the 6th Message Understanding Conference, Columbia, Maryland, 1995. [6] N. Chinchor, \"MUC-7 Named Entity Task Definition (Version 3.5),\" presented at the 7th Message Understanding Conference, Fairfax, Virginia, 1998. [7] A. Mikheev, C. Grover, and M. Moensk, \"Description of the LTG System Used for MUC-7,\" presented at the 7th Message Understanding Conference, Fairfax, Virginia, 1998. [8] S. Miller, M. Crystal, H. Fox, L. Ramshaw, R. Schwartz, R. Stone, and R. Weischedel, \"BBN: Description of the SIFT System as Used for MUC-7,\" presented at the 7th Message Understanding Conference, Fairfax, Virginia, 1998. [9] D. Bikel, R. Schwartz, and R. Weischedel, \"An Algorithm that Learns What's in a Name,\" Machine Learning, 1999. [10] A. Borthwick, J. Sterling, E. Agichtein, and R. Grishman, \"NYU: Description of the MENE Named Entity System as Used in MUC-7,\" presented at the 7th Message Understanding Conference, Fairfax, Virginia, 1998.  [11] A. Borthwick, \"A Maximum Entropy Approach to Named Entity Recognition,\" New York University, 1999. [12] N. Chinchor, \"Statistical Significance of MUC-6 Results,\" presented at the 6th Message Understanding Conference, Columbia, Maryland, 1995. [13] N. Chinchor, \"Statistical Significance of MUC-7 Results,\" presented at the 7th Message Understanding Conference, Fairfax, Virginia, 1998. [14] N. Chinchor, \"MUC-7 Test Score Reports for all Participants and all Tasks,\" presented at the 7th Message Understanding Conference, Fairfax, Virginia, 1998. [15] H. H. Chen, Y. W. Ding, S. C. Tsai, and G. W. Bian, \"Description of the NTU System Used for MET2,\" presented at the 7th Message Understanding Conference, Fairfax, Virginia, 1998. [16] S. H. Yu, S. H. Bai, and P. Wu, \"Description of the Kent Ridge Digital Labs System Used for MUC-7,\" presented at the 7th Message Understanding Conference, Fairfax, Virginia, 1998. [17] A. Berger, S. A. Della Pietra, and V. J. Della Pietra, \"A maximum entropy approach to natural language processing,\" Computational Linguistics, vol. 22, pp. 39-71, 1996. [18] J. N. Darroch and D. Ratcliff, \"Generalized iterative scaling for log-linear models,\" Annals of Mathematicl Statistics, vol. 43, pp. 1470-1480, 1972. [19] A. J. Viterbi, \"Error Bounds for Convolutional Codes and an Asymptotically Optimum Decoding Algorithm,\" IEEE Transactions on Information Theory, vol. IT, pp. 260-269, 1967. [20] D. McDonald, \"Internal and External Evidence in the Identification and Semantic Categorization of Proper Names,\" in Corpus Processing for Lexical Acquisition, J. Pustejovsky, Ed. Cambridge, MA: MIT Press, 1996, pp. 21-39.  "]}]}