{"sections":[{"title":"","paragraphs":["Proceedings of the 2006 Australasian Language Technology Workshop (ALTW2006), pages 107–114."]},{"title":"Questions require an answer: A deductive perspective on questions and answers Willemijn Vermaat Centre for Logic, Language and Computation Victoria University Wellington, New Zealand vermaat@mcs.vuw.ac.nz Abstract","paragraphs":["Direct questions such as “Who saw Mary?” intuitively request for a certain type of answer, for instance a noun phrase “John” or a quantified noun phrase such as “A man”. Following the structured meaning approach to questions, we propose an analysis of wh-questions in type-logical grammar that incorporates the requirement for a certain type of answer into the type assigned to wh-phrases. Interestingly, the syntactic and semantic decomposition leads to a derivability pattern between instances of wh-phrases. With this pattern we can explain the difference between wh-pronouns (‘who’) and wh-determiners (‘which’), and derive wh-questions that require multiple answers."]},{"title":"1 Introduction","paragraphs":["In this paper, we discuss the uniform basis of different types of wh-questions focusing on the dependency relation between questions and answers. In loose terms, a wh-question can be interpreted as a sentence which still requires an answer. The answer to a question such as “‘Who saw Mary?” serves as an argument of the main or embedded verb clause. In more formal terms, the meaning assembly of the above wh-question may be represented by the lambda term, λx.((see m) x). We show that by incorporating the dependency relation between questions and answers into the lexical type-assignments of wh-phrases, wh-questions can be instantiated in an uniform way.","Section 2 gives a short introduction in type-logical grammar and introduces the basic setup of the grammatical reasoning system. In section 3, we briefly discuss two approaches to the semantics of questions: the proposition set approach and the structured meaning approach. Section 4 provides the syntactic and semantic type of wh-questions and introduces a wh-type schema to identify wh-phrases. Additionally, we show how meaning assembly for wh-questions is derived on the basis of a structured meaning approach to questions and answers. In section 5, we show how we can derive type alternations for wh-phrases which lead to derivability schemata between instances of wh-type schema. Finally, in section 6, we analyze different types of question-answer combinations and multiple wh-questions in English on the basis of these derivability schema. We finish with the conclusion and some pointers for future research."]},{"title":"2 Type-logical grammar","paragraphs":["Type-logical grammar (Moortgat, 1997) offers logical tools that can provide an understanding of both the constant and the variable aspects of linguistic form and meaning.1","Type-logical grammar is a strongly lexicalised grammar formalism, which, in the case of a categorial system, means that a derivation is fully driven by the types assigned to lexical elements: these types are the basic declarative units on which the computational system acts. The basis for the type system is a set of atomic or basic types. The full set of types is then built out of these basic types by means of a set of type-forming operations. We consider unary and binary type-forming operations. The unary type-forming operations are ♦ (diamond) and (box). The binary ones are the two slashes /, \\ (forward and backward slash) and • (prod-","1","Combinatory categorial grammar (Steedman, 2000) is a related approach with a comparable notation. However, note the differences in notation and the proof-theoretic setup. 107 uct). In this paper, we will only consider the binary operators concentrating on the meaning of wh-questions. The unary operators are not visible in the analyses discussed in this paper, but play a role in deriving the right word-order of the wh-expressions. The inductive definition below characterises the full set of types built out of a set of atomic or basic types A. F ::= A | F /F | F • F | F \\F | F | ♦F","The type system is used to classify groups of expressions with a similar grammatical behavior. An expression belongs to a certain category depending on its grammatical relation to other expressions. The basic categories n, np and s are used to classify for nouns, noun phrases and sentences, expressions that are complete in themselves, i.e. expressions for which we have grammaticality judgments that do not depend on their relation with other expressions. Slash categories express incompleteness with respect to some other expressions. A product category represents the composition of two expressions. An expression of category A/B is incomplete with respect to an expression of category B on its right (symmetrically for B\\A). A category such as vp for verbs is not needed as a basic category because verbs can be defined in relation to their arguments. In particular, tensed intransitive verbs are characterised as compound categories of type np\\s. The type specifies that the verb is incomplete and needs an expression of category np on its left to form an expression of category s.","Complex expressions are built from their sub-part using a deductive reasoning system. The goal is to proof that a complex expression belongs to a certain category. In this paper, we use the sequentstyle presentation originally due to Gentzen to present derivations. An expression Γ of category A is represented as Γ ⊢ A. The proof for a certain expression consists of an deductive analysis over the different types of formulas. Each operator comes with a set of introduction and elimina-tion rules ([\\E], [\\I], [/E], [/I]). The derivation of a complex expression is a relation between a structure and a formula.","Structures are built out of elementary structures, formulas, that are built with structure building operations. In this paper the structure building operator is restricted to the binary operator (· ◦ ·) which combines two substructures and preserves linear order and dominance with respect to the subformulas. In the structures, instead of writing formulas, we write the headword that belongs to a certain category (cf. sleeps ⊢ np\\s). To save space, we will display the lexical insertion, the axioms, as follows: sleeps np\\s","For a more elaborate introduction in the proof-theoretical aspects of type-logical grammar, we refer the reader to Vermaat (2006)."]},{"title":"3 Semantics of questions","paragraphs":["Many theories that account for the semantics of questions relate the meaning of a question to its possible answers (for an overview, see Groenendijk and Stokhof (1997). Two approaches of relating questions and answers are the proposition set approach (Hamblin, 1958; Karttunen, 1977) in which questions represent propositions; and the approach which Krifka (2001) named the structured meaning approach, also referred to as the functional or categorial approach (Groenendijk and Stokhof, 1984). In this latter approach, the interrogative in combination with its answer forms a statement.","The proposition set approach (Hamblin, 1958) influenced the logical approach to the semantics of questions (Karttunen, 1977; Groenendijk and Stokhof, 1984). Hamblin (1958) stated that to determine the meaning of an interrogative one has to inspect what kind of statement can serve as a response:“an answer to a question is a sentence, or statement”. The theory implements the idea that the semantic status of an answer is a proposition and that the syntactic form of an answer is irrelevant.","The structured meaning approach is sometimes referred to as the functional or categorial approach. The approach is developed by logicians and semanticists and supports the idea that the meaning of a question is dependent on the meaning of the answer and vice versa. Along similar lines, Hiż (1978) points out that questions and their answers are not autonomous sentences, but that they form a semantic unit — a question-answer pair. We briefly discuss the structured meaning approach. Structured meaning approach An appropriate answer to a single constituent question may be any 108 type of syntactic object. This might be a generalized quantifier phrase or a verb phrase, as well as a noun phrase or prepositional phrase. Additionally, in multiple wh-questions, different combinations of syntactic objects can be used as an answer. The wh-question directs the kind of answers that can be expected.","(1) a. ‘ Who saw Mary?’ John, nobody, John’s sister, . . .","b. ‘ Which man did John see?’ His father, the neighbor, . . .","c. ‘ Who saw whom?’ pair list reading: John (saw) Bill, Mary (saw) Sue, . . . functional reading: every professor/his student, John/his sister As the sentences illustrate, the answers have a direct relation to the interrogative phrase in the question. To capture the relation between the question and its possible answer type, the structured meaning approach formulates the idea that the question and answer form a unit, both syntactically and semantically. Syntactically, the interrogative in combination with its answer forms an indicative sentence or a question-answer sequence. This syntactic unit is reflected in the semantics where the question meaning is a function that yields a proposition when applied to the meaning of answer (Krifka, 2001).","Within the type-logical grammar framework, a functional view on question and answer types comes quite naturally, as shown in work of Hausser (1983) and more recently in Bernardi and Moot (2003). We will follow the structured meaning approach and show that the diversity in answer types can be derived from uniformly typed wh-phrases."]},{"title":"4 Question and answer types","paragraphs":["In a structured meaning approach questions are expected to be functions that, when applied to an answer, yield a proposition. In this section, we spell out wh-questions as types that reflect the functor-argument relation between a wh-question and its response. In section 4.1 and 4.2, we show how this relation is captured in the syntactic type definition of wh-questions and wh-phrases. In section 4.3, we determine the effects on the meaning assembly of wh-questions. 4.1 Type definition of wh-questions Adopting a structured meaning approach of questions, we incorporate the type of possible answers into the type of the wh-question. Generalizing over the possible types of answers and questions, we decompose wh-questions into the following type: syntactic category semantic type B/?A = A → B The semantic type A → B is a direct mapping from the components of the syntactic category B/?A. A is the semantic type of category A which is the type of the expected answer. B is the semantic type of category B which is the type of the question-answer sequence.","Notice that the type connective has an additional index ?. We use this index to capture a compositional difference between predicates and arguments on a sentential level (structural composition relation: ◦) and between questions and answers on a dialogue level (structural composition relation: ◦?). Following the structured meaning approach, we assume question-answer sequences to form a syntactic and semantic unit. Syntactically, we assume the question-answer sequence to belong to category s. Semantically, the question-answer sentence is a proposition which has a certain truth value, similar to declarative clauses. Before we look at how this question type determines the meaning of wh-questions, we need to know how wh-phrases are categorised. 4.2 Wh-type schema We use an abbreviated type schema, a three-place operator, to lexically identify wh-elements. The selectional requirements of wh-phrases are encoded into this operator type schema and result in an uniform interpretation of wh-questions2",". The type schema can be decomposed into the usual type-connectives of the base logic (Moortgat, 1997; Vermaat, 2006).","We adopt the q-type schema which was proposed by Moortgat (1991) to account for in-situ binding of generalized quantifier phrases. We propose a three-place type schema, WH, ranging over three subtypes: WH(A, B, C). The three variables","2","In Vermaat (2006), we recognise three structural variants of the wh-type schema that account for cross-linguistics variation in the word-order of wh-questions. 109 indicate the categories of substructures where a wh-phrase acts on. B is the category of the body of the wh-question; A is the category of the expression that the wh-phrase represents; C is the type of the result of merging the body of the wh-question with the wh-phrase. Variable A is the category of the ‘gap’ in the question body, which in this framework is introduced as an hypothesis, and occupies a structural position relative to the predicate.","The following inference rule defines the merging an arbitrary wh-phrase (= Γ) and a question body which contains an hypothesis of category A (= ∆[A]).3","The result of merging the wh-phrase and the body is a structure ∆[Γ] in which the wh-phrase replaces the gap hypothesis. ∆[A] ⊢ B",".... Γ ⊢ WH(A, B, C) ∆[Γ] ⊢ C Example We analyze the direct question ‘ Who saw Bill?’. The wh-phrase ‘ who’ is categorised as the wh-type schema, WH(np, s, s/?(s/(np\\s))). When the wh-phrase is applied to its question body it yields a wh-question of category s/?(s/(np\\s)), a sentence which is incomplete for a generalized quantifier. For ease of exposition we abbreviate s/(np\\s) to gq. The reason for choos-ing this type for ‘ who’ is that the answer could be a np typed phrase as well as generalized quantifier phrase (section 6).","The following derivation shows the analysis of the wh-question in a natural deduction style with the abbreviated inference rule for merging the wh-phrase. [np ⊢ np]1","saw (np\\s)/np bill np","saw ◦ bill ⊢ np\\s [/E] np ◦ (saw ◦ bill) ⊢ s [\\E]",".... who ⊢ WH(np, s, s/?gq),1 who ◦ (saw ◦ bill) ⊢ s/?gq The main clause is built as usual, only the subject argument phrase is a hypothesised np argument instead of an actual noun phrase. After the body of the clause s is derived, the wh-phrase merges with the question body and replaces the np hypothesis, yielding a clause of type s/?gq. 3 Γ[∆] is the representation of a structure Γ, a sequence of","formulas which contains a substructure ∆. 4.3 Meaning assembly of wh-questions To get a good understanding of the meaning representation of a wh-question, it’s good to be aware of the type construction in the semantic type language. The semantic type that corresponds to the wh-type schema takes the corresponding semantic types of each subtype in the type schema and arranges them. Wh-type schema WH(A, B, C) maps to the following semantic type:","(A →(2) B) →(1)","C The semantic type reveals the inherent steps encoded in the rule schema. →(1)","is the application step, merging a wh-phrase with the body. →(2) represents abstraction of the hypothesis, with-drawing the gap from the body of the wh-question.","Following the Curry-Howard correspondence each syntactic type formula is mapped to a corresponding semantic type. In turn, we interpret each expression by providing a semantic term that matches the semantic type. The semantic term assigned to wh-type schema WH(A, B, C) is term operator ω which corresponds to the above semantic type. After merging the wh-phrase and the question body, the syntactic derivation yields the following semantic term for wh-questions:","(ω λxA .BODYB",")C In this term, BODY is the term computed for the body of the wh-question which contains the hypothesis A associated with term variable x. Applying the ω-operator to the lambda abstraction of x over the term of the question body yields a term of the expected semantic type, C. Example We present the last step in the derivation of the wh-question ‘ Who saw Bill?’ illustrat-ing the the semantic composition of the wh-phrase with the question body. x : np ◦ (saw ◦ bill) ⊢ ((see b) x) : s",".... who ⊢ ω : WH(np, s, s/?gq)","who ◦ (saw ◦ bill) ⊢ (ω λx.((see b) x)) : s/?gq","The precise meaning representation of a wh-question depends, however, on the kind of wh-phrase that constitutes a wh-question. We argue that, at least for argument wh-phrases, different wh-type schema can be derived from a single wh-type schema. The basic case for wh-phrases is a wh-type schema that ranges over higher-order 110 typed answers: WH(np, s, s/?gq). The ω-operator that captures the meaning assembly of this wh-type schema can be regarded as a logical constant. The definition of the ω-operator generalises over different types of wh-phrases:","ω = λP A→B .λQ(A→B)→B",".(Q P ) Example The meaning assembly for the wh-question ‘ Who saw Bill?’ is derived from the syntactic analysis of the sentence. The syntactic category and the lexical meaning assembly of the wh-phrase ‘ who’ is:","who ⊢ λP (et) .λQ(et)t",".(Q P ) : WH(np, s, s/?gq) The semantic term assignment to ‘ who’ derives the right meaning assembly for a wh-question ‘ Who saw Bill?’. Who saw Bill? ⊢ λQ.(Q λx.((see m) x)) : s/?gq","On the basis of this type-assignments for wh-phrases, we can derive different instances of the wh-type schema using axioms in the semantic type language (Moortgat, 1997)."]},{"title":"5 Derivability patterns","paragraphs":["Incorporating the answer type into the wh-type schema enables us to derive different instances of wh-type schema. On the basis of this derivability pattern, we can account for answer restrictions of certain wh-phrases and for the derivation of multiple wh-questions in section 6. 5.1 Semantic derivability The derivability pattern of wh-type schema is based on three theorems that are derivable in semantic type language: type-lifting, geach and exchange. We illustrate each rule in semantic type language and present the meaning assembly for each type-shifting rule.","[type-lifting] A ⊢ (A → B) → B","x ↦→ λy.(y x)","[geach] B → A ⊢ (C → B) → (C → A)","x ↦→ λy.λz.(x (y z))","[exchange] C → (D → E) ⊢ D → (C → E) x ↦→ λz.λy.((x y) z)","Using these theorems, we can derive two additional laws argument lowering and dependent geach. argument lowering The type-lifting rule lifts any arbitrary type A to a type (A → B) → B. The type lifting may alter the answer type to fit the answer type requested by the wh-question. From the type-lifting rule, we can also derive the rule for argument lowering which encodes the alternation of the answer type in the wh-type schema.","((A → B) → B) → C ⊢ A → C x ↦→ λy.(x λz.(z y)) dependent geach The geach rule adds an additional dependent to both the main clause type A and its argument type B. Again, each type may be a complex type. The exchange rule captures the reordering of two dependents. If the geach rule is applied to a complex type (D → E) → (B → A), the result type is the complex type (C → (D → E)) → (C → (B → A)). Additionally, we apply exchange to the consequent and the antecedent of the geach type and shift the order of the dependent types. We obtain a type-shifting rule which we refer to as dependent geach by combining the two rules. (D → E) → (B → A) ⊢","(D → (C → E)) → (B → (C → A)) x ↦→ λz.λy.λv.((x λu.((z u) v)) y)","The theorems in the semantic type language reveal that under certain assumptions a number of type alternations are also derivable in the syntactic formula language. In Vermaat (2006), we show that argument lowering and dependent geach are derivable in the grammatical reasoning system. Applying the two rules to different instances of wh-type schema gives us derivability patterns between instances of wh-type schema. In figure 1, the syntactic derivability pattern of wh-type schemata is presented abstractly4",". The syntactic pattern maps to the meaning assembly pattern as presented in figure 2."]},{"title":"6 Linguistic application","paragraphs":["The syntactic decomposition of wh-question types into types that are part of an question-answer sequence adds polymorphism to the wh-type schemata. The semantic representation of wh-questions reflects the question’s requirement for","4","For the actual syntactic derivation, we need to reason structurally over unary operators ♦ and , see Vermaat (2006). 111 Argument lowering Dependent geach ▶ WH(np, s, s/?np)","▼ WH(np, s, s/?gq) WH(np, s/?np, (s/?np/?np) ▶ WH(np, s/?np, (s/?np/?gq) ▲ Dependent geach Argument lowering Figure 1: Syntactic derivability pattern of wh-type schemata Argument lowering Dependent geach ▶ λQ.Q","▼","λP ′","λQ′",".(Q′ P ′ ) λP ′",".λx.λy.((P ′","y) x) ▶ λP.λQ.λR.(Q λz.((P z) R)) ▲ Dependent geach Argument lowering Figure 2: Meaning assembly of derivability patterns certain types of answers. In this section, we explore the linguistic application of the derivability pattern for wh-question formation.","In section 6.1, we focus on the derivation of single constituent questions in English. We discuss the syntactic and semantic consequences of argument lowering for the derivation of question-answer sequences in local wh-questions. In section 6.2, we discuss multiple wh-questions in English. We show that we can account for the derivation of multiple wh-questions on the basis of deriving geach types for both ex-situ and in-situ type schema. And as a result derive the correct meaning assembly for multiple wh-questions. 6.1 Single constituent questions A single constituent question requires a single constituent answer. We concentrate here on argument wh-phrases to illustrate the relation between a wh-question and possible answers. We will look at direct questions where the associated gap hypothesis appears in the local domain.","In direct questions in English a fronted wh-phrase associates with a np gap hypothesis. The expected answer, however, depends on the kind of wh-phrase. Wh-questions with argument wh-phrases such as ‘ what’ or ‘ who’ expect either a referential or a quantified noun phrase. Wh-questions with which-determiners only expect a referential noun phrase as an answer. On the basis of the derivability pattern of wh-ex-situ types we can account for the distinction between the two types of wh-phrases. First, we discuss the lexical type-assignments of wh-pronouns. Then, we present the contrast with wh-determiners. Wh-pronouns A suitable answer to a wh-question such as ‘ Who saw Bill?’ might be a referential noun phrase e.g. ‘ John’, as well as a generalized quantifier phrase e.g. ‘ everyone’. To allow both types of answers, ‘ who’ and ‘ whom’ are assigned the following wh-type schema in the lexicon.","who(m) ⊢ λP et .λQ(et)t",".(Q P ) WH(np, s, s/?(s/(np\\s)))","The sentence in 2 is an example of the different kinds of question-answer sequences that can be derived using the given type-assignments for wh-pronouns. The type that is derived for subject wh-questions is a s-typed clause which is incomplete for a lifted np type, (s/(np\\s)). A generalized quantifier phrase can be merged directly, while referential noun phrases such as ‘ John’ in example 2b have to be lifted before they can be merged. Along with the syntactic category, lifting alters the semantic type of the answer in such a way that the lifted type matches the semantic type requested 112 by the interrogative clause. The semantic term is computed as usual. The same line of reasoning applies to the derivation of question-answer pairs with non-subject argument wh-questions.","(2) Who saw Mary? ⊢ λQ(et)t",".(Q λx.((see m) x)) : s/?(s/(np\\s)","a. Answer: ‘every man’ ⊢ gq ∀y((man y) → ((see m) y))","b. Answer: ‘John’ ⊢ np (λP.(P j) λx.((see m) x)) β (λx.((see m) x) j) β ((see m) j) Wh-determiners Suitable answers to wh-questions that are built with wh-determiners like ‘ which’ are restricted to definite noun phrases. The semantic difference between wh-phrases and wh-determiners lies in the specific denotation of the which-phrases. For instance, the wh-question ‘ Which man saw Mary?’ can be paraphrased as ‘ Who is the man that saw Mary?’. The person who utters the question and the hearer already have the background knowledge that the person who saw Mary is a man. A definite answer is the most likely response. This gives us evidence to assume that a wh-determiner has a minimal type-assignments that derives a question of type: s/?np. On the basis of this assumption, wh-determiners belong to a wh-type that yields a question of type s/?np. The semantic term that matches this type reveals the definiteness of the answer that is requested.","which ⊢ WH(np, s, s/?np)/n λV.λP.λx.(x = ιy.((V y) ∧ (P y)))","On the basis of this type-assignments we can derive the following question-answer sequence in example 3a, while the answer in 3b is underivable.","(3) Which man saw Mary? ⊢ s/?np λx.(x = ιy.(man y) ∧ ((see m) y)) a. Answer: ‘John’ ⊢ np j = ιy.((man y) ∧ ((see m) y)) b. Which man saw Mary? ⊢ s/?np Answer: ∗ ‘every man’ ⊢ gq 6.2 Multiple wh-questions With the derivability pattern of wh-type schema using dependent Geach, as presented in section 5, we can derive multiple wh-questions from a single type-assignments to a wh-phrase in the lexicon. Multiple wh-questions in English are recognised by a single wh-phrase that appears at the front of the main clause, whereas additional wh-phrases appear embedded. In Vermaat (2006), we have explored the syntax of multiple wh-phrases. Wh-phrases that occur in-situ are lexically categorised as:","wh-in-situ ⊢ WHin(np, s/?np, (s/?np)/?np)","This type encodes that the wh-phrase may only appear in-situ in a wh-question body of type s/?np, i.e. a sentence which already contains a wh-phrase. The wh-type schema encodes that a wh-phrase merges with a question body of type s/?np, which contains a gap hypothesis of type np. Notice that the wh-in-situ type schema can be derived from WHin(np, s, s/?gq) using argument lowering and dependent geach. By assigning wh-in-situ phrases the above type, we correctly derive that ‘ whom’ can never occur in-situ in a phrase that does not have a fronted wh-phrase. With this minimal type-assignments the wh-in-situ phrase is always dependent on the occurrence of another wh-phrase (s/?gq). This dependency is reflected in both syntax and semantics.","Syntactically, the wh-in-situ phrase is dependent on the occurrence of the subject wh-phrase. Semantically, the lambda abstraction binds the type of the subject wh-phrase over the object wh-phrase. ex-situ who ⊢ λR.λQ.(Q R) : WH(np, s, s/?gq) in-situ whom ⊢ λP.λx.λy.((P y) x) :","WHin(np, s/?np, (s/?np)/?np) On the basis of this type-assignments and the usual wh-type schema assigned to the subject wh-phrase, we derive the multiple wh-question ‘ Who saw whom’ in Fig. 3. In the derivation the inference steps are represented as structure ⊢ type whereas the meaning assembly is written below the sequent."]},{"title":"7 Conclusion and future research","paragraphs":["In this paper, we have discussed the syntactic and semantic consequences of a structured meaning approach to wh-questions. In a structured meaning approach, wh-questions are taken to be incomplete sentences that are part of a question-answer sequence. We have proposed to decompose wh-questions into a type A/?B where A is the type 113","whom","WHin(np, s/?np, (s/?np)/?np) λP λx.λy.((P y) x)","who WH(np, s, s/?gq) λP.λQ.(Q P ) [u : np]1 saw","(np\\s)/np [z : np]2 saw ◦ np ⊢ np\\s [/E] np ◦ (saw ◦ np) ⊢ s [\\E]","((see z) u) who ◦ (saw ◦ np) ⊢ s/?gq [WH]1 λQ.(Q λu.((see z) u)) who ◦ (saw ◦ np) ⊢ s/?np [lowering]","λu.((see z) u) who ◦ (saw ◦ whom) ⊢ (s/?np)/?np [WHin]2","λx.λy.((λz.λu.((see z) u) y) x) ∗","β λx.λy.((see y) x) Figure 3: Derivation of multiple wh-question of the question-answer sequence and B is the type of the answer. With the syntactic decomposition of wh-types, we have been able to express the semantic decomposition of the semantic ω-operator as a λ-term.","Additionally, the syntactic and semantic decomposition of the type for wh-questions leads to a derivability pattern of wh-type schemata. This pattern provides generalizations for different question answer sequences. For instance, the difference between wh-pronouns and wh-determiners and the derivation of multiple wh-questions. The presented sentences have been computed using the on-line parser for type-logical grammars. See http://grail.let.uu.nl/~vermaat for further analyses of this specific grammar fragment and that of other languages.","The theoretical results in this paper have been limited to argument wh-phrases. Next step is to see how the derivability schema and the wh-type schema apply to other types of wh-phrases, such as adverbial wh-phrases. Additionally, we would like to investigate additional logical axioms that may lead to further generalizations for natural language analysis. For a practical purpose, it would be interesting to see whether the theoretical issues addressed in this paper could be used in existing question-answer dialogue systems, for example to validate the answer."]},{"title":"Acknowledgments","paragraphs":["The Netherlands Organisation for Scientific Research (NWO) for providing the Rubicon grant."]},{"title":"References","paragraphs":["Raffaella Bernardi and Richard Moot. 2003. Generalized quantifiers in declarative and interrogative sentences. Logic Journal of the IGPL, 11(4):419–34.","Jeroen Groenendijk and Martin Stokhof. 1984. Studies on the semantics of questions and the pragmatics of answers. Ph.D. thesis, University of Amsterdam.","Jeroen Groenendijk and Martin Stokhof. 1997. Questions. In Johan van Benthem and Alice ter Meulen, editors, Handbook of Logic and Language, chapter 19, pages 1055–1124. Elsevier, Amsterdam.","C.J. Hamblin. 1958. Questions. Australasian Journal of Philosophy, 36:159–68.","Roland Hausser. 1983. The syntax and semantics of english mood. In Ferenc Kiefer, editor, Questions and Answers, pages 97–158. Reidel, Dordrecht.","Henry Hiż. 1978. Difficult questions. In Henry Hiż, editor, Questions. Reidel, Dordrecht/Boston.","Lauri Karttunen. 1977. Syntax and semantics of questions. Linguistics and Philosophy, 1:3–44.","Manfred Krifka. 2001. For a structured meaning account of questions and answers. In C. Fery and W. Sternefeld, editors, Audiatur Vox Sapientia. A Festschrift for Arnim von Stechow, pages 287–319. Akademie Verlag, Berlin.","Michael Moortgat. 1991. Generalized quantifiers and discontinuous type constructors. In W. Sijtsma and A. van Horck, editors, Discontinuous constituency. De Gruyter.","Michael Moortgat. 1997. Categorial type logics. In Johan van Benthem and Alice ter Meulen, editors, Handbook of Logic and Language, chapter 2, pages 93–177. Elsevier, Amsterdam.","Glyn Morrill. 1994. Type Logical Grammar. Categorial Logic of Signs. Kluwer, Dordrecht.","Mark Steedman. 2000. The syntactic process. The MIT Press, Cambridge, MA.","Willemijn Vermaat. 2006. The Logic of Variation: a Cross-linguistic account of Wh-question Formation in type-logical grammar. Ph.D. thesis, Utrecht University, UiL-OTS, January. 114"]}]}