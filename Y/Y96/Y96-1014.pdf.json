{"sections":[{"title":"","paragraphs":["Language, Information and Computation(PACLIC 11), 1996, 129-136","A Logical Structure for the Construction of Machine Readable Dictionaries Byung Jin Choi**, Jae Sung Lee*, Woon Jae Lee* and Key Sun Choi*","*Department of Computer Science, KAIST **Center for Artificial Intelligence Research, KAIST Abstract","During the last 10 years, there have been many efforts in some areas of Natural Language Processing to encode the normal text or documents into machine readable form. If we encode written data using a canonical form which can be recognized by a computer, we can extract needed information and process and utilize it for another purposes. From this point of view, we present an account of the encoding of a printed dictionary. The construction of a lexicon is very time-consuming and expensive work and the application of the lexicon is restricted. In this paper, we describe a logical structure for Korean printed dictionaries as a general lexical representation based on SDML, which can be transformed into another representation for different application requirements. 1. Introduction","With the rapid development of the computer technology, there are many efforts in some area of Natural Language Processing to convert normal text or documents into machine readable form. If we convert written data into a canonical form which can be recognized by computer, we can extract needed information and process and utilize it for another purpose.","In order to do this, we need to encode documents in a markup system. For the last 10 years, there have been many approaches to develop a mark-up system in many NLP projects. A Mark-up system is a set of instruction, with which a document or text can be stored in a formalized form. In other words, we can build complex data structures with a limited number of tags of this mark-up system.","In the development of mark-up systems, standardization problems have been an issue. At the beginning of the 1980s, some researchers tried to develop encoding system and at last SGML (Standardized Generalized Markup Language) and TEI (Text Encoding Initiative) are emerged. With the help of SGML or TEI many documents or texts are structured as DTD (Document Type Definition) of SGML or TEI (Bryan 1988, Ide et a1.1995, Sperberg-McQueen et al. 1994).","In this paper, we present an account of the encoding of printed dictionary. The construction of a lexicon for a limited application domain is both time-consuming and expensive. When we define and implement a lexicon only for some natural language applications, we cannot re-use this lexicon for another applications. To avoid this problem, we can encode the lexical information in a standard format. If we have the lexical information in a standard format, we can transform into the machine readable form or vice versa.","If a lexical information in one system is compatible with another application, we can reuse the existing standard lexicon and save our efforts to build a lexicon. Such a 129 reusability of existing lexical information is the main focus of this paper. Calzolari has distinguished two kinds of reusability (Kugler 1995). One is transforming already existing lexical resources into a different format, typically transforming printed dictionaries into a machine readable or machine tractable form (Amsler 1988, Alshawi 1989). The other is exploiting already existing lexical resources for different theories and -typically - for different applications (Briscoe et al. 1993, Hajicovi & Rosen 1994). Such an idea is realised in this work.","In order to maintain the reusablity of lexical information, we have developed the Standard Dictionary Markup Language (SDML). With SDML we can define the logical structure of lexicon and store lexical information independent of specific applications, data structures and theories.","With the help of decoding program we can import the lexical information from printed dictionaries, text corpora, and some lexical databases into the standard dictionary. This information from the standard dictionary is then available for various natural language applications. In other countries there have been many such projects during the last 10 years. But we have no representative work on machine readable dictionary or electronic dictionary yet, except for the work of Kang (1996) about encoding Korean dictionaries. Kang adopted the TEI scheme for the encoding of Korean dictionary entries. We have tried an SDML-based encoding, which is adapted to dictionary entries. Because of its simplicity, it is easy to create a lexicon structure that can be applied across various possible dictionaries. 2. Standard Dictionary Markup Language (SDML)","SDML is used to define the various dictionary formats. Once the dictionaries and text formats are defined using SDML, they can be easily for the standardization and interchange of the information.","In a SDML definition we have three parts, header, front (pre-definition) and entry group. <Header> is used for dictionary information such as dictionary name, dictionary version etc. In <Front>, the attributes and values which are needed for internal structure are defined. The <entry group> comprises the lexical information of dictionaries. Entries are repeated, in which the headword (lexical entry) is described.","<sd> <sdHeader> [header information] </sdHeader> <group> <entry> </entry> <entry> <wname> [headword] </wname> <body> [standard dictionary elements] </body> <wname> [headword] </wname> <body> [standard dictionary elements] </body> </entry> [Repetition of entry] </group> </sd> The elements which occur in <body> are regarded as standard dictionary format. 130 It can have only one field as a default value, or also have complex tree structures. A user can define the logical structure of lexicon in <body> and this definition is overriding and is overwritten the default definition. For the definition in SDML, it seems to be similar to SGML, we have some restrictions in using the rules.","1) In the content model, we use the occurrence indicators, \"1\", +̀' and \"?', and as connectors ,̀' and Ì'. The connector 8̀E.' is redundant for defining the dictionary format.","2) For reasons of compatibility, predefined tags should be used. (in the upgrade version, the more standard tags will be defined.) The default definition for <body> is following: <!ELEMENT body -","\\t (#PCDATA)* > In order to build a new structure for <body>, we only need to write the definition for needed elements. As an example we can change the structure of <body> with the overwriting definition of <pos> and <del>. <!DOCTYPE\\tsd\\tSYSTEM \"sdml.dtd\" [ <!ELEMENT\\tbody - o\\t(pos, def) > <!ELEMENT pos - o\\t(#PCDATA) > <!ELEMENT def - o\\t(#PCDATA) > ]> <sd> <!-- the instance of the above dictionary format --> </sd> 3. Representation of lexical entries in SDML","The first thing that we take into account is how to encode lexical information in order to extract relevant information efficiently. Each dictionary has a different structure (macro structure) and each dictionary entry varies extremely in its structure (micro structure) both within and among dictionaries. (Ide et al. 1995)","Therefore, it is very difficult to find a general structural description which can be applied across all possible dictionaries.","In dictionary compiling, the macro structure is associated with the order of lexical entries. How to find a word in dictionary (e.g. according to alphabet or concept) is the problem of constructing macro structure. How the information of headword is organized is the problem of micro structure design. In Korean dictionaries, the macro structure may vary a lot, therefore only the micro structure of lexical entries is described.","There are many kinds of Korean dictionaries (Samsung, Minjung, Kumsung, Donga etc.). We have compared these dictionaries, analysed each lexical entry and specified the atomic elements which appear in a dictionary entry. Many of them are 131 different in their internal structure but there are also relevant common elements. The common lexical information is following: headword (orthography), homograph number, pronunciation, part of speech, inflection class, etymology, terminology classification, usage information, definition, cross-reference, related headword ( antonym, synonym, hyponym etc. ), example, source, saying, idiom, derivation","This information is hierarchically organized. As a top level there is a information of word form which comprises pronunciation, orthography, and foreign orthography. At the same level as the lexical entries, we have grammatical information, semantic information, and derivational morphological information. All these are subclassified and contain specified information in their respective subhierarchies. This internal structure can be displayed as a tree: Lexical entry","Headword+ —orthography","—headword number (homograph number)","i—pronunciation+","_foreign orthography+ chinese notaion roman notation","_grammatical information - part of speech - inflection form - etymology","korean etymology","foreign etymology - subcategorization","_semantic information+ - polysemy number - terminology area+ - explanation - usage information*","usage example","usage example source - saying information*","saying","saying explanation - idiom information*","idiom example","idiom explanation - cross-reference*","alternative headword","relation of alternative headword __derivation - extended wordform - part of speech 132 This graphic representation is encoded in SDML in the following way: DTD definition <!DOCTYPE WDDIC [ <!ELEMENT WDDIC - - (le)+ > <!ELEMENT le - - (hw , hwn , (fn I pr)+ , (gi , si+)+ ,wfext*) > <!ELEMENT hw - - (#PCDATA) > <!ELEMENT hwn - 0 (#PCDATA) > <!ELEMENT fn - - (ch I rom) > <!ELEMENT ch - 0 (#PCDATA) > <!ELEMENT rom - 0 (#PCDATA) > <!ELEMENT pr - 0 (#PCDATA) > <!ELEMENT gi - - (pos , fl? , etym?, subc?) > <!ELEMENT pos - 0 (#PCDATA) > <!ELEMENT fl - 0 (#PCDATA) > <!ELEMENT etym - - (ketm fetm) > <!ELEMENT ketm - 0 (#PCDATA) > <!ELEMENT fetm - 0 (#PCDATA) > <!ELEMENT subc - 0(#PCDATA) > <!ELEMENT si - - (num , term+ , expl , usage*,","saying* , idiom* , althw*) > <ELEMENT num - 0 (#PCDATA) > <!ELEMENT term - 0 (#PCDATA) > <!ELEMENT expl - 0 (#PCDATA) > <ELEMENT usage - - (us_ex , us_source?) > <!ELEMENT us_ex - 0 (#PCDATA) > <!ELEMENT us_source - 0 (#PCDATA) > <ELEMENT saying - - (sng , sng ex?) > <!ELEMENT sng - 0 (#PCDATA) > <!ELEMENT sng ex - 0 (#PCDATA) > <!ELEMENT idiom - - (idm , idm ex) > <!ELEMENT idm 0 (#PCDATA) > <!ELEMENT idm ex - 0 (#PCDATA) > <!ELEMENT alt hw - (hw , alt_hw_rel) > <!ELEMENT althwrel - 0 (#PCDATA) > <!ELEMENT wf ext - - (hw , pos)+ > 1> Explanation Dictionary lexical entry headword homograph number foreign notation chinese notation roman notation pronunciation grammatical information part of speech inflection form etymology korean etymology foreign etymology subcategorization semantic information polysemy number terminology area explanation usage information usage example usage example source saying information saying example saying explanation idiom information idiom example idiom explanation alternative headword (cross-reference) relation of alternative headword extended wordform: derivation 4. Conclusion","In this paper, we tried to describe the structure of a Korean standard dictionary, which is first encoded in a standard format and can then be reused for various applications. On the basis of SDML, we could define a DTD for the logical structure of standard dictionary. If a standard dictionary can be organized this way, we can extract many useful linguistic information and utilize many kind of dictionaries such as synonym dictionary, antonym dictionary, idiom dictionary, example dictionary, and dictionaries for morphological analysis etc. Furthermore we can process these 133 dictionaries and use them for NLP systems, e.g. machine translation, automatic language analysis, and information retrieval etc. In this way we can save time and effort for building other lexicons for specific purpose. We have implemented this standard dictionary in TDMS (Text and Database Management System). In the future, we will concentrate on the implementation of structured information retrieval for extracting arbitrary information from the lexical database. Furthermore, the integration of non-monotonic logic is desirable for the lexical organization."]},{"title":"Acknowledgements","paragraphs":["The research described here was undertaken as a part of the project 'Korea Information Base System' by the support of Ministry of Science & Technology and Ministry of Culture & Sports in Korea and the project 'Multimedia Hangeul Engineering' supported by Samsung Co.."]},{"title":"References","paragraphs":["Alshawi, Hiyan. 1989. Processing Dictionary Definitions with Phrasal Pattern Hierarchies. In B. Boguraev and E. Briscoe, eds., Computational Lexicography for Natural Language Processing, 153-170. London and New York: Longman.","Amsler, Robert A., and W. Tompa. 1988. An SGML-based Standard for English Monolingual Dictionaries. In Proceedings of the 4th Annual Conference of the UW Centre for the New Oxford English Dictionary, 61-80. Ontario: Waterloo.","Boguraev, Bran. 1991. Special Issue on Computational Lexicons. International Journal of Computational Lexicography 4.","Boguraev, Bran. 1994. Machine-readable dictionaries and computational linguistics research. In A. Zampolli, N. Calzolari, and M. Palmer, eds., Linguistica Computationale, Vol. LY.X Current Issues in Computational Linguistics: in Honor of Don Walker, 119-154. Dordrecht: Kluwer Academic Pub.","Boguraev, Bran., and T. Briscoe (eds.). 1989. Computational Lexicography for Natural Language Processing. London and New York: Longman.","Briscoe, Ted, V. de Paiva, and A. Copestake (eds.). 1993. Inheritance, Defaults, and the Lexicon. Cambridge: Cambridge University Press.","Bryan, Martin. 1988. SGML: An Author's Guide to the Standard Generalized Markup Language. Addison-Wesley","Copestake, Ann. 1990. An Approach to Building the hierarchical Element of a Lexical Knowledge Base from a Machine Readable Dictionary. In Proceedings of the First International Workshop on Inheritance in Natural Language Processing, 19-29. Tilburg.","EDR. 1993. EDR Electronic Dictionary Technical Guide. Japan Electronic Dictionary Research Institute. Hajicova, Eva, and R. Alexander. 1994. Machine Readable Dictionary as a Source of 134 Grammatical Information. In A. Zampolli, N. Calzolari, and M. Palmer, eds., Linguistica Computationale, Vol."]},{"title":"ax","paragraphs":["Current Issues in Computational Linguistics: in Honor of Don Walker, 191-199. Dordrecht: Kluwer Academic Publishers.","Ide, Nancy, and J. Veronis. 1995. Encoding Dictionaries. In: Nancy Ide & Jean Veronis , eds., Text Encoding Initiative, 167-180. Dordrecht: Kluwer Academic Pub.","Kang, Beommo. 1996. Using the TEI Scheme in Compiling a Korean Dictionary. In ALLC-ACH'96 (6), 162-165. Bergen.","Kugler, Marianne, K. Ahmad, and G. Thurmair (eds.). 1995. Translator's Workbench: Tools and Terminology for Translation and Text Processing. Berlin: Springer-Verlag.","Sperberg-McQueen, C.M. and L. Burnard (eds.). 1994. Guidelines for Electronic Text Encoding and Interchange (TEI P3). Chicago and Oxford.","Sperberg-McQueen, C.M. and N. Ide. 1995. The TEI: History, Goals, and2 Future. In Nancy Ide & Jean Veronis , eds., Text Encoding Initiative, 5-16. Dordrecht: Kluwer Academic Pub.","Zampolli, A., Calzolari, N., and M. Palmer 1994. Linguistica Computationale, Vol. IXX Current Issues in Computational Linguistics: in Honor of Don Walker. Dordrecht: Kluwer Academic Publishers. 135","Appendix: Example of a Korean lexical entry and its representation in SDML"]},{"title":"[1] [mil] (—zi-d-_) -avid","paragraphs":["o"]},{"title":"m\\t","paragraphs":["/","mt- el 4 /\\tAi 131 ().1 Litt . [714r1\\t}4 **4]. 7} 1}","E- 61 V c'i 711 c',1\\tl-}4-1\\t°1 4. [71-q01 4+] 71-'02471 141E- 011\\ttgA1511-1 71-k1- 01-ti er- 74 01 2_--7/11r-1-. [71-qt.\\t 11/1' Oa°1\\tq11-a\" 131 -Pr\\t. 7}oa( 01) 14.\\tC) 71-kft1-711 51 u1- .\\tV3,1\"0: 31°1 o"]},{"title":"I","paragraphs":["\\t.","<entry>","<male> 7}-a- </mane>","<hwn> 1","<pr>\\t</pr>","<gi> <pos> tgAl- </pos>","</g i>","<si> <nut> 1 <expl> V1)4 0171- ti viti.xl\\t</expl> <usage>","<us_ex> 41-at 1","<us_ex>\\t71-k4:1","<us_ex>\\t71-k1.-.01A1 </usage> <sayinp <11118>\\tLi-el-m <sag_expl>\\tE-01\\t711 °i-N-E. 44","91 711°---T--m </saying> <saying> <sag> 7PC1"]},{"title":":1","paragraphs":["\\tt-01.2:-Y; <sng_expl>\\ttiL c of\\t41 -a- 41 -Pr tre </saying> <idiom> <ids> 71-k1-( 01) -t--q- <idiuexpl> Cs 49:4711 514. ©z 11","1_- 3.1\\t471 °i\\t. </idiom> <altirs>","<Mr>","<altjur_rel> 1(51 </al t_hw>","</si>","<wfext> <hs>\\t<Ars> <pos> *A1- </pos>","<hrfext>","</miry> 136"]}]}