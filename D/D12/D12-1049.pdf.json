{"sections":[{"title":"","paragraphs":["Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pages 535–545, Jeju Island, Korea, 12–14 July 2012. c⃝2012 Association for Computational Linguistics"]},{"title":"Modelling Sequential Text with an Adaptive Topic ModelLan Du","paragraphs":["∗"]},{"title":"Department of ComputingMacquarie UniversitySydney, Australia","paragraphs":["lan.du@mq.edu.au"]},{"title":"Wray Buntine","paragraphs":["∗"]},{"title":"Canberra Research LabNational ICT AustraliaCanberra, Australia","paragraphs":["wray.buntine@nicta.com.au"]},{"title":"Huidong Jin","paragraphs":["∗"]},{"title":"CSIRO Mathematics, Informaticsand Statistics,Canberra, Australia","paragraphs":["warren.jin@csiro.au"]},{"title":"Abstract","paragraphs":["Topic models are increasingly being used for text analysis tasks, often times replacing earlier semantic techniques such as latent semantic analysis. In this paper, we develop a novel adaptive topic model with the ability to adapt topics from both the previous segment and the parent document. For this proposed model, a Gibbs sampler is developed for doing posterior inference. Experimental results show that with topic adaptation, our model significantly improves over existing approaches in terms of perplexity, and is able to uncover clear sequential structure on, for example, Herman Melville’s book “Moby Dick”."]},{"title":"1 Introduction","paragraphs":["Natural language text usually consists of topically structured and coherent components, such as groups of sentences that form paragraphs and groups of paragraphs that form sections. Topical coherence in documents facilitates readers’ comprehension, and reflects the author’s intended structure. Capturing this structural topical dependency should lead to improved topic modelling. It also seems reasonable to propose that text analysis tasks that involve the structure of a document, for instance, summarisation and segmentation, should also be improved by topic models that better model that structure.","Recently, topic models are increasingly being used for text analysis tasks such as summarisa-","∗","This work was partially done when Du was at College of Engineering & Computer Science, the Australian National University when working together with Buntine and Jin there. tion (Arora and Ravindran, 2008) and segmenta-tion (Misra et al., 2011; Eisenstein and Barzilay, 2008), often times replacing earlier semantic techniques such as latent semantic analysis (Deerwester et al., 1990). Topic models can be improved by better modelling the semantic aspects of text, for instance integrating collocations into the model (Johnson, 2010; Hardisty et al., 2010) or encouraging topics to be more semantically coherent (Newman et al., 2011) based on lexical coherence models (Newman et al., 2010), modelling the structural aspects of documents, for instance modelling a document as a set of segments (Du et al., 2010; Wang et al., 2011; Chen et al., 2009), or improving the underlying statistical methods (Teh et al., 2006; Wallach et al., 2009). Topic models, like statistical parsing methods, are using more sophisticated latent variable methods in order to model different aspects of these problems.","In this paper, we are interested in developing a new topic model which can take into account the structural topic dependency by following the higher level document subject structure, but we hope to retain the general flavour of topic models, where components (e.g., sentences) can be a mixture of topics. Thus we need to depart from the earlier HMM style models, see, e.g., (Blei and Moreno, 2001; Gruber et al., 2007). Inspired by the idea that documents usually exhibits internal structure (e.g., (Wang et al., 2011)), in which semantically related units are clustered together to form semantically structural segments, we treat documents as sequences of segments (e.g., sentences, paragraphs, sections, or chapters). In this way, we can model the topic correlation be-535 ⃗μ ⃗ν1 ⃗ν2 ⃗ν3 ⃗ν4 ⃗μ ⃗ν1 ⃗ν2 ⃗ν3 ⃗ν4 ⃗μ ⃗ν1 ⃗ν2 ⃗ν3 ⃗ν4 (H) (S) (M) ⃗μ ⃗ν1 ⃗ν2 ⃗ν3 ⃗ν4 (B) Figure 1: Different structural relationships for topics of sections in a 4-part document, hierarchical (H), sequential (S), both (B) or mixed (M). tween the segments in a “bag of segments” fashion, i.e., beyond the “bag of words” assumption, and reveal how topics evolve among segments.","Indeed, we were impressed by the improvement in perplexity obtained by the segmented topic model (STM) (Du et al., 2010), so we considered the problem of whether one can add sequence information into a structured topic model as well. Figure 1 illustrates the type of structural information being considered, where the vectors are some representation of the content. STM is represented by the hierarchical model. A strictly sequential model would seem unrealistic for some documents, for instance books. A topic model using the strictly sequential model was developed (Du et al., 2012) but it reportedly performs halfway between STM and LDA. In this paper, we develop an adaptive topic model to go beyond a strictly sequential model while allow some hierarchical influence. There are two possible hybrids, one called “mixed” has distinct breaks in the sequence, while the other called “both” overlays both sequence and hierarchy and there could be relative strengths associated with the arrows. We employ the “both” hybrid but use the relative strengths to adaptively allow it to approximate the “mixed” hybrid.","Research in Machine Learning and Natural Language Processing has attempted to model various topical dependencies. Some work considers structure within the sentence level by mixing hidden Markov models (HMMs) and topics on a word by word basis: the aspect HMM (Blei and Moreno, 2001) and the HMM-LDA model (Griffiths et al., 2005) that models both short-range syntactic dependencies and longer semantic dependencies. These models operate at a finer level than we are consider-ing at a segment (like paragraph or section) level. To make a tool like the HMM work at higher levels, one needs to make stronger assumptions, for instance as-signing each sentence a single topic and then topic specific word models can be used: the hidden topic Markov model (Gruber et al., 2007) that models the transitional topic structure; a global model based on the generalised Mallows model (Chen et al., 2009), and a HMM based content model (Barzilay and Lee, 2004). Researchers have also considered timeseries of topics: various kinds of dynamic topic models, following early work of (Blei and Lafferty, 2006), represent a collection as a sequence of subcollections in epochs. Here, one is modelling the collections over broad epochs, not the structure of a single document that our model considers.","This paper is organised as follows. We first present background theory in Section 2. Then the new model is presented in Section 3, followed by Gibbs sampling theory and algorithm in Sections 4 and 5 respectively. Experiments are reported in Section 6 with a conclusion in Section 7."]},{"title":"2 Background","paragraphs":["The basic topic model is first presented in Section 2.1, as a point of departure. In seeking to develop a general sequential topic model, we hope to go beyond a strictly sequential model and allow some hierarchical influence. This, however, presents two challenges: modelling and statistical inference. Hierarchical inference (and thus sequential inference) over probability vectors can be handled using the theory of hierarchical Poisson-Dirichlet processes (PDPs). This is presented in Section 2.2. 2.1 The LDA model The benchmark model for topic modelling is latent Dirichlet allocation (LDA) (Blei et al., 2003), a latent variable model of documents. Documents are indexed by i, and words ⃗w are observed data. The latent variables are ⃗μi (the topic distribution for a document) and ⃗z (the topic assignments for observed words), and the model parameter of ⃗φk’s (word distributions). These notation are later extended in Ta-536 ble 1. The generative model is as follows: ⃗φk ∼ DirichletW (⃗γ) ∀ k ⃗μi ∼ DirichletK (⃗α) ∀ i zi,l ∼ DiscreteK (⃗μi) ∀ i, l","wi,l ∼ DiscreteK ( ⃗φzi,l) ∀ i, l . DirichletK (·) is a K-dimensional Dirichlet distribution. The hyper-parameter ⃗γ is a Dirichlet prior on word distributions (i.e., a Dirichlet smoothing on the multinomial parameter ⃗φk (Blei et al., 2003)) and the Dirichlet prior ⃗α on topic distributions. 2.2 Hierarchical PDPs A discrete probability vector ⃗μ of finite dimension K is sampled from some distribution Fτ (⃗μ0) with a parameter set, say τ , and is also dependent on a parent probability vector ⃗μ0 also of finite dimension K. Then a sample of size N is taken according to the probability vector ⃗μ, represented as ⃗z ∈ {1, ..., K}N",". This data is collected into counts ⃗n = (n1, ..., nK ) where nk is the number of data in ⃗z with value k and ∑","k nk = N . This situation is represented as follows: ⃗μ ∼ Fτ (⃗μ0); ⃗zi ∼ DiscreteK (⃗μ) for i = 1, ..., N . Commonly in topic modelling, the Dirichlet distribution is used for discrete probability vectors. In this case Fτ (⃗μ0) ≡ DirichletK (b⃗μ0), τ ≡ (K, b) where b is the concentration parameter. Bayesian analysis yields a marginalised likelihood, after integrating out ⃗μ, of","p ( ⃗z∣ ∣τ, ⃗μ0, Dirichlet)","= Beta (⃗n + b⃗μ0)","Beta (b⃗μ0) , (1) where Beta(·) is the vector valued function normalising the Dirichlet distribution. A problem here is that p(⃗z|b, ⃗μ0) is an intractable function of ⃗μ0.","Dirichlet processes and Poisson-Dirichlet processes alleviate this problem by using an auxiliary variable trick (Robert and Casella, 2004). That is, we introduce an auxiliary variable over which we also sample but do not need to record. The auxiliary variable is the table count1","which is a tk for each nk","1","Based on the Chinese Restaurant analogy (Teh et al., 2006), each table has a dish, a data value, while data, the customer, is assigned to tables, and multiple tables can serve the same dish. and it represents the number of “tables” over which the nk “customers” are spread out. Thus the following constraints hold: 0 ≤ tk ≤ nk and tk = 0 iff nk = 0 . (2) When the distribution over probability vectors follows a Poisson-Dirichlet process which has two parameters τ ≡ (a, b) and the parent distribution ⃗μ0, then Fτ (⃗μ0) ≡ PDP(a, b, ⃗μ0). Here a is the dis-count parameter, b the concentration parameter and ⃗μ0 the base measure. In this case Bayesian analysis yields an augmented marginalised likelihood (Buntine and Hutter, 2012), after integrating out ⃗μ, of","p (","⃗z, ⃗t∣","∣τ, ⃗μ0, PDP)","= (b|a)T","(b)N ∏","k Snk","tk,a (μ0,k)tk","(3) where T = ∑","k tk, (x|y)N = ∏N−1","n=0 (x + ny) denotes the Pochhammer symbol, (x)N = (x|1)N , and SN M,a is a generalized Stirling number that is readily tabulated (Buntine and Hutter, 2012).","There are two fundamental things to notice about Equation (3). Positively, the term in ⃗μ0 takes the form of a multinomial likelihood, so we can propagate it up and perform inference on ⃗μ0 unencumbered by the functional mess of Equation (1). Thus Poisson-Dirichlet processes allow one to do Bayesian reasoning on hierarchies of probability vectors (Teh, 2006; Teh et al., 2006). Negatively, however, one needs to sample the auxiliary variables ⃗t leading to some problems: The range of tk, {0, ..., nk}, is broad. Also, contributions from in-dividual data zi have been lost so the mixing of the MCMC can sometimes be slow. We confirmed these problems on our first implementation of the Adaptive Topic Model presented next in Section 3.","A further improvement on PDP sampling is achieved in (Chen et al., 2011), where another auxiliary variable is introduced, a so-called table indicator, that for each datum zi indicates whether it is the “head of its table” (recall the nk data are spread over tk tables, each table has one and only one “head”). Let ri = 1 if zi is the “head of its table,” and zero otherwise. According to this “table” logic, the number of tables for nk must be the number of data zi that are also head of table, so tk = ∑N","i=1 1zi=k1ri=1. Moreover, given this definition, the first constraint of Equation (2) on tk is 537 automatically satisfied. Finally, with tk tables then there must be exactly tk heads of table, and we are indifferent about which data are heads of table, thus","p ( ⃗z, ⃗r∣ ∣τ, ⃗μ0, PDP)","= p (","⃗z, ⃗t∣","∣τ, ⃗μ0, PDP)∏","k (","nk","tk )−1",".","(4)","When using this marginalised likelihood in a Gibbs","sampler, the zi themselves are usually latent so also","sampled, and we develop a blocked Gibbs sampler","for (zi, ri). Since ⃗r only appears indirectly through","the table counts ⃗t, one does not need to store the ⃗r,","instead just resamples an ri when needed according","to the proportion tw/nw where zi = w."]},{"title":"3 The proposed Adaptive Topic Model","paragraphs":["In this section an adaptive topic model (AdaTM) is developed, a fully structured topic model, by using a PDP to simultaneously model the hierarchical and the sequential topic structures. Documents are as-sumed to be broken into a sequence of segments. Topic distributions are used to mimic the subjects of documents and subtopics of their segments. The no-tations and terminologies used in the following sections are given in Table 1.","In AdaTM, the two topic structures are captured by drawing topic distributions from the PDPs with two base distributions as follows. The document topic distribution ⃗μi and the jth","segment topic dis-Table 1: List of notation for AdaTM K number of topics I number of documents Ji number of segments in document i Li,j number of words in document i, segment j W number of words in dictionary ⃗μi document topic probabilities for document i ⃗α K-dimensional prior for each ⃗μi ⃗νi,j segment topic probabilities for document i and segment j ρi,j mixture weight associating with the link between ⃗νi.j and ⃗νi,j−1 ⃗Φ word probability vectors as a K × W matrix ⃗φk word probability vector for topic k, entries in Φ ⃗γ W -dimensional prior for each ⃗φk wi,j,l word in document i, segment j, position l zi,j,l topic for word wi,j,l w L z I K α μ ν γ φ 1 ν2 1 w L z 2 。。。 νJ w L z J 。。。 λ Figure 2: The adaptive topic model: ⃗μ is the document topic distribution, ⃗ν1, ⃗ν2, . . . , ⃗νJ are the segment topic distributions, and ⃗ρ is a set of the mixture weights. tribution ⃗νi,j are linearly combined to give a base distribution for the (j + 1)th","segment’s topic distribution ⃗νi,j+1. The topic distribution of the first segment, i.e., ⃗νi,1, is drawn directly with the base distribution ⃗μi. Call this generative process topic adaptation. The graphical representation of AdaTM is shown in Figure 2, and clearly shows the combination of sequence and hierarchy for the topic probabilities. Note the linear combination at each node ⃗νi,j is weighted with latent proportions ρi,j.","The resultant model for AdaTM is: ⃗φk ∼ DirichletW (⃗γ) ∀ k ⃗μi ∼ DirichletK (⃗α) ∀ i ρi,j ∼ Beta(λS, λT ) ∀ i, j ⃗νi,j ∼ PDP (ρi,j⃗νi,j−1 + (1 − ρi,j)⃗μi, a, b) zi,j,l ∼ DiscreteK (⃗νi,j) ∀ i, j, l","wi,j,l ∼ DiscreteK ( ⃗φzi,j,l) ∀ i, j, l . For notational convenience, let ⃗νi,0 = ⃗μi. Assume the dimensionality of the Dirichlet distribution (i.e., the number of topics) is known and fixed, and word probabilities are parameterised with a K ×W matrix ⃗Φ = (⃗φ1, ..., ⃗φK )."]},{"title":"4 Gibbs Sampling Formulation","paragraphs":["Given observations and model parameters, comput-ing the posterior distribution of latent variables is in-feasible for AdaTM due to the intractable computa-538 Table 2: List of statistics for AdaTM Mi,k,w the total number of words in document i with dictionary index w and being assigned to topic k Mk,w","total Mi,k,w for document i, i.e., ∑ i Mi,k,w ⃗Mk vector of W values Mk,w ni,j,k topic count in document i segment j for topic k Ni,j","topic total in document i segment j, i.e.,∑K k=1 ni,j,k ti,j,k table count in the CPR for document i and paragraph j, for topic k that is inherited back to paragraph j − 1 and ⃗μi,j−1. si,j,k table count in the CPR for document i and paragraph j, for topic k that is inherited back to the document and ⃗μi. Ti,j total table count in the CRP for document i and segment j, equal to ∑K","k=1 ti,j,k. Si,j total table count in the CRP for document i and segment j, equal to ∑K","k=1 si,j,k. ⃗ti,j table count vector of ti,j,k’s for segment j. ⃗si,j table count vector of si,j,k’s for segment j. tion of marginal probabilities. Therefore, we have to use approximate inference techniques. This section proposes a blocked Gibbs sampling algorithm based on methods from Chen et al. (2011). Table 2 lists all statistics needed in the algorithm. Note for easier understanding, terminologies of the Chinese Restaurant Process (Teh et al., 2006) will be used, i.e., customers, dishes and restaurants, correspond to words, topics and segments respectively.","The first major complication, over the use of the hierarchical PDP and Equation (3) and the table indicator trick of Equation (4), is handling the linear combination of ρi,j⃗νi,j−1 + (1 − ρi,j)⃗μi used in the PDPs. We manage this as follows: First, Equation (3) shows that a contribution of the form (μ0,k)tk","results. In our case, this becomes","∏","k (ρi,jνi,j−1,k + (1 − ρi,j)μi,k)t′ i,j,k where t′","i,j,k is the corresponding introduced auxiliary variable the table count which is involved with constraints on ni,j,k +ti,j+1,k, from Equation (2). To deal with this power of a sum, we break the counts t′ i,j,k into two parts, those that contribute to ⃗νi,j−1 and those that contribute to ⃗μi. We call these parts ti,j,k and si,j,k respectively. The product can then be expanded and ρi,j integrated out. This yields:","Beta (Si,j + λS, Ti,j + λT ) ∏","k νti,j,k","i,j−1,kμsi,j,k","i,k . The powers νti,j,k","i,j−1,k and μsi,j,k","i,k can then be pushed up to the next nodes in the PDP/Dirichlet hierarchy. Note the standard constraints and table indicators are also needed here.","The precise form of the table indicators needs to be considered as well since there is a hierarchy for them, and this is the second major complication in the model. As discussed in Chen et al. (2011), table indicators are not required to be recorded, instead, randomly sampled in Gibbs cycles. The table indicators when known can be used to reconstruct the table counts ti,j,k and si,j,k, and are reconstructed by sampling from them. For now, denote the table indicators as ui,j,l for word wi,j,l.","To complete a formulation suitable for Gibbs sampling, we first compute the marginal distribution of the observations ⃗w1:I,1:J (words), the topic assignments ⃗z1:I,1:J and the table indicators ⃗u1:I,1:J . The Dirichlet integral is used to integrate out the document topic distributions ⃗μ1:I and the topic-by-words matrix ⃗Φ, and the joint posterior distribution computed for a PDP is used to recursively marginalise out the segment topic distributions ⃗ν1:I,1:J . With these variables marginalised out, we derive the following marginal distribution","p(⃗z1:I,1:J , ⃗w1:I,1:J , ⃗u1:I,1:J ∣ ∣ ⃗α, ⃗γ, a, b) = (5) I ∏ i=1","BetaK ( ⃗α + ∑Ji","j=1 ⃗si,j) BetaK (⃗α) K ∏ k=1","BetaW ( ⃗γ + ⃗Mk) BetaW (⃗γ) I ∏ i=1 Ji ∏","j=1 Beta (Si,j + λS, Ti,j + λT ) (b|a)Ti,j+Si,j (b)Ni,j+Ti,j+1 I ∏ i=1 Ji ∏ j=1 K ∏ k=1","( (ni,j,k + ti,j+1,k) (ti,j,k + si,j,k) )−1","Sni,j,k+ti,j+1,k","ti,j,k+si,j,k,a . And the following constraints apply: ti,j,k + si,j,k ≤ ni,j,k + ti,j+1,k, (6) ti,j,k + si,j,k = 0 iff ni,j,k + ti,j+1,k = 0 . (7) The first constraint falls out naturally when table indicators are used. For convenience of the formulas, 539 set ti,Ji+1,k = 0 (there is no Ji + 1 segment) and ti,1,k = 0 (the first segment only uses ⃗μi).","Now let us consider again the table indicators ui,j,l for word wi,j,l. If this word is in topic k at document i and segment j, then it contributes a count to ni,j,k. It also indicates if it contributes a new table, or a count to t′","i,j,k for the PDP at this node. However, as we discussed above, this then contributes to either ti,j,k or si,j,k. If it contributes to ti,j,k, then it recurses up to contribute a data count to the PDP for document i segment j − 1. Thus it also needs a table indicator at that node. Consequently, the table indicator ui,j,l for word wi,j,l must specify whether it contributes a table to all PDP nodes reachable by it in the graph.","We define ui,j,l specifically as ui,j,l = (u1, u2) such that u1 ∈ [−1, 0, 1] and u2 ∈ [1, · · · , j], where u2 indicates segment denoted by node νj up to which wi,j,l contributes a table. Given u2, u1 = −1 denotes wi,j,l contributes a table count to si,u2,k and ti,j′",",k for u2 < j′","≤ j; u1 = 0 denotes wi,j,l does not contribute a table to node u2, but contributes a table count to ti,j′",",k for u2 < j′","≤ j; and u1 = 1 denotes wi,j,l contributes a table count to each ti,j′",",k for u2 ≤ j′","≤ j.","Now, we are ready to compute the conditional probabilities for jointly sampling topics and table indicators from the model posterior of Equation (5)."]},{"title":"5 Gibbs Sampling Algorithm","paragraphs":["The Gibbs sampler iterates over words, doing a blocked sample of (zi,j,l, ui,j,l). The first task is to reconstruct ui,j,l since it is not stored. Since the posterior of Equation (5) does not explicitly mention the ui,j,l’s, they occur indirectly through the table counts, and we can randomly reconstruct them by sampling them uniformly from the space of possibilities. Following this, we then remove the values (zi,j,l, ui,j,l) from the full set of statistics. Finally, we block sample new values for (zi,j,l, ui,j,l) and add them to the statistics. The new ui,j,l is subsequently forgotten and the zi,j,l recorded. Reconstructing table indicator ui,j,l: We start at the node indexed i, j. If si,j,k +ti,j,k = 1 and ni,j,k + ti,j+1,k > 1 then no tables can be removed since there is only one table but several customers at the table. Thus ui,j,l = (u1, u2) = (0, j) and there is no sampling. Otherwise, by symmetry arguments, we sample u1 via p(u1 = −1, 0, 1|u2 = j, zi,j,l = k) ∝ (si,j,k, ti,j,k, ni,j,k + ti,j+1,k − si,j,k − ti,j,k) , since there are ni,j,k +ti,j+1,k data distributed across the three possibilities. If after sampling u1 = −1, the data contributes a table count up to ⃗μi and so ui,j,l = (u1, u2) = (−1, j). If u1 = 0, the ui,j,l = (u1, u2) = (0, j). Otherwise, the data contributes a table count up to the parent PDP for ⃗νi,j−1 and we recurse, repeating the sampling process at the parent node. Note, however, that the table indicator (0, j′",") for j′","< j is equivalent to the table indicator (1, j′","+ 1) as far as statistics is concerned. Block sampling (zi,j,l, ui,j,l): The full set of possibilities are, for each possible topic zi,j,l = k: • no tables are created, so ui,j,l = (0, j),","• tables are created contributing a table count all the way up to node j′","(≤ j) but stop at j′","and do not subsequently contribute a count to ⃗μi, so ui,j,l = (1, j′","),","• tables are created contributing a table count all the way up to node j′","≤ j but stop at j′","and also subsequently contribute a count to ⃗μi, so ui,j,l = (−1, j′","). These three possibilities lead to detailed but fairly straight forward changes to the posterior of Equation (5). Thus a full blocked sampler for (zi,j,l, ui,j,l) can be constructed. Estimates: learnt values of ⃗μi, ⃗νi,j, ⃗φk are needed for evaluation, perplexity calculations, etc. These are estimated by taking averages after the Gibbs sampler has burnt in, using the standard posterior means for Dirichlets and Poisson-Dirichlets."]},{"title":"6 Experiments","paragraphs":["In the experimental work, we have three objectives: (1) to explore the setting of hyper-parameters, (2) to compare the model with the earlier sequential LDA (SeqLDA) of (Du et al., 2012), STM of (Du et al., 2010) and standard LDA, and (3) to view the results in detail on a number of characteristic problems. 540 Table 3: Datasets #docs #segs #words vocab Pat-A 500 51,748 2,146,464 16,573 Pat-B 397 9,123 417,631 7,663 Pat-G06 500 11,938 655,694 6,844 Pat-H 500 11,662 562,439 10,114 Pat-F 140 3,181 166,091 4,674 Prince-C 1 26 10,588 3,292 Prince-P 1 192 10.588 3,292 Moby Dick 1 135 88,802 16,223 6.1 Datasets For general testing, five patent datasets are randomly selected from U.S. patents granted in 2009 and 2010. Patents in Pat-A are selected from international patent class (IPC) “A”, which is about “HUMAN NECESSITIES”; those in Pat-B are selected from class “B60” about “VEHICLES IN GENERAL”; those in Pat-H are selected from class “H” about “ELECTRICITY”; those in Pat-F are selected from class “F” about “MECHAN-ICAL ENGINEERING; LIGHTING; HEATING; WEAPONS; BLASTING”; and those in Pat-G are selected from class “G06” about “COMPUTING; CALCULATING; COUNTING”. All the patents in these five datasets are split into paragraphs that are taken as segments, and the sequence of paragraphs in each patent is reserved in order to maintain the original layout. All the stop words, the top 10 common words, the uncommon words (i.e., words in less than five patents) and numbers have been removed.","Two books used for more detailed investigation are “The Prince” by Niccolò Machiavelli and “Moby Dick” by Herman Melville. They are split into chapters and/or paragraphs which are treated as segments, and only stop-words are removed. Table 3 shows in detail the statistics of these datasets after preprocessing. 6.2 Design Perplexity, a standard measure of dictionary-based compressibility, is used for comparison. When reporting test perplexities, the held-out perplexity measure (Rosen-Zvi et al., 2004) is used to evaluate the generalisation capability to the unseen data. This is known to be unbiased. To compute the held-out perplexity, 20% of patents in each data set was ran-1025 50 100 150 200 250 300800 900 1000 1100 1200 1300 b Perplexity   Pat−B Pat−F Pat−G Pat−H (a) fix a = 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.90.90.9800 950 1100 1250 a Perplexity   Pat−B Pat−G Pat−H Pat−F (b) fix b = 10 Figure 3: Analysis of parameters of Poisson-Dirichlet process. (a) shows how perplexity changes with b; (b) shows how it changes with a. 0 50 100 150 200 600700800900100011001200 Lamda_S Perplexity   Pat−B Pat−F Pat−G Pat−H Pat−A (a) fix λT = 1 0 50 100 150 200 600700800900100011001200 Lamda_T Perplexity   Pat−A Pat−B Pat−F Pat−H Pat−G (b) fix λS = 1 Figure 4: Analysis of the two parameters for Beta distribution. (a) how perplexity changes with λS; (b) how it changes with λT . domly held out from training to be used for testing. For this, 1000 Gibbs cycles were done for burn-in followed by 500 cycles with a lag for 100 for parameter estimation.","We implemented all the four models, e.g., LDA, STM, SeqTM and AdaTM in C, and ran them on a desktop with Intel Core i5 CPU (2.8GHz×4), even though our code is not multi-threaded. Perplexity calculations, data input and handling, etc., were the same for all algorithms. We note that the current AdaTM implementation is an order of magnitude slower than regular LDA per major Gibbs cycle. 6.3 Hyper-parameters in AdaTM Experiments on the impact of the hyper-parameters on the patent data sets were as follows: First, fixing K = 50, the Beta parameters λT = 1 and λS = 1, optimise symmetric α, and do two variations fix-a: a = 0.0, trying b = 1, 5, 10, 25, ..., 300, and fix-b: b = 10, trying a = 0.1, 0.2, ..., 0.9. Second, fix-λT (fix-λS): fix a = 0.2 and λT (λS) = 1, optimise b and α, change λS(λT ) = 0.1, 1, 10, 50, 100, 200. Figures 3 and 4 show the corresponding plots. Figure 3(b) and Figure 4(a) show that varying the values of a and λS does not significantly change the 541 510 25 50 100 150 630 930 1230 1530 1830 2130 2430 Number of Topics Perplexity   LDA_D LDA_P SeqLDA STM AdaTM (a) Pat-A 0510 25 50 100 150 910 1060 1210 1360 1510 1660 1810 Number of Topics Perplexity   LDA_D LDA_P SeqLDA STM AdaTM (b) Pat-H 510 25 50 100 150 700 850 1000 1150 1300 1450 1600 Number of Topics Perplexity   LDA_D LDA_P SeqLDA STM AdaTM (c) Pat-B 0510 25 50 100 150 670 820 970 1120 1270 1420 Number of Topics Perplexity   LDA_D LDA_P SeqLDA STM AdaTM (d) Pat-F 0510 25 50 100 150 910 1110 1310 1510 1710 1910 Number of Topics Perplexity   LDA_D LDA_P SeqLDA STM AdaTM (e) Pat-G 510 25 50 100 150 −10015 40 65 90 115 140160 Number of Topics Perplexity Difference   Pat−A Pat−B Pat−F Pat−G Pat−H (f) Shuffle Figure 5: Perplexity comparisons. perplexity. In contrast, Figure 3(a) shows different b values significantly change perplexity. Therefore, we sought to optimise b. The experiment of fixing λS = 1 and changing λT shows a small λT is preferred. 6.4 Perplexity Comparison Perplexity comparisons were done with the default settings a = 0.2, α = 0.1, γ = 0.01, λS = 1, λT = 1 and b optimised automatically using the scheme from (Du et al., 2012). Figure 5 shows the results on these five patent datasets for different numbers of topics. LDA D is LDA run on whole patents, and LDA P is LDA run on the paragraphs within patents. Table 4 gives the p-values of a one-tail paired t-test for AdaTM versus the others, where lower p-value indicates AdaTM has statistically significant lower perplexity. From this we can see that AdaTM is statistically significantly better than SeqLDA and LDA, and somewhat better than STM.","In addition, we ran another set of experiments by randomly shuffling the order of paragraphs in each patent several times before running AdaTM. Then, we calculate the difference between perplexities with and without random shuffle. Figure 5(f) shows the plot of differences in each data sets. The positive difference means randomly shuffling the order of paragraphs indeed increases the perplexity. It can further prove that there does exist sequential topic structure in patents, which confirms the finding in (Du et al., 2012). 6.5 Topic Evolution Comparisons All the comparison experiments reported in this section are run with 20 topics, the upper limit for easy visualisation, and without optimising any parameters. The Dirichlet Priors are fixed as αk = 0.1 and γw = 0.01. For AdaTM, SeqLDA, and STM, a = 0.0 and b = 100 for “The Prince” and b = 200 for “Moby Dick”. These settings have proven robust in experiments. To align the topics so visualisations match, the sequential models are initialised using an LDA model built at the chapter level. More-over, all the models are run at both the chapter and the paragraph level. With the common initialisation, both paragraph level and chapter level models can","Table 4: P-values for one-tail paired t-test on the five","patent datasets.","AdaTM","Pat-G Pat-A Pat-F Pat-H Pat-B LDA D .0001 .0001 .0002 .0001 .0001 LDA P .0041 .0030 .0022 .0071 .0096 SeqLDA .0029 .0047 .0003 .0012 .0023","STM .0220 .0066 .0210 .0629 .0853 542 (a) Evolution of paragraph topics for LDA (b) Topic alignment of LDA versus AdaTM topics for chapters Figure 6: Analysis on “The Prince”. be aligned.","To visualise topic evolution, we use a plot with one colour per topic displayed over the sequence. Figure 6(a) shows this for LDA run on paragraphs of “The Prince”. The proportion of 20 topics is the Y-axis, spread across the unit interval. The paragraphs run along the X-axis, so the topic evolution is clearly displayed. One can see there is no sequential structure in this derived by the LDA model, and similar plots result from “Moby Dick” for LDA. Figure 6(b) shows the alignment of topics between the initialising model (LDA+chapters) and AdaTM run on chapters. Each point in the matrix gives the Hellinger distance between the corresponding topics, color coded. The plots for the other models, chapters or paragraphs, are similar so plots like Figure 6(a) for the other models can be meaningfully compared.","Figure 7 then shows the corresponding evolution plots for AdaTM and SeqLDA on chapters and paragraphs. The contrast of these with LDA is stark. The large improvement in perplexity for AdaTM (see Section 6.4) along with no change in lexical coherence (see Section 6.2) means that the se- (a) AdaTM on chapters (b) AdaTM on paragraphs (c) SeqLDA on chapters (d) SeqLDA on paragraphs Figure 7: Topic Evolution on “The Prince”. quential information is actually beneficial statistically. Note that SeqLDA, while exhibiting slightly stronger sequential structure than AdaTM in these 543 (a) LDA on chapters (b) STM on Chapters (c) AdaTM on Chapters Figure 8: Topic Evolution on “Moby Dick”. figures has significantly worse test perplexity, so its sequential affect is too strong and harming results. Also, note that some topics have different time sequence profiles between AdaTM and SeqLDA. In-deed, inspection of the top words for each show these topics differ somewhat. So while the LDA to AdaTM/SeqLDA topic correspondences are quite good due to the use of LDA initialisation, the correspondences between AdaTM and SeqLDA have degraded. We see that AdaTM has nearly as good sequential characteristics as SeqLDA. Furthermore, segment topic distribution νi,j of SeqLDA are gradually deviating from the document topic distribution μi, which is not the case for AdaTM.","Results for “Moby Dick” on chapters are comparable. Figure 8 shows similar topic evolution plots for LDA, STM and AdaTM. In contrast, the AdaTM topic evolutions are much clearer for the less frequent topics, as shown in Figure 8(c). Various parts of this are readily interpreted from the storyline. Here we briefly discuss topics by their colour: black: Captain Peleg and the business of signing on; yellow: inns, housing, bed; mauve: Queequeg; azure: (around chapters 60-80) details of whales aqua: (peaks at 8, 82, 88) pulpit, schools and mythology of whaling.","We see that AdaTM can be used to understand the topics with regards to the sequential structure of a book. In contrast, the sequential nature for LDA and STM is lost in the noise. It can be very interesting to apply the proposed topic models to some text analysis tasks, such as topic segmentation, summarisation, and semantic title evaluation, which are subject to our future work."]},{"title":"7 Conclusion","paragraphs":["A model for adaptive sequential topic modelling has been developed to improve over a simple exchange-able segments model STM (Du et al., 2010) and a naive sequential model SeqLDA (Du et al., 2012) in terms of perplexity and its confirmed ability to uncover sequential structure in the topics. One could extract meaningful topics from a book like Herman Melville’s “Moby Dick” and concurrently gain their sequential profile. The current Gibbs sampler is slower than regular LDA, so future work is to speed up the algorithm."]},{"title":"Acknowledgments","paragraphs":["The authors would like to thank all the anonymous reviewers for their valuable comments. Lan Du was supported under the Australian Research Council’s Discovery Projects funding scheme (project numbers DP110102506 and DP110102593). Dr. Huidong Jin was partly supported by CSIRO Mathematics, Informat-ics and Statistics for this work. NICTA is funded by the Australian Government as represented by the Department of Broadband, Communications and the Digital Economy and the Australian Research Council through the ICT Center of Excellence program. 544"]},{"title":"References","paragraphs":["R. Arora and B. Ravindran. 2008. Latent Dirichlet allocation and singular value decomposition based multi-document summarization. In ICDM ’08: Proc. of 2008 Eighth IEEE Inter. Conf. on Data Mining, pages 713–718.","R. Barzilay and L. Lee. 2004. Catching the drift: Probabilistic content models, with applications to genera-tion and summarization. In HLT-NAACL 2004: Main Proceedings, pages 113–120. Association for Computational Linguistics.","D.M. Blei and J.D. Lafferty. 2006. Dynamic topic models. In ICML ’06: Proc. of 23rd international conference on Machine learning, pages 113–120.","D.M. Blei and P.J. Moreno. 2001. Topic segmenta-tion with an aspect hidden Markov model. In Proc. of 24th annual international ACM SIGIR conference on Research and development in information retrieval, pages 343–348.","D.M. Blei, A.Y. Ng, and M.I. Jordan. 2003. Latent Dirichlet allocation. Journal of Machine Learning Research, 3:993–1022.","W. Buntine and M. Hutter. 2012. A Bayesian view of the Poisson-Dirichlet process. Technical Report arXiv:1007.0296v2, ArXiv, Cornell, February.","H. Chen, S.R.K. Branavan, R. Barzilay, and D.R. Karger. 2009. Global models of document structure using latent permutations. In Proceedings of Human Language Technologies: The 2009 Annual Conf. of the North American Chapter of the Association for Computational Linguistics, pages 371–379, Stroudsburg, PA, USA. Association for Computational Linguistics.","C. Chen, L. Du, and W. Buntine. 2011. Sampling for the Poisson-Dirichlet process. In European Conf. on Machine Learning and Principles and Practice of Knowledge Discovery in Database, pages 296–311.","S.C. Deerwester, S.T. Dumais, T.K. Landauer, G.W. Furnas, and R.A. Harshman. 1990. Indexing by latent semantic analysis. Journal of the American Society of Information Science, 41(6):391–407.","L. Du, W. Buntine, and H. Jin. 2010. A segmented topic model based on the two-parameter Poisson-Dirichlet process. Machine Learning, 81:5–19.","L. Du, W. Buntine, H. Jin, and C. Chen. 2012. Sequential latent dirichlet allocation. Knowledge and Information Systems, 31(3):475–503.","J. Eisenstein and R. Barzilay. 2008. Bayesian unsupervised topic segmentation. In Proc. of Conf. on Empirical Methods in Natural Language Processing, pages 334–343. Association for Computational Linguistics.","T.L. Griffiths, M. Steyvers, D.M. Blei, and J.B. Tenenbaum. 2005. Integrating topics and syntax. In Advances in Neural Information Processing Systems 17, pages 537–544.","A. Gruber, Y. Weiss, and M. Rosen-Zvi. 2007. Hidden topic markov models. Journal of Machine Learning Research - Proceedings Track, 2:163–170.","E.A. Hardisty, J. Boyd-Graber, and P. Resnik. 2010. Modeling perspective using adaptor grammars. In Proc. of the 2010 Conf. on Empirical Methods in Natural Language Processing, pages 284–292, Stroudsburg, PA, USA. Association for Computational Linguistics.","M. Johnson. 2010. PCFGs, topic models, adaptor grammars and learning topical collocations and the structure of proper names. In Proc. of 48th Annual Meeting of the ACL, pages 1148–1157, Uppsala, Sweden, July. Association for Computational Linguistics.","H. Misra, F. Yvon, O. Capp, and J. Jose. 2011. Text segmentation: A topic modeling perspective. Information Processing & Management, 47(4):528–544.","D. Newman, J.H. Lau, K. Grieser, and T. Baldwin. 2010. Automatic evaluation of topic coherence. In North American Chapter of the Association for Computational Linguistics - Human Language Technologies, pages 100–108.","D. Newman, E.V. Bonilla, and W. Buntine. 2011. Improving topic coherence with regularized topic models. In J. Shawe-Taylor, R.S. Zemel, P. Bartlett, F.C.N. Pereira, and K.Q. Weinberger, editors, Advances in Neural Information Processing Systems 24, pages 496–504.","C.P. Robert and G. Casella. 2004. Monte Carlo statistical methods. Springer. second edition.","M. Rosen-Zvi, T. Griffiths, M. Steyvers, and P. Smyth. 2004. The author-topic model for authors and documents. In Proc. of 20th conference on Uncertainty in Artificial Intelligence, pages 487–494.","Y. W. Teh, M. I. Jordan, M. J. Beal, and D. M. Blei. 2006. Hierarchical Dirichlet processes. Journal of the American Statistical Association, 101:1566–1581.","Y. W. Teh. 2006. A hierarchical Bayesian language model based on Pitman-Yor processes. In Proc. of 21st Inter. Conf. on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics, pages 985–992.","H. Wallach, D. Mimno, and A. McCallum. 2009. Rethinking LDA: Why priors matter. In Advances in Neural Information Processing Systems 19.","H. Wang, D. Zhang, and C. Zhai. 2011. Structural topic model for latent topical structure analysis. In Proc. of 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies - Volume 1, pages 1526–1535, Stroudsburg, PA, USA. Association for Computational Linguistics. 545"]}]}
