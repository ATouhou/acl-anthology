{"sections":[{"title":"","paragraphs":["Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 633–644, October 25-29, 2014, Doha, Qatar. c⃝2014 Association for Computational Linguistics"]},{"title":"A Neural Network for Factoid Question Answering overParagraphsMohit Iyyer","paragraphs":["1"]},{"title":", Jordan Boyd-Graber","paragraphs":["2"]},{"title":", Leonardo Claudino","paragraphs":["1"]},{"title":",Richard Socher","paragraphs":["3"]},{"title":", Hal Daumé III","paragraphs":["1 1"]},{"title":"University of Maryland, Department of Computer Science and umiacs","paragraphs":["2"]},{"title":"University of Colorado, Department of Computer Science","paragraphs":["3"]},{"title":"Stanford University, Department of Computer Science{miyyer,claudino,hal}@umiacs.umd.edu,Jordan.Boyd.Graber@colorado.edu, richard@socher.orgAbstract","paragraphs":["Text classification methods for tasks like factoid question answering typically use manually defined string matching rules or bag of words representations. These methods are ineffective when question text contains very few individual words (e.g., named entities) that are indicative of the answer. We introduce a recursive neural network (rnn) model that can reason over such input by modeling textual compositionality. We apply our model, qanta, to a dataset of questions from a trivia competition called quiz bowl. Unlike previous rnn models, qanta learns word and phrase-level representations that combine across sentences to reason about entities. The model outperforms multiple baselines and, when combined with information retrieval methods, ri-vals the best human players."]},{"title":"1 Introduction","paragraphs":["Deep neural networks have seen widespread use in natural language processing tasks such as parsing, language modeling, and sentiment analysis (Bengio et al., 2003; Socher et al., 2013a; Socher et al., 2013c). The vector spaces learned by these models cluster words and phrases together based on similarity. For example, a neural network trained for a sentiment analysis task such as restaurant review classification might learn that “tasty” and “delicious” should have similar representations since they are synonymous adjectives.","These models have so far only seen success in a limited range of text-based prediction tasks, Later in its existence, this polity’s leader was chosen by a group that included three bishops and six laymen, up from the seven who traditionally made the decision. Free imperial cities in this polity included Basel and Speyer. Dissolved in 1806, its key events included the Investiture Controversy and the Golden Bull of 1356. Led by Charles V, Frederick Barbarossa, and Otto I, for 10 points, name this polity, which ruled most of what is now Germany through the Middle Ages and rarely ruled its titular city. Figure 1: An example quiz bowl question about the Holy Roman Empire. The first sentence contains no words or named entities that by themselves are indicative of the answer, while subsequent sentences contain more and more obvious clues. where inputs are typically a single sentence and outputs are either continuous or a limited discrete set. Neural networks have not yet shown to be useful for tasks that require mapping paragraph-length inputs to rich output spaces.","Consider factoid question answering: given a description of an entity, identify the per-son, place, or thing discussed. We describe a task with high-quality mappings from natural language text to entities in Section 2. This task—quiz bowl—is a challenging natural language problem with large amounts of diverse and compositional data.","To answer quiz bowl questions, we develop a dependency tree recursive neural network in Section 3 and extend it to combine predic-tions across sentences to produce a question answering neural network with trans-sentential averaging (qanta). We evaluate our model against strong computer and human baselines in Section 4 and conclude by examining the latent space and model mistakes. 633"]},{"title":"2 Matching Text to Entities: QuizBowl","paragraphs":["Every weekend, hundreds of high school and college students play a game where they map raw text to well-known entities. This is a trivia competition called quiz bowl. Quiz bowl questions consist of four to six sentences and are associated with factoid answers (e.g., history questions ask players to identify specific battles, presidents, or events). Every sentence in a quiz bowl question is guaranteed to contain clues that uniquely identify its answer, even without the context of previous sentences. Players answer at any time—ideally more quickly than the opponent—and are rewarded for correct answers.","Automatic approaches to quiz bowl based on existing nlp techniques are doomed to failure. Quiz bowl questions have a property called pyramidality, which means that sentences early in a question contain harder, more obscure clues, while later sentences are “giveaways”. This design rewards players with deep knowledge of a particular subject and thwarts bag of words methods. Sometimes the first sentence contains no named entities—answering the question correctly requires an actual understanding of the sentence (Figure 1). Later sentences, however, progressively reveal more well-known and uniquely identifying terms.","Previous work answers quiz bowl questions using a bag of words (naı̈ve Bayes) approach (Boyd-Graber et al., 2012). These models fail on sentences like the first one in Figure 1, a typical hard, initial clue. Recursive neural networks (rnns), in contrast to simpler models, can capture the compositional aspect of such sentences (Hermann et al., 2013).","rnns require many redundant training examples to learn meaningful representations, which in the quiz bowl setting means we need multiple questions about the same answer. Fortunately, hundreds of questions are produced during the school year for quiz bowl competitions, yield-ing many different examples of questions ask-ing about any entity of note (see Section 4.1 for more details). Thus, we have built-in redundancy (the number of “askable” entities is limited), but also built-in diversity, as difficult clues cannot appear in every question without becoming well-known."]},{"title":"3 Dependency-Tree RecursiveNeural Networks","paragraphs":["To compute distributed representations for the individual sentences within quiz bowl questions, we use a dependency-tree rnn (dt-rnn). These representations are then aggregated and fed into a multinomial logistic regression classifier, where class labels are the answers associated with each question instance.","In previous work, Socher et al. (2014) use dt-rnns to map text descriptions to images. dt-rnns are robust to similar sentences with slightly different syntax, which is ideal for our problem since answers are often described by many sentences that are similar in meaning but different in structure. Our model improves upon the existing dt-rnn model by jointly learning answer and question representations in the same vector space rather than learning them separately. 3.1 Model Description As in other rnn models, we begin by associating each word w in our vocabulary with a vector representation xw ∈ Rd",". These vectors are stored as the columns of a d × V dimensional word embedding matrix We, where V is the size of the vocabulary. Our model takes dependency parse trees of question sentences (De Marneffe et al., 2006) and their corresponding answers as input.","Each node n in the parse tree for a particular sentence is associated with a word w, a word vector xw, and a hidden vector hn ∈ Rd of the same dimension as the word vectors. For internal nodes, this vector is a phrase-level representation, while at leaf nodes it is the word vector xw mapped into the hidden space. Unlike in constituency trees where all words reside at the leaf level, internal nodes of dependency trees are associated with words. Thus, the dt-rnn has to combine the current node’s word vector with its children’s hidden vectors to form hn. This process continues recursively up to the root, which represents the entire sentence.","We associate a separate d×d matrix Wr with each dependency relation r in our dataset and learn these matrices during training.1","Syntactically untying these matrices improves com-1 We had 46 unique dependency relations in our quiz","bowl dataset. 634 This city ’s economy depended on subjugated peasants called helots ROOT DET POSSESSIVE POSS NSUBJ PREP POBJ AMOD VMOD DOBJ Figure 2: Dependency parse of a sentence from a question about Sparta. positionality over the standard rnn model by taking into account relation identity along with tree structure. We include an additional d × d matrix, Wv, to incorporate the word vector xw at a node into the node vector hn.","Given a parse tree (Figure 2), we first compute leaf representations. For example, the hidden representation hhelots is hhelots = f (Wv · xhelots + b), (1) where f is a non-linear activation function such as tanh and b is a bias term. Once all leaves are finished, we move to interior nodes with already processed children. Continuing from “helots” to its parent, “called”, we compute hcalled =f (WDOBJ · hhelots + Wv · xcalled + b). (2) We repeat this process up to the root, which is hdepended =f (WNSUBJ · heconomy + WPREP · hon + Wv · xdepended + b). (3) The composition equation for any node n with children K(n) and word vector xw is hn =","f (Wv · xw + b + ∑ k∈K(n) WR(n,k) · hk), (4) where R(n, k) is the dependency relation between node n and child node k. 3.2 Training Our goal is to map questions to their corresponding answer entities. Because there are a limited number of possible answers, we can view this as a multi-class classification task. While a softmax layer over every node in the tree could predict answers (Socher et al., 2011; Iyyer et al., 2014), this method overlooks that most answers are themselves words (features) in other questions (e.g., a question on World War II might mention the Battle of the Bulge and vice versa). Thus, word vectors associated with such answers can be trained in the same vector space as question text,2","enabling us to model relationships between answers instead of assuming incorrectly that all answers are independent.","To take advantage of this observation, we depart from Socher et al. (2014) by training both the answers and questions jointly in a single model, rather than training each separately and holding embeddings fixed during dt-rnn training. This method cannot be applied to the multimodal text-to-image mapping problem because text captions by definition are made up of words and thus cannot include images; in our case, however, question text can and frequently does include answer text.","Intuitively, we want to encourage the vectors of question sentences to be near their correct answers and far away from incorrect answers. We accomplish this goal by using a contrastive max-margin objective function described be-low. While we are not interested in obtaining a ranked list of answers,3","we observe better performance by adding the weighted approximate-rank pairwise (warp) loss proposed in Weston et al. (2011) to our objective function.","Given a sentence paired with its correct answer c, we randomly select j incorrect answers from the set of all incorrect answers and denote this subset as Z. Since c is part of the vocabulary, it has a vector xc ∈ We. An incorrect answer z ∈ Z is also associated with a vector xz ∈ We. We define S to be the set of all nodes in the sentence’s dependency tree, where an individual node s ∈ S is associated with the 2 Of course, questions never contain their own answer","as part of the text. 3 In quiz bowl, all wrong guesses are equally detri-","mental to a team’s score, no matter how “close” a guess","is to the correct answer. 635 hidden vector hs. The error for the sentence is","C(S, θ) = ∑ s∈S ∑","z∈Z L(rank(c, s, Z))max(0, 1 − xc · hs + xz · hs), (5) where the function rank(c, s, Z) provides the rank of correct answer c with respect to the incorrect answers Z. We transform this rank into a loss function4","shown by Usunier et al. (2009) to optimize the top of the ranked list, L(r) = r∑","i=1 1/i.","Since rank(c, s, Z) is expensive to compute, we approximate it by randomly sampling K incorrect answers until a violation is observed (xc · hs < 1 + xz · hs) and set rank(c, s, Z) = (|Z| − 1)/K, as in previous work (Weston et al., 2011; Hermann et al., 2014). The model minimizes the sum of the error over all sentences T normalized by the number of nodes N in the training set,","J (θ) = 1 N ∑","t∈T C(t, θ). (6) The parameters θ = (Wr∈R, Wv, We, b), where R represents all dependency relations in the data, are optimized using AdaGrad(Duchi et al., 2011).5","In Section 4 we compare performance to an identical model (fixed-qanta) that excludes answer vectors from We and show that training them as part of θ produces significantly better results.","The gradient of the objective function,","∂C","∂θ = 1 N ∑","t∈T ∂J (t)","∂θ , (7) is computed using backpropagation through structure (Goller and Kuchler, 1996). 3.3 From Sentences to Questions The model we have just described considers each sentence in a quiz bowl question independently. However, previously-heard sentences within the same question contain useful information that we do not want our model to ignore.","4","Our experiments show that adding this loss term to the objective function not only increases performance but also speeds up convergence","5","We set the initial learning rate η = 0.05 and reset the squared gradient sum to zero every five epochs. While past work on rnn models have been restricted to the sentential and sub-sentential levels, we show that sentence-level representations can be easily combined to generate useful representations at the larger paragraph level.","The simplest and best6","aggregation method is just to average the representations of each sentence seen so far in a particular question. As we show in Section 4, this method is very powerful and performs better than most of our baselines. We call this averaged dt-rnn model qanta: a question answering neural network with trans-sentential averaging."]},{"title":"4 Experiments","paragraphs":["We compare the performance of qanta against multiple strong baselines on two datasets. qanta outperforms all baselines trained only on question text and improves an information retrieval model trained on all of Wikipedia. qanta requires that an input sentence describes an entity without mentioning that entity, a constraint that is not followed by Wikipedia sentences.7","While ir methods can operate over Wikipedia text with no issues, we show that the representations learned by qanta over just a dataset of question-answer pairs can significantly improve the performance of ir systems. 4.1 Datasets We evaluate our algorithms on a corpus of over 100,000 question/answer pairs from two different sources. First, we expand the dataset used in Boyd-Graber et al. (2012) with publicallyavailable questions from quiz bowl tournaments held after that work was published. This gives us 46,842 questions in fourteen different categories. To this dataset we add 65,212 questions from naqt, an organization that runs quiz bowl tournaments and generously shared with us all of their questions from 1998–2013.","6","We experimented with weighting earlier sentences less than later ones in the average as well as learning an additional RNN on top of the sentence-level representations. In the former case, we observed no improvements over a uniform average, while in the latter case the model overfit even with strong regularization.","7","We tried transforming Wikipedia sentences into quiz bowl sentences by replacing answer mentions with appropriate descriptors (e.g., “Joseph Heller” with “this author”), but the resulting sentences suffered from a variety of grammatical issues and did not help the final result. 636","Because some categories contain substantially fewer questions than others (e.g., astronomy has only 331 questions), we consider only literature and history questions, as these two categories account for more than 40% of the corpus. This leaves us with 21,041 history questions and 22,956 literature questions. 4.1.1 Data Preparation To make this problem feasible, we only consider a limited set of the most popular quiz bowl answers. Before we filter out uncommon answers, we first need to map all raw answer strings to a canonical set to get around formatting and redundancy issues. Most quiz bowl answers are written to provide as much information about the entity as possible. For example, the follow-ing is the raw answer text of a question on the Chinese leader Sun Yat-sen: Sun Yat-sen; or Sun Yixian; or Sun Wen; or Sun Deming; or Nakayama Sho; or Nagao Takano. Quiz bowl writers vary in how many alternate acceptable answers they provide, which makes it tricky to strip superfluous information from the answers using rule-based approaches.","Instead, we use Whoosh,8","an information retrieval library, to generate features in an active learning classifier that matches existing answer strings to Wikipedia titles. If we are unable to find a match with a high enough confidence score, we throw the question out of our dataset. After this standardization process and manual vetting of the resulting output, we can use the Wikipedia page titles as training labels for the dt-rnn and baseline models.9","65.6% of answers only occur once or twice in the corpus. We filter out all answers that do not occur at least six times, which leaves us with 451 history answers and 595 literature answers that occur on average twelve times in the corpus. These pruning steps result in 4,460 usable history questions and 5,685 literature questions. While ideally we would have used all answers, our model benefits from many training examples per answer to learn meaningful representations; this issue can possibly be addressed with techniques from zero shot learning (Palatucci et al., 2009; Pasupat and Liang, 2014), which we leave to future work. 8 https://pypi.python.org/pypi/Whoosh/ 9 Code and non-naqt data available at http://cs.","umd.edu/~miyyer/qblearn.","We apply basic named entity recogni-tion (ner) by replacing all occurrences of answers in the question text with single entities (e.g., Ernest Hemingway becomes Ernest Hemingway). While we experimented with more advanced ner systems to detect non-answer entities, they could not handle multi-word named entities like the book Love in the Time of Cholera (title case) or battle names (e.g., Battle of Midway). A simple search/replace on all answers in our corpus works better for multi-word entities.","The preprocessed data are split into folds by tournament. We choose the past two na-tional tournaments10","as our test set as well as questions previously answered by players in Boyd-Graber et al. (2012) and assign all other questions to train and dev sets. History results are reported on a training set of 3,761 questions with 14,217 sentences and a test set of 699 questions with 2,768 sentences. Literature results are reported on a training set of 4,777 questions with 17,972 sentences and a test set of 908 questions with 3,577 sentences.","Finally, we initialize the word embedding matrix We with word2vec (Mikolov et al., 2013) trained on the preprocessed question text in our training set.11","We use the hierarchical skipgram model setting with a window size of five words. 4.2 Baselines We pit qanta against two types of baselines: bag of words models, which enable comparison to a standard NLP baseline, and information retrieval models, which allow us to compare against traditional question answering techniques. BOW The bow baseline is a logistic regression classifier trained on binary unigram indicators.12","This simple discriminative model is an improvement over the generative quiz bowl answering model of Boyd-Graber et al. (2012).","10","The tournaments were selected because naqt does not reuse any questions or clues within these tournaments.","11","Out-of-vocabulary words from the test set are initialized randomly.","12","Raw word counts, frequencies, and TF-IDF weighted features did not increase performance, nor did adding bigrams to the feature set (possibly because multi-word named entities are already collapsed into single words). 637 BOW-DT The bow-dt baseline is identical to bow except we augment the feature set with dependency relation indicators. We include this baseline to isolate the effects of the dependency tree structure from our compositional model. IR-QB The ir-qb baseline maps questions to answers using the state-of-the-art Whoosh ir engine. The knowledge base for ir-qb consists of “pages” associated with each answer, where each page is the union of training question text for that answer. Given a partial question, the text is first preprocessed using a query language similar to that of Apache Lucene. This processed query is then matched to pages uses bm-25 term weighting, and the top-ranked page is considered to be the model’s guess. We also incorporate fuzzy queries to catch misspellings and plurals and use Whoosh’s built-in query ex-pansion functionality to add related keywords to our queries. IR-WIKI The ir-wiki model is identical to the ir-qb model except that each “page” in its knowledge base also includes all text from the associated answer’s Wikipedia article. Since all other baselines and dt-rnn models operate only on the question text, this is not a valid comparison, but we offer it to show that we can improve even this strong model using qanta. 4.3 DT-RNN Configurations For all dt-rnn models the vector dimension d and the number of wrong answers per node j is set to 100. All model parameters other than We are randomly initialized. The non-linearity f is the normalized tanh function,13","f (v) = tanh(v) ∥tanh(v)∥ . (8)","qanta is our dt-rnn model with feature averaging across previously-seen sentences in a question. To obtain the final answer prediction given a partial question, we first generate a feature representation for each sentence within that partial question. This representation is computed by concatenating together the word embeddings and hidden representations averaged over all nodes in the tree as well as the","13","The standard tanh function produced heavy saturation at higher levels of the trees, and corrective weighting as in Socher et al. (2014) hurt our model because named entities that occur as leaves are often more important than non-terminal phrases. root node’s hidden vector. Finally, we send the average of all of the individual sentence features14","as input to a logistic regression classifier for answer prediction.","fixed-qanta uses the same dt-rnn configuration as qanta except the answer vectors are kept constant as in the text-to-image model. 4.4 Human Comparison Previous work provides human answers (Boyd-Graber et al., 2012) for quiz bowl questions. We use human records for 1,201 history guesses and 1,715 literature guesses from twenty-two of the quiz bowl players who answered the most questions.15","The standard scoring system for quiz bowl is 10 points for a correct guess and -5 points for an incorrect guess. We use this metric to compute a total score for each human. To obtain the corresponding score for our model, we force it to imitate each human’s guessing policy. For example, Figure 3 shows a human answering in the middle of the second sentence. Since our model only considers sentence-level increments, we compare the model’s prediction after the first sentence to the human prediction, which means our model is privy to less information than humans.","The resulting distributions are shown in Figure 4—our model does better than the average player on history questions, tying or defeat-ing sixteen of the twenty-two players, but it does worse on literature questions, where it only ties or defeats eight players. The figure indicates that literature questions are harder than history questions for our model, which is corroborated by the experimental results discussed in the next section."]},{"title":"5 Discussion","paragraphs":["In this section, we examine why qanta improves over our baselines by giving examples of questions that are incorrectly classified by all baselines but correctly classified by qanta. We also take a close look at some sentences that all models fail to answer correctly. Finally, we visualize the answer space learned by qanta. 14 Initial experiments with L2 regularization hurt per-","formance on a validation set. 15 Participants were skilled quiz bowl players and are","not representative of the general population. 638 History Literature Model Pos 1 Pos 2 Full Pos 1 Pos 2 Full bow 27.5 51.3 53.1 19.3 43.4 46.7 bow-dt 35.4 57.7 60.2 24.4 51.8 55.7 ir-qb 37.5 65.9 71.4 27.4 54.0 61.9 fixed-qanta 38.3 64.4 66.2 28.9 57.7 62.3 qanta 47.1 72.1 73.7 36.4 68.2 69.1 ir-wiki 53.7 76.6 77.5 41.8 74.0 73.3 qanta+ir-wiki 59.8 81.8 82.3 44.7 78.7 76.6 Table 1: Accuracy for history and literature at the first two sentence positions of each question and the full question. The top half of the table compares models trained on questions only, while the IR models in the bottom half have access to Wikipedia. qanta outperforms all baselines that are restricted to just the question data, and it substantially improves an IR model with access to Wikipedia despite being trained on much less data. 20015010050050100150200 Score Difference History: Model vs. Human Model loses Model wins 400 300 200 100 0 100 200 Score Difference Literature: Model vs. Human Model loses Model wins Figure 4: Comparisons of qanta+ir-wiki to human quiz bowl players. Each bar represents an individual human, and the bar height corresponds to the difference between the model score and the human score. Bars are ordered by human skill. Red bars indicate that the human is winning, while blue bars indicate that the model is winning. qanta+ir-wiki outperforms most humans on history questions but fails to defeat the “average” human on literature questions. A minor character in this play can be summoned by a bell that does not always work; that character also doesn’t have eyelids. Near the end, a woman who drowned her illegitimate child attempts to stab another woman in the Second Empire-style","room in which the entire play takes place. For 10 points, Estelle and Ines are characters in which existentialist play in which Garcin claims “Hell is other people”, written by Jean-Paul Sartre? Figure 3: A question on the play “No Exit” with human buzz position marked as",". Since the buzz occurs in the middle of the second sentence, our model is only allowed to see the first sentence. 5.1 Experimental Results Table 1 shows that when bag of words and information retrieval methods are restricted to question data, they perform significantly worse than qanta on early sentence positions. The performance of bow-dt indicates that while the dependency tree structure helps by itself, the compositional distributed representations learned by qanta are more useful. The significant improvement when we train answers as part of our vocabulary (see Section 3.2) indicates that our model uses answer occurrences within question text to learn a more informative vector space.","The disparity between ir-qb and ir-wiki indicates that the information retrieval models need lots of external data to work well at all sentence positions. ir-wiki performs better than other models because Wikipedia contains many more sentences that partially match specific words or phrases found in early clues than the question training set. In particular, it is impossible for all other models to answer clues in the test set that have no semantically similar 639 or equivalent analogues in the training question data. With that said, ir methods can also operate over data that does not follow the special constraints of quiz bowl questions (e.g., every sentence uniquely identifies the answer, answers don’t appear in their corresponding questions), which qanta cannot handle. By combining qanta and ir-wiki, we are able to leverage access to huge knowledge bases along with deep compositional representations, giving us the best of both worlds. 5.2 Where the Attribute Space Helps Answer Questions We look closely at the first sentence from a literature question about the author Thomas Mann: “He left unfinished a novel whose title character forges his father’s signature to get out of school and avoids the draft by feigning desire to join”.","All baselines, including ir-wiki, are unable to predict the correct answer given only this sentence. However, qanta makes the correct prediction. The sentence contains no named entities, which makes it almost impossible for bag of words or string matching algorithms to predict correctly. Figure 6 shows that the plot description associated with the “novel” node is strongly indicative of the answer. The five highest-scored answers are all male authors,16 which shows that our model is able to learn the answer type without any hand-crafted rules.","Our next example, the first sentence in Table 2, is from the first position of a question on John Quincy Adams, which is correctly answered by only qanta. The bag of words model guesses Henry Clay, who was also a Secretary of State in the nineteenth century and helped John Quincy Adams get elected to the presidency in a “corrupt bargain”. However, the model can reason that while Henry Clay was active at the same time and involved in the same political problems of the era, he did not represent the Amistad slaves, nor did he negotiate the Treaty of Ghent. 5.3 Where all Models Struggle Quiz bowl questions are intentionally written to make players work to get the answer, especially at early sentence positions. Our model fails to","16","three of whom who also have well-known unfinished novels answer correctly more than half the time after hearing only the first sentence. We examine some examples to see if there are any patterns to what makes a question “hard” for machine learning models.","Consider this question about the Italian ex-plorer John Cabot: “As a young man, this native of Genoa disguised himself as a Muslim to make a pilgrimage to Mecca”.","While it is obvious to human readers that the man described in this sentence is not actually a Muslim, qanta has to accurately model the verb disguised to make that inference. We show the score plot of this sentence in Figure 7. The model, after presumably seeing many in-stances of muslim and mecca associated with Mughal emperors, is unable to prevent this information from propagating up to the root node. On the bright side, our model is able to learn that the question is expecting a human answer rather than non-human entities like the Umayyad Caliphate.","More examples of impressive answers by qanta as well as incorrect guesses by all systems are shown in Table 2. 5.4 Examining the Attribute Space Figure 5 shows a t-SNE visualization (Van der Maaten and Hinton, 2008) of the 451 answers in our history dataset. The vector space is divided into six general clusters, and we focus in particular on the us presidents. Zooming in on this section reveals temporal clustering: presidents who were in office during the same timeframe occur closer together. This observa-tion shows that qanta is capable of learning attributes of entities during training."]},{"title":"6 Related Work","paragraphs":["There are two threads of related work relevant to this paper. First, we discuss previous applications of compositional vector models to related NLP tasks. Then, we examine existing work on factoid question-answering and review the similarities and differences between these tasks and the game of quiz bowl. 6.1 Recursive Neural Networks for NLP The principle of semantic composition states that the meaning of a phrase can be derived 640 TSNE-1 T S NE-2 Wars, rebellions, and battles U.S. presidents Prime ministers Explorers & emperors Policies Other","ta","mma","n y _h a l l c a l v i n _c o o l i d g e l o ll a rd y fo u rth _c r u s a d e","s","o n g h a i _emp i re p ea c e_o f_w es tp h a","l","i","a i n ca _em pi re a ta h u a l p a c h ar le s _s umn e r j o h n _p a u l _j o n es w o u n d ed _kn ee_m a s s a c re h u l d ry c h _z w i n g l i d a ri us _i b a ttl e_o f_a y a c u c h o j o h n _c a b o t g h an a u l y s s e s _s . _g ra n t h a rtfo rd _c o n v en ti o n c i v i l i a n _c o n s erv a ti o n _c o rp s ro g er_w i l l i a ms _(th eo l o g i a n ) g eo rg e_h . _p e n d l eto n w i l l i a m_mc ki n l ey v i c t o ri a _w o o d h u l l","c","red","i","t_mo b i l i er_o f_a mer i c a _s c a n d a l h en ry _c a b o t_l o","d","g","e,","_j","r. mu g ha l _emp i re j o h n _ma rs h a l l c u l t u ra l _rev o l u ti o n g u a d a l c a n a l l o u i s i a n a _p u rc h a s e n i g h t_o f_th e_l o n g _k n i v es c h a n d ra g u p ta _ma u ry a s a mu el _d e_c h a mp l a i n th i rty _y ea rs ' _wa r c o mp rom is e _of _1850 b a ttl e_o f_h a s ti n g s b a ttl e_o f_s al a mi s a kb ar l ew i s _c as s d a we s _pl a n h ern a n d o _d e_s o to c","a","rth","ag","e j o s ep h _m c c a rth y ma i n e s a l v a d o r_a l l e n d e b a ttl e_o f_ge tty s bu rg mi kh a i l _g o rb a c h ev a a ro n _b u rr eq u a l _r i g h ts _a men d men t w a r_o f_th e_s p a n i s h _s u c c es s i o n c o xe y' s _a rmy g eo rg e_mea d e fo u rteen _p o i nts ma p p _v . _o h i o s a m_h o us to","n mi n g _d y n a s ty","b","o","xe","r_reb el l i on a n ti - ma s o n i c _p a rty p o rfi ri o _d i a z trea ty _o f_p o rts mo u th th eb es , _g reec e g o l d en _h o rd e fra n c i s c o _i . _ma d e ro h i tti tes j a mes _g . _b l a i n e s c h en c k _v . _u n i ted _s ta tes c a l i g u l a w i l l i a m_w a l ker_(fi","l","i","b","u","s","te","r) h en ry _v i i _o f_en g","l","a","n","dko n ra d _a d en a u er kel l o g g - b ri a n d _p a c t","b","a","ttl","e_o","f_c","u","l","l","o","d","en trea ty _o f_b res tl i to vs k","w","i","l","l","i","a","m_p","en","n a . _p h i l i p _r a n d o l p h h en ry _l ._s t ims o n","w","h","i","g _p a rty _(u n i te d _s t a te s ) c a ro l i n e_a ffa i r c l ar en ce _da rro w w h is k ey _reb el l io n b a ttl e_o f_mi dw a y b a ttl e_o f_l ep an to a d o l f_ei c h ma n ng eo rg es _c l emen c ea u b a ttl e_o f_th e_l i t tl e _b i g h o rn p o n ti a c _(p ers o n ) b l a c k_h a w k_w a r b a ttl e_o f_ta n n en b erg c l a y to n _a n ti t ru s t _a c t p ro v i s i o n s _o f_o x fo rd b a ttl e_o f_a c ti u m s u ez _c ri s i s s p a rta cu s d o rr_reb el l i o n j a y_t rea ty","tri","a n g l e_s h i rtw a i s t_fa c to r y _fi re","ka","ma","ku","ra","_s","h","o","g","u","n","a","te j u l i u s _n y erere fred er ic k_d o u gl a s s p i erre_tr ud ea u n a g a s a ki s u l ei ma n _th e _ m a g n i fi c e n t fa l kl a n d s _w a r w a r_o f_d e v o l u ti o n c h ar le ma gn e d a n i el _b o o n e ed i c t_o f_n a n tes h a rry _s . _tru man s h a ka p ed ro _a l v a res _c a b ra","l","th","o","ma s _h a rt_b en to n _(p o l i ti c i a n )b","a","ttl","e_o","f_th e_c or al _s ea","p","eterl","o","o","_ma","s","s","a","cr","eb","a","ttl","e_o","f_b","o","s","w","o","rth","_fi","el","d","ro","g","er_b",". _ta ne yb ern a rd o _o ' h i g g i n s n ev i l l e _c h a mb erl a i n h en ry _h u d s o n c y ru s _the _gr ea t j a n e _a d d a ms ro u g h_ri d ers j a mes _a . _ga rfi el d n a p o l eo n _i ii mi s s o u ri _c o mp ro mi s e b a ttl e_o f_l ey te_g ul f a mb ro s e_b u r n s i d e tren t_a ffa i r ma ri a _th eres a w i l l i a m_ew a rt_g l a d s to n e w a lt er_mo n da l e b a rry _g o l d w a t er l o ui s _ri el h i de ki _toj o ma rc o _po l o b ri a n _mu l ro n ey tru ma n _d o c tri n e ro a l d _a mu n d s en to ku g a w a _s h o g u n a te el ea n o r_o f_a q u i ta i n e l o u i s _b ra n d ei s b a ttl e_o f_tren to n kh mer_e mp ire b en i to _j u a rez b a ttl e_o f_an ti et am w h is k ey _ri ng o tto _v o n _b i s ma rc k b o o ke r_t. _w a s h i n g to n b a ttl e_o f_b a n n o c k b u","rn","eu g en e_v . _de bs eri e_c a n a l j a mes o n _ra id g reen _mo u n ta i n _b o y s h a ym ark et_a","ffa","ir fi n l an dfa","s","h","o","d","a _i n c i d en t b a ttl e_o","f_s","h","i","l","o","h h a n n i b a l j o h n _j a y ea s ter_r is i n g j a ma ic a b ro o k_far m u ma yya d _c a l i p h a t e mu h am ma d fra n c is _d ra ke","c","l","a","r","a","_b","a","rto","n s h a y s ' _re b e l l i o n","v","erd","u","n h a dri a n v y a c h es l a v _mo l o to v o d","a","_n","o","b","u","n","a","g","a","c","a","no","s","s","a s a mu el _g omp er s b a ttl e_o f_b u n ker_h i l l b a ttl e_o f_pl a s s eyd a v i d _l i v i n g s to n e s o l on p eri c l es ta n g _d y n a s ty teu to n i c _k n i g h ts s ec o n d _v a ti c a n _c o u n c i l a l fred _d rey fu s h en ry _th e_n a v i g a to rn","el","s o n _m a n d el a p ea s a nts ' _re v ol t g a i u s _ma","ri","u","s","g","etu","l","i","o","_v a rg a s","h","o","ra","ti","o","_g","a","tes j o h n _t. _s c o p es l ea g u e _o f _n a ti o n s fi rs t_b a ttl e_o f_b u l l _ru n a l fred _th e_g rea t l eo n i d _b rez h n ev c h ero kee l o ng _ma rc h emi l i a n o _z a p a ta j a mes _mo n ro e w o o d ro w _w i l s o n v a n d a l s w i l l i a m_h en ry _h a r ri s o n b a ttl e_o f_pu eb l a b a ttl e_o f_z ama j u s ti n i a n _i th a dd eu s _s te ve ns c ec i l _rho d es kw a me_n kru ma h d i et_o f_w or ms g eo rg e_a rms tro n g _cu s te r b a ttl e_o f_a g i n c o u rt s emi n o l e_w a rs s h a h _j a h a n a meri g o _v e s p u c c i j o h n _fo s ter _d u l l es l es ter _b. _p ea rs o n o reg o n _tra il c l a u d i u s l a tera n _trea ty c h es ter_a . _a rth u r o p i u m_w a rs trea ty _o f_u trec h t kn i g h ts _o f_l a b o r a l ex a n d er_h a mi l to n p l es s y _v. _fe rgu s o n h o ra ce _gre el ey ma ry _b ak er_ed d y a l ex an d er_ke ren s ky j a c q u eri e trea","ty","_o","f_g","h","en","t b a y _o f_p i g s _i n v a s i o n a n to n i o _l o p e z _d e_s a n ta _a n n a g rea t_n o rth ern _w ar h en ry _i _o f_e n g l a n d c o u n c i l _o f _tren t c h i a n g _ka i-s h ek s a mu el _j . _t i l d en fi d el _c as tr o w i l mo t _p ro v i s o y u a n _d y n a s ty b a s til l e b en j a m i n _h a rri s o n w a r_o f_th e_a u s tr i a n _s u c c e s s i o n c ri mea n _w ar j o h n _b ro w n _(a b o l i ti o n i s t) tea p o t_d o me _s c a n d a l a l be rt_b ._f al","l ma rc u s _l i c i n i u s _c ra s s u s ea rl _w a rren w a rren _g . _h a rd i n g g u n p o w d er_p l o t h o mes tea d _s tri ke s a mu el _a da ms j o h n _p ete r_z en g e r th o ma s _p a i n e free _s oi l _p a rtys t. _b a rth o l o mew ' s _d a y _m a s s a c re","a rth u r_w el l e s l ey , _1 s t_d u ke _o f _w e l l i n g to n c h a r l e s _d e _g a u l l e l eo n _tro ts ky h u g h","_c","a","p","e","t a l ex a n d er_h . _s tep h en s h a il e_s e l as s i e w i l l i a m_h . _s ew a rd ru th erfo rd _b . _h a y es s a fa v i d _d y n a s ty mu h a m ma d _a l i _j i n n a h ku l tu rka mp f ma x i mi l i en _d e_ro b es p i erre h u be rt_h ump h rey l u d d i te h u l l _h o u s e p h i l i p _i i _o f_ma c ed o n g u el p h s _a n d _g h i b el l i n es b y z a n ti n e_emp i re a l b i g en s i a n _c ru s a d e d i oc l eti a n","fo","rt_ti","c","o","nd er og a p a rth i a n _emp i re c h ar le s _mar tel w i l l i a m_j en n i n g s _b ry a n a l ex a n d er_i i _o f_ru s s i a ferd i n a n d _ma g el l a n s ta te_o f_fra n kl i n i v an _th e_te rri b le ma rti n _l uth er _(1953 _fi lm ) mi l l a r d _fi l l mo re fra n c i s c o _fra n c o a eth el red _th e_u n rea d y ro n a l d _rea g a n b en i to _mu s s o l i n i h en ry _c la y ki tc h en _c a b i n et","b l a c k_h o l e_o f_c a l c u tta a n c i en t_c o ri n th j o h n _w i l kes _b o o t h j o h n _ty l er ro b ert_w a l po l e","h","u","ey","_lo","n","g to ku g a w a _i ey a s u th o ma s _na s tn","i","ki","ta","_k h ru s h c h ev a n d re w _j a c ks o n p o rtu ga l l a b o u r_p a rty _(u k) mo n ro e_d oc tr in e j o h n _q u i n c y _a d a ms c o ng re s s _of_b er li n tec u ms eh","j","a","c","q","u","es","_c","a","rti","er b a ttl e_o f_th e_th am es s p a n i s h _c i","v","i","l","_w","a","r eth i o p ia fu g i t i v e_s l a v e_l a w s j o h n _a . _ma c d o n a l d c o u n c i l _o f _c h a l c ed o n p a n c h o _v i l l a w a r_o f_th e_p a c i fi c g eo rg e_w a l l a c e s u s a n _b . _a n th o n y ma rc u s _ga rv ey g ro v er_c l ev el an d j o h n _h a y g eo rg e_b . _mc c l el l a n o c to be r_ma ni fes t o v i tu s _be rin g j o h n _h a n c o c k w i l l i a m_l l o y d _g a rri s o n p l att _ame n dme nt ma ry , _qu e en _of_s","c","o","ts fi rs t_tri u mv i ra te","fra n c i s c o _v a s q u ez _d e_c o ro n a d o ma rg a ret_th a tc he r s h erma n _a nt itr us t_a c t h a n s e a ti c _l ea g u e h en ry _mo rto n _s tan l ey j u l y _re v o l u ti o n s tep h en _a . _d o u g l a s x y z_a ffa i r j i mmy _c art er fra n c i s c o _p i z a rr o ku b l a i _kh a n","v","a","s","c","o","_d","a","_g a ma s p a rta b a ttl e_o f_c a p o retto o s ten d _ma ni fe s to mu s ta fa _kema l _a tatu rk p eter_t he _gre at g a n g _o f_fo u r b a ttl e_o f_c h a n c el l o rs v i l l e d a v i d _l l o y d _g eo rg e c a rd i n a l _ma z a ri n emb a rg o _ac t_o f_18 07 b ri gha m_y o u n g c h a r l e s _l i n d b erg h h u d s o n ' s _b a y _c o mp any a tti l a p a ri s _c o mmu n e j effer s on _d a vi s a mel i a _ea rh art ma l i _emp i re a d o l f_h i tl er b en ed i c t _a rn o l d c a mi l l o _b en s o , _c o u n t_o f_c a v o u r mei","j","i","_res","to","ra","ti","o","n b l a c k_p a n th er_p a r ty ma rk_a n to ny fra n kl i n _p i erc e mo l l y _m a g u i res z a c h a ry _ta y l o r h a n _d y n a s ty a d l a i _s tev en s o n _i i j a mes _k. _p o lk d o u g l a s _ma c a rth u r b o s to n _ma s s a c re to y o to m i _h i d ey o s h i g reen b a c k_pa rty s ec o n d _b o er_w a r th i rd _c r u s a d e j a mes _b u c h a n an j o hn _s h erm an g eo rg e_w a s h i n g to n w a rs _o f_th e_ro s es a tl a n ti c _c h a r ter el ea n o r_ro o s ev el t c o n g re s s _o f_v i en n a j o h n _w y c l i ffe w i n s t o n _c h u rc h i l l emi l i o _a g u i n a l d o mi g u el _h i d a l g o _y _c o s ti l l a s ec o n d _b a n k_o f_th e_u n i te d","_s","ta","te","sc o u n c i l _o f _c o n s ta n c e s en ec a _fa l l s _c o n v en ti o n fi rs t_c ru s a de","s","p","i","ro","_a","g","n","ew","ta","i p i n g _reb el l i o n","ma o _z ed on g p a u l _v o n _h i n d en b u rg a l b a n y _c o n g res s j a w a h a rl a l _n eh ru b a ttl e_o f_bl e nh ei m eth a n _al l en a n to n i o _d e_o l i v ei ra _s a l a z a r h erb ert_h o o v er p ep i n_th e _sh o rt i n d i ra _g a n d h i w i l l i a m_h o w a r d _ta ft th o ma s _je ffers o n g a ma l _a b d el _n a s s e r","o","l","iv","e","r_cr","om","we","ll s a l mo n _p . _c h a s e b a ttl e_o f_au s te rl itz b en j a m i n _d i s ra el i g a d s d en _p u rc h a s e g i ro l a mo _s a v o n a ro l a trea ty _o f_to rd es i l l as b a ttl e_o f_ma ra","tho","n","el","i","z","a","b","e","th","_c","a","d","y","_s","ta","n","to","nb","a","ttl e_o f_ki n g s _mo u n ta i n","c","h","ri s to p h er_c o l u mb u s w i l l i a m_th e_c o n q u er o r b a ttl e_o f_tra fa l g a r c h a r l e s _ev a n s _h u g h e s c l ei s","th","en","es w i l l i a m_tec u ms eh _s h erma n mo b ut u_s e s e_s eko p ra g u e_s p ri n g b a bu r p el o p o n n es i a n _w a r j a c q u es _ma rq u ette n ero p a ra g u a y h y ks os ma rti n _v a n _b u ren b o n u s _a rmy c h ar le s _s tew a rt_p arn e ll ed w a rd _the _co n fes s o r b a rto l o me u _d i a s s a l em_w i tc h_tr ia l s b a ttl e_o f_th e_b u l g e j o h n _a d a ms ma g i n o t_l i n e h en ry _c a b o t_l o d g e g i u s e p p e_g a ri b a l d i d a ni el _w eb s ter j o h n _c . _c alh o u n trea ty _o f_w a i ta n g i z eb u l o n _p i ke g en g h i s _kh a n calvin_coolidgewilliam_mckinley james_monroe woodrow_wilson william_henry_harrison benjamin_harrison millard_fillmore ronald_reagan john_tyler andrew_jackson john_quincy_adams grover_cleveland jimmy_carter franklin_pierce zachary_taylor james_buchanan george_washington herbert_hooverwilliam_howard_taft thomas_jefferson martin_van_buren john_adams Figure 5: t-SNE 2-D projections of 451 answer vectors divided into six major clusters. The blue cluster is predominantly populated by U.S. presidents. The zoomed plot reveals temporal clustering among the presidents based on the years they spent in office. from the meaning of the words that it contains as well as the syntax that glues those words together. Many computational models of compositionality focus on learning vector spaces (Zanzotto et al., 2010; Erk, 2012; Grefenstette et al., 2013; Yessenalina and Cardie, 2011). Recent approaches towards modeling compositional vector spaces with neural networks have been successful, although simpler functions have been proposed for short phrases (Mitchell and Lapata, 2008).","Recursive neural networks have achieved state-of-the-art performance in sentiment analysis and parsing (Socher et al., 2013c; Hermann and Blunsom, 2013; Socher et al., 2013a). rnns have not been previously used for learning attribute spaces as we do here, although recursive tensor networks were unsuccessfully applied to a knowledge base completion task (Socher et al., 2013b). More relevant to this work are the dialogue analysis model proposed by Kalchbrenner & Blunsom (2013) and the paragraph vector model described in Le and Mikolov (2014), both of which are able to generate distributed representations of paragraphs. Here we present a simpler approach where a single model is able to learn complex sentence representations and average them across paragraphs. 6.2 Factoid Question-Answering Factoid question answering is often functionally equivalent to information retrieval. Given a knowledge base and a query, the goal is to","Thomas Mann Joseph ConradHenrik Ibsen","Franz KafkaHenry James Figure 6: A question on the German novelist Thomas Mann that contains no named entities, along with the five top answers as scored by qanta. Each cell in the heatmap corresponds to the score (inner product) between a node in the parse tree and the given answer, and the dependency parse of the sentence is shown on the left. All of our baselines, including ir-wiki, are wrong, while qanta uses the plot description to make a correct guess. return the answer. Many approaches to this problem rely on hand-crafted pattern matching and answer-type classification to narrow down the search space (Shen, 2007; Bilotti et al., 2010; Wang, 2006). More recent factoid qa systems incorporate the web and social media into their retrieval systems (Bian et al., 2008). In contrast to these approaches, we place the burden of learning answer types and patterns on the model."]},{"title":"7 Future Work","paragraphs":["While we have shown that dt-rnns are effective models for quiz bowl question answering, other factoid qa tasks are more challenging. Questions like what does the aarp stand for? from trec qa data require additional infrastructure. A more apt comparison would be to IBM’s proprietary Watson system (Lally et al., 2012) for Jeopardy, which is limited to single sentences, or to models trained on Yago (Hoffart et al., 2013).","We would also like to fairly compare qanta 641","Akbar Shah JahanMuhammad","Babur Ghana Figure 7: An extremely misleading question about John Cabot, at least to computer models. The words muslim and mecca lead to three Mughal emperors in the top five guesses from qanta; other models are similarly led awry. with ir-wiki. A promising avenue for future work would be to incorporate Wikipedia data into qanta by transforming sentences to look like quiz bowl questions (Wang et al., 2007) and to select relevant sentences, as not every sentence in a Wikipedia article directly describes its subject. Syntax-specific annotation (Sayeed et al., 2012) may help in this regard.","Finally, we could adapt the attribute space learned by the dt-rnn to use information from knowledge bases and to aid in knowledge base completion. Having learned many facts about entities that occur in question text, a dt-rnn could add new facts to a knowledge base or check existing relationships."]},{"title":"8 Conclusion","paragraphs":["We present qanta, a dependency-tree recursive neural network for factoid question answering that outperforms bag of words and information retrieval baselines. Our model improves upon a contrastive max-margin objective function from previous work to dynamically update answer vectors during training with a single model. Finally, we show that sentence-level representations can be easily and effectively combined to generate paragraph-level represen-Q he also successfully represented the amistad slaves and negotiated the treaty of ghent and the annexation of florida from spain during his stint as secretary of state under james monroe A john quincy adams, henry clay, andrew jackson Q this work refers to people who fell on their knees in hopeless cathedrals and who jumped off the brooklyn bridge A howl, the tempest, paradise lost Q despite the fact that twenty six martyrs were crucified here in the late sixteenth century it remained the center of christianity in its country A nagasaki, guadalcanal, ethiopia Q this novel parodies freudianism in a chapter about the protagonist ’s dream of holding a live fish in his hands A billy budd, the ambassadors, all my sons Q a contemporary of elizabeth i he came to power two years before her and died two years later A grover cleveland, benjamin harrison, henry cabot lodge Table 2: Five example sentences occuring at the first sentence position along with their top three answers as scored by qanta; correct answers are marked with blue and wrong answers are marked with red. qanta gets the first three correct, unlike all other baselines. The last two questions are too difficult for all of our models, requiring external knowledge (e.g., Freudianism) and temporal reasoning. tations with more predictive power than those of the individual sentences."]},{"title":"Acknowledgments","paragraphs":["We thank the anonymous reviewers, Stephanie Hwa, Bert Huang, and He He for their insightful comments. We thank Sharad Vikram, R. Hentzel, and the members of naqt for providing our data. This work was supported by nsf Grant IIS-1320538. Boyd-Graber is also supported by nsf Grant CCF-1018625. Any opinions, findings, conclusions, or recommendations expressed here are those of the authors and do not necessarily reflect the view of the sponsor. 642"]},{"title":"References","paragraphs":["Yoshua Bengio, Réjean Ducharme, Pascal Vincent, and Christian Jauvin. 2003. A neural probabilistic language model. JMLR.","Jiang Bian, Yandong Liu, Eugene Agichtein, and Hongyuan Zha. 2008. Finding the right facts in the crowd: factoid question answering over social media. In WWW.","Matthew W. Bilotti, Jonathan Elsas, Jaime Carbonell, and Eric Nyberg. 2010. Rank learning for factoid question answering with linguistic and semantic constraints. In CIKM.","Jordan Boyd-Graber, Brianna Satinoff, He He, and Hal Daume III. 2012. Besting the quiz master: Crowdsourcing incremental classification games. In EMNLP.","Marie-Catherine De Marneffe, Bill MacCartney, Christopher D Manning, et al. 2006. Generating typed dependency parses from phrase structure parses. In LREC.","John Duchi, Elad Hazan, and Yoram Singer. 2011. Adaptive subgradient methods for online learning and stochastic optimization. JMLR, 999999:2121– 2159.","Katrin Erk. 2012. Vector space models of word meaning and phrase meaning: A survey. Language and Linguistics Compass.","Christoph Goller and Andreas Kuchler. 1996. Learning task-dependent distributed representations by backpropagation through structure. In Neural Networks, 1996., IEEE International Conference on, volume 1.","Edward Grefenstette, Georgiana Dinu, Yao-Zhong Zhang, Mehrnoosh Sadrzadeh, and Marco Baroni. 2013. Multi-step regression learning for compositional distributional semantics. CoRR.","Karl Moritz Hermann and Phil Blunsom. 2013. The Role of Syntax in Vector Space Models of Composi-tional Semantics. In ACL.","Karl Moritz Hermann, Edward Grefenstette, and Phil Blunsom. 2013. ”not not bad” is not ”bad”: A distributional account of negation. Proceedings of the ACL Workshop on Continuous Vector Space Models and their Compositionality.","Karl Moritz Hermann, Dipanjan Das, Jason Weston, and Kuzman Ganchev. 2014. Semantic frame identification with distributed word representations. In ACL.","Johannes Hoffart, Fabian M Suchanek, Klaus Berberich, and Gerhard Weikum. 2013. Yago2: A spatially and temporally enhanced knowledge base from wikipedia. Artificial Intelligence, 194:28–61.","Mohit Iyyer, Peter Enns, Jordan Boyd-Graber, and Philip Resnik. 2014. Political ideology detection using recursive neural networks.","Nal Kalchbrenner and Phil Blunsom. 2013. Recurrent convolutional neural networks for discourse compositionality. Proceedings of the 2013 Workshop on Continuous Vector Space Models and their Compositionality.","Adam Lally, John M Prager, Michael C McCord, BK Boguraev, Siddharth Patwardhan, James Fan, Paul Fodor, and Jennifer Chu-Carroll. 2012. Ques-tion analysis: How watson reads a clue. IBM Journal of Research and Development.","Quoc V Le and Tomas Mikolov. 2014. Distributed representations of sentences and documents.","Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean. 2013. Efficient estimation of word representations in vector space. arXiv preprint arXiv:1301.3781.","Jeff Mitchell and Mirella Lapata. 2008. Vector-based models of semantic composition. In ACL.","Mark Palatucci, Dean Pomerleau, Geoffrey E. Hinton, and Tom M. Mitchell. 2009. Zero-shot learning with semantic output codes. In NIPS.","P. Pasupat and P. Liang. 2014. Zero-shot entity extraction from web pages. In ACL.","Asad B Sayeed, Jordan Boyd-Graber, Bryan Rusk, and Amy Weinberg. 2012. Grammatical structures for word-level sentiment detection. In NAACL.","Dan Shen. 2007. Using semantic role to improve question answering. In EMNLP.","Richard Socher, Jeffrey Pennington, Eric H. Huang, Andrew Y. Ng, and Christopher D. Manning. 2011. Semi-Supervised Recursive Autoencoders for Predict-ing Sentiment Distributions. In EMNLP.","Richard Socher, John Bauer, Christopher D. Manning, and Andrew Y. Ng. 2013a. Parsing With Composi-tional Vector Grammars. In ACL.","Richard Socher, Danqi Chen, Christopher D. Manning, and Andrew Y. Ng. 2013b. Reasoning With Neural Tensor Networks For Knowledge Base Completion. In NIPS.","Richard Socher, Alex Perelygin, Jean Y Wu, Jason Chuang, Christopher D Manning, Andrew Y Ng, and Christopher Potts. 2013c. Recursive deep models for semantic compositionality over a sentiment treebank. In EMNLP.","Richard Socher, Quoc V Le, Christopher D Manning, and Andrew Y Ng. 2014. Grounded compositional semantics for finding and describing images with sentences. TACL.","Nicolas Usunier, David Buffoni, and Patrick Gallinari. 2009. Ranking with ordered weighted pairwise classification. In ICML.","Laurens Van der Maaten and Geoffrey Hinton. 2008. Visualizing data using t-sne. JMLR.","Mengqiu Wang, Noah A. Smith, and Teruko Mitamura. 2007. What is the Jeopardy model? a quasisynchronous grammar for QA. In EMNLP. 643","Mengqiu Wang. 2006. A survey of answer extraction techniques in factoid question answering. Computational Linguistics, 1(1).","Jason Weston, Samy Bengio, and Nicolas Usunier. 2011. Wsabie: Scaling up to large vocabulary image annotation. In IJCAI.","Ainur Yessenalina and Claire Cardie. 2011. Compositional matrix-space models for sentiment analysis. In EMNLP. Fabio Massimo Zanzotto, Ioannis Korkontzelos, Francesca Fallucchi, and Suresh Manandhar. 2010. Estimating linear models for compositional distributional semantics. In COLT. 644"]}]}
