{"sections":[{"title":"","paragraphs":["Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 1764–1768, October 25-29, 2014, Doha, Qatar. c⃝2014 Association for Computational Linguistics"]},{"title":"Improved Decipherment of Homophonic CiphersMalte Nuhn and Julian Schamper and Hermann NeyHuman Language Technology and Pattern RecognitionComputer Science Department, RWTH Aachen University, Aachen, Germany<surname>@cs.rwth-aachen.deAbstract","paragraphs":["In this paper, we present two improvements to the beam search approach for solving homophonic substitution ciphers presented in Nuhn et al. (2013): An improved rest cost estimation together with an optimized strategy for obtaining the order in which the symbols of the cipher are deciphered reduces the beam size needed to successfully decipher the Zodiac-408 cipher from several million down to less than one hundred: The search effort is reduced from several hours of computation time to just a few seconds on a single CPU. These improvements allow us to successfully decipher the second part of the famous Beale cipher (see (Ward et al., 1885) and e.g. (King, 1993)): Having 182 different cipher symbols while having a length of just 762 symbols, the decipherment is way more challenging than the decipherment of the previously deciphered Zodiac-408 cipher (length 408, 54 different symbols). To the best of our knowledge, this cipher has not been deciphered automatically before."]},{"title":"1 Introduction","paragraphs":["State-of-the-art statistical machine translation systems use large amounts of parallel data to estimate translation models. However, parallel corpora are expensive and not available for every domain.","Decipherment uses only monolingual data to train a translation model: Improving the core decipherment algorithms is an important step for making decipherment techniques useful for training practical machine translation systems.","In this paper we present improvements to the beam search algorithm for deciphering homophonic substitution ciphers as presented in Nuhn et al. (2013). We show significant improvements in computation time on the Zodiac-408 cipher and show the first decipherment of part two of the Beale ciphers."]},{"title":"2 Related Work","paragraphs":["Regarding the decipherment of 1:1 substitution ciphers, various works have been published: Most older papers do not use a statistical approach and instead define some heuristic measures for scoring candidate decipherments. Approaches like Hart (1994) and Olson (2007) use a dictionary to check if a decipherment is useful. Clark (1998) defines other suitability measures based on n-gram counts and presents a variety of optimization techniques like simulated annealing, genetic algorithms and tabu search. On the other hand, statistical approaches for 1:1 substitution ciphers are published in the natural language processing community: Ravi and Knight (2008) solve 1:1 substitution ciphers optimally by formulating the decipherment problem as an integer linear program (ILP) while Corlett and Penn (2010) solve the problem using A∗","search. Ravi and Knight (2011) report the first automatic decipherment of the Zodiac-408 cipher. They use a combination of a 3-gram language model and a word dictionary. As stated in the previous section, this work can be seen as an extension of Nuhn et al. (2013). We will therefore make heavy use of their definitions and approaches, which we will summarize in Section 3."]},{"title":"3 General Framework","paragraphs":["In this Section we recap the beam search frame-work introduced in Nuhn et al. (2013). 3.1 Notation We denote the ciphertext with f N 1 = f1 . . . fj . . . fN which consists of cipher 1764 tokens fj ∈ Vf . We denote the plain-","text with eN 1 = e1 . . . ei . . . eN (and its vocabulary Ve respectively). We define e0 = f0 = eN+1 = fN+1 = $ with “$” being a special sentence boundary token. Homophonic substitutions are formalized with a general function φ : Vf → Ve. Following (Corlett and Penn, 2010), cipher functions φ, for which not all φ(f )’s are fixed, are called partial cipher functions. Further, φ′","is said to extend φ, if for all f ∈ Vf that are fixed in φ, it holds that f is also fixed in φ′","with φ′","(f ) = φ(f ). The cardinality of φ counts the number of fixed f ’s in φ. When talking about partial cipher functions we use the notation for relations, in which φ ⊆ Vf × Ve. 3.2 Beam Search The main idea of (Nuhn et al., 2013) is to structure all partial φ’s into a search tree: If a cipher contains N unique symbols, then the search tree is of height N . At each level a decision about the n-th symbol is made. The leaves of the tree form full hypotheses. Instead of traversing the whole search tree, beam search descents the tree top to bottom and only keeps the most promising candidates at each level. Practically, this is done by keeping track of all partial hypotheses in two arrays Hs and Ht. During search all allowed extensions of the partial hypotheses in Hs are generated, scored and put into Ht. Here, the function EXT ORDER (see Section 5) chooses which cipher symbol is used next for extension, EXT LIMITS decides which extensions are allowed, and SCORE (see Section 4) scores the new partial hypotheses. PRUNE then selects a subset of these hypotheses. Afterwards the array Ht is copied to Hs and the search process continues with the updated array Hs. Figure 1 shows the general algorithm."]},{"title":"4 Score Estimation","paragraphs":["The score estimation function is crucial to the search procedure: It predicts how good or bad a partial cipher function φ might become, and therefore, whether it’s worth to keep it or not.","To illustrate how we can calculate these scores, we will use the following example with vocabularies Vf = {A, B, C, D}, Ve = {a, b, c, d}, extension order (B, C, A, D), and cipher text1","φ(f N 1 ) = $ ABDD CABC DADC ABDC $ 1 We include blanks only for clarity reasons. 1: function BEAM SEARCH(EXT ORDER) 2: init sets Hs, Ht 3: CARDINALITY = 0 4: Hs.ADD((∅, 0)) 5: while CARDINALITY < |Vf | do 6: f = EXT ORDER[CARDINALITY] 7: for all φ ∈ Hs do 8: for all e ∈ Ve do 9: φ′",":= φ ∪ {(e, f )} 10: if EXT LIMITS(φ′",") then 11: Ht.ADD(φ′",",SCORE (φ′",")) 12: end if 13: end for 14: end for 15: PRUNE(Ht) 16: CARDINALITY = CARDINALITY + 1 17: Hs = Ht 18: Ht.CLEAR() 19: end while 20: return best scoring cipher function in Hs 21: end function Figure 1: The general structure of the beam search algorithm for decipherment of substitution ciphers as presented in Nuhn et al. (2013). This paper improves the functions SCORE and EXT ORDER. and partial hypothesis φ = {(A, a), (B, b)}. This yields the following partial decipherment","φ(f N 1 ) = $ ab.. .ab. .a.. ab.. $ The score estimation function can only use this partial decipherment to calculate the hypothesis’ score, since there are not yet any decisions made about the other positions. 4.1 Baseline Nuhn et al. (2013) present a very simple rest cost estimator, which calculates the hypothesis’ score based only on fully deciphered n-grams, i.e. those parts of the partial decipherment that form a contiguous chunk of n deciphered symbols. For all other n-grams containing not yet deciphered symbols, a trivial estimate of probability 1 is as-sumed, making it an admissible heuristic. For the above example, this baseline yields the probability p(a|$) · p(b|a) · 14","· p(b|a) · 16","· p(b|a) · 12",". The more symbols are fixed, the more contiguous n-grams become available. While being easy and efficient to compute, it can be seen that for example the single ”a” is not involved in the computation of 1765 the score at all. In practical decipherment, like e.g. the Zodiac-408 cipher, this forms a real problem: While making the first decisions—i.e. traversing the first levels of the search tree—only very few terms actually contribute to the score estimation, and thus only give a very coarse score. This makes the beam search ”blind” when not many symbols are deciphered yet. This is the reason, why Nuhn et al. (2013) need a large beam size of several million hypotheses in order to not lose the right hypothesis during the first steps of the search. 4.2 Improved Rest Cost Estimation The rest cost estimator we present in this paper solves the problem mentioned in the previous sec-tion by also including lower order n-grams: In the example mentioned before, we would also include unigram scores into the rest cost estimate, yielding a score of p(a|$)·p(b|a)·13","·p(a)·p(b|a)·12","·p(a)12","· p(a) · p(b|a) · 12",". Note that this is not a simple linear interpolation of different n-gram trivial scores: Each symbol is scored only using the maximum amount of context available. This heuristic is nonadmissible, since an increased amount of context can always lower the probabilty of some symbols. However, experiments show that this score estimation function works great."]},{"title":"5 Extension Order","paragraphs":["Besides having a generally good scoring function, also the order in which decisions about the cipher symbols are made is important for obtaining reli-able cost estimates. Generally speaking we want an extension order that produces partial decipherments that contain useful information to decide whether a hypothesis is worth being kept or not as early as possible.","It is also clear that the choice of a good extension order is dependent on the score estimation function SCORE. After presenting the previous state of the art, we introduce a new extension order optimized to work together with our previously introduced rest cost estimator. 5.1 Baseline In (Nuhn et al., 2013), two strategies are presented: One which at each step chooses the most frequent remaining cipher symbol, and another, which greedily chooses the next symbol to maximize the number of contiguously fixed n-grams in the ciphertext. LM order","Perplexity Zodiac-408 Beale Pt. 2 1 19.49 18.35 2 14.09 13.96 3 12.62 11.81 4 11.38 10.76 5 11.19 9.33 6 10.13 8.49 7 10.15 8.27 8 9.98 8.27 Table 1: Perplexities of the correct decipherment of Zodiac-408 and part two of the Beale ciphers using the character based language model used in beam search. The language model was trained on the English Gigaword corpus. 5.2 Improved Extension Order Each partial mapping φ defines a partial decipherment. We want to choose an extension order such that all possible partial decipherments following this extension order are as informative as possible: Due to that, we can only use information about which symbols will be deciphered, not their actual decipherment. Since our heuristic is based on n-grams of different orders, it seems natural to evaluate an extension order by counting how many contiguously deciphered n-grams are available: Our new strategy tries to find an extension order optimizing the weighted sum of contiguously deciphered n-gram counts2 N ∑ n=1 wn · #n. Here n is the n-gram order, wn the weight for order n, and #n the number of positions whose maximum context is of size n.","We perform a beam search over all possible enumerations of the cipher vocabulary: We start with fixing only the first symbol to decipher. We then continue with the second symbol and evaluate all resulting extension orders of length 2. In our experiments, we prune these candidates to the 100 best ones and continue with length 3, and so on.","Suitable values for the weights wn have to be chosen. We try different weights for the different","2","If two partial extension orders have the same score after fixing n symbols, we fall back to comparing the scores of the partial extension orders after fixing only the first n − 1 symbols. 1766 i02 h08 a03 v01 e05 d09 e07 p03 o07 s10 i11 t03 e14 d03 i03 n05 t06 h01 e13 c04 o10 u01 n01 t04 y01 o12 f 04 b04 e15 d09 f 03 o04 r06 d04 a07 b07 o09 u03 t13 f 01 o01 u08 r05 m03 i08 l09 e14 s06 f 01 r05 o07 m04 b06 u02 f 04 o10 r07 d01 s11 i03 n02 a06 n03 e05 x01 c03 a01 v01 a03 t10 i13 o03 n05 o08 r06 v01 a08 u03 l01 t11 s12 i04 x01 f 01 e01 e03 t02 b06 e07 l02 o11 w06 t08 h08 e15 s06 u04 r06 f 04 a10","... p04 a14 p01 e07 r05 n02 u02 m02 b01 e14 r05 o03 n05 e15 d10 e01 s01 c01 r01 i03 b05 e06 s08 t01 h08 c04 e10 x01 a14 c07 t02 l09 o12 c02 a04 l09 i13 t02 y01 o02 f 03 t07 h02 e11 v01 a10 r07 l07 t11 s09 o04 t01 h03 a06 t04 n03 o06 d05 i13 f 02 f 03 i03 c04 u07 l09 t02 y01 w04 i12 l01 l02 b03 e01 h02 a09 d10 i07 n06 f 01 i13 n01 d10 i03 n05 g04 i03 t05 Table 2: Beginning and end of part two of the Beale cipher. Here we show a relabeled version of the cipher, which encodes knowledge of the gold decipherment to assign reasonable names to all homophones. The original cipher just consists of numbers. orders on the Zodiac-408 cipher with just a beam size of 26. With such a small beam size, the extension order plays a crucial role for a successful decipherment: Depending on the choice of the different weights wn we can observe decipherment runs with 3 out of 54 correct mappings, up to 52 out of 54 mappings correct. Even though the choice of weights is somewhat arbitrary, we can see that generally giving higher weights to higher n-gram orders yields better results. We use the weights w8 1 = (0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 3.0) for the following experiments. It is interesting to compare these weights to the perplexities of the correct decipherment measured using different n-gram orders (Table 5). However, at this point we do not see any obvious connection between perplexities and weights wn, and leave this as a further research direction."]},{"title":"6 Experimental Evaluation6.1 Zodiac Cipher","paragraphs":["Using our new algorithm we are able to decipher the Zodiac-408 with just a beam size of 26 and a language model order of size 8. By keeping track of the gold hypothesis while performing the beam search, we can see that the gold decipherment in-deed always remains within the top 26 scoring hypotheses. Our new algorithm is able to decipher the Zodiac-408 cipher in less than 10s on a single CPU, as compared to 48h of CPU time using the previously published heuristic, which required a beam size of several million. Solving a cipher with such a small beam size can be seen as “reading off the solution”. 6.2 Beale Cipher We apply our algorithm to the second part of the Beale ciphers with a 8-gram language model.","Compared to the Zodiac-408, which has length 408 while having 54 different symbols (7.55 observations per symbol), part two of the Beale ciphers has length 762 while having 182 different symbols (4.18 observations per symbol). Compared to the Zodiac-408, this is both, in terms of redundancy, as well as in size of search space, a way more difficult cipher to break.","Here we run our algorithm with a beam size of 10M and achieve a decipherment accuracy of 157 out of 185 symbols correct yielding a symbol error rate of less than 5.4%. The gold decipherment is pruned out of the beam after 35 symbols have been fixed.","We also ran our algorithm on the other parts of the Beale ciphers: The first part has a length 520 and contains 299 different cipher symbols (1.74 observations per symbol), while part three has length 618 and has 264 symbols which is 2.34 observations per mapping. However, our algorithm does not yield any reasonable decipherments. Since length and number of symbols indicate that deciphering these ciphers is again more difficult than for part two, it is not clear whether the other parts are not a homophonic substitution cipher at all, or whether our algorithm is still not good enough to find the correct decipherment."]},{"title":"7 Conclusion","paragraphs":["We presented two extensions to the beam search method presented in (Nuhn et al., 2012), that reduce the search effort to decipher the Zodiac-408 enormously. These improvements allow us to automatically decipher part two of the Beale ciphers. To the best of our knowledge, this has not been 1767 done before. This algorithm might prove useful when applied to word substitution ciphers and to learning translations from monolingual data."]},{"title":"Acknowledgements","paragraphs":["The authors thank Mark Kozek from the Department of Mathematics at Whittier College for challenging us with a homophonic cipher he created. Working on his cipher led to developing the methods presented in this paper."]},{"title":"References","paragraphs":["Andrew J. Clark. 1998. Optimisation heuristics for cryptology. Ph.D. thesis, Faculty of Information Technology, Queensland University of Technology.","Eric Corlett and Gerald Penn. 2010. An exact A* method for deciphering letter-substitution ciphers. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics (ACL), pages 1040–1047, Uppsala, Sweden, July. The Association for Computer Linguistics.","George W. Hart. 1994. To decode short cryptograms. Communications of the Association for Computing Machinery (CACM), 37(9):102–108, September.","John C. King. 1993. A reconstruction of the key to beale cipher number two. Cryptologia, 17(3):305– 317.","Malte Nuhn, Arne Mauser, and Hermann Ney. 2012. Deciphering foreign language by combining language models and context vectors. In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics (ACL), pages 156–164, Jeju, Republic of Korea, July. Association for Computational Linguistics.","Malte Nuhn, Julian Schamper, and Hermann Ney. 2013. Beam search for solving substitution ciphers. In Annual Meeting of the Assoc. for Computational Linguistics, pages 1569–1576, Sofia, Bulgaria, August. Edwin Olson. 2007. Robust dictionary attack of short simple substitution ciphers. Cryptologia, 31(4):332–342, October.","Sujith Ravi and Kevin Knight. 2008. Attacking decipherment problems optimally with low-order n-gram models. In Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 812–819, Honolulu, Hawaii. Association for Computational Linguistics.","Sujith Ravi and Kevin Knight. 2011. Bayesian inference for Zodiac and other homophonic ciphers. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics (ACL), pages 239–247, Portland, Oregon, June. Association for Computational Linguistics.","James B Ward, Thomas Jefferson Beale, and Robert Morriss. 1885. The Beale Papers. 1768"]}]}
