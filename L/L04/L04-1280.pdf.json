{"sections":[{"title":"Collaborative Annotation of Sign Language Data with Peer-to-Peer Technology Hennie Brugman*, Onno Crasborn+, Albert Russel*","paragraphs":["*Max-Planck-Institute for Psycholinguistics","PO Box 310, NL-6500 AH Nijmegen, The Netherlands","{Hennie.Brugman, Albert.Russel}@mpi.nl","+ Department of Linguistics, University of Nijmegen","PO Box 9103, NL-6500 HD Nijmegen, The Netherlands","o.crasborn@let.kun.nl","","Abstract Collaboration on annotation projects is in practice mostly done by people sharing the same room. However, several models for online cooperative annotation over the internet are possible. This paper explores and evaluates these, and reports on the use of peer-to-peer technology to extend a multimedia annotation tool (ELAN) with functions that support collaborative annotation."]},{"title":"Introduction","paragraphs":["At the Max-Planck-Institute and UN as well as by participants in several international projects great efforts are made to construct annotated multimedia corpora. One of the projects where the authors are involved in is the ECHO1","project (European Cultural Heritage Online). For ECHO a cross-linguistic corpus was created for the documentation and comparative analysis of several European sign languages (Crasborn et al., 2004). Tool developers at the MPI were involved in this effort by providing customized software and support for the creation of annotation resources and corpora based on IMDI2","metadata. For the manual creation of annotations of video-recorded sign language material ELAN was used. ELAN supports annotation of one or more (time-synchronous) media file on multiple user-definable tiers. For a report on ELAN’s current state of development, see (Brugman & Russel, 2004). ELAN can freely be downloaded3","and sources are available under GNU Public License. In the ECHO sign language annotation project, as in some previous annotation projects, the need for better software support for collaboration came up. Researchers work in geographically widespread groups, sometimes in isolation. Still they want to discuss their data and detailed analyses with their collaborators, with experts in some domain, or with informants in some local community. They also want to contribute with their own annotations or collect somebody else’s contributions. Several models for collaboration are possible, each with their own prerequisites, advantages and disadvantages. We will introduce, discuss and evaluate these models. We chose one of these models, the peer-to-peer approach, for further investigation, system design and experimental implementation."]},{"title":"Distributed annotation","paragraphs":["In this chapter we will try to make a complete inventory of the options that are available for the support of collaborative annotation over the internet. A number of 1 http://www.mpi.nl/ECHO 2 http://www.mpi.nl/IMDI 3 http://www.mpi.nl/tools relevant criteria are mentioned and an evaluation of the available alternatives against these criteria is given."]},{"title":"Exchange of documents","paragraphs":["Nowadays collaboration on annotation projects is almost exclusively done by exchanging versions of annotation documents, usually as email attachments. Communication about the annotation document and process is done mostly over a separate communication channel, typically also email. Although some office applications have a form of support for co-authoring (“track changes”) existing annotation tools typically do not visualize version differences. This model is even used by collaborators working in the same office, all working on the same annotation document at various stages."]},{"title":"Client-server model","paragraphs":["Another model that is widely used in information technology is the client-server model. A central server, usually located at some hosting organization, provides services to a number of clients. To support collaborative annotation different types of services can be used. First, a service could manage only the exchange of documents (uploading and downloading). Such a document server is usually responsible for authentication of collaborators and for managing access rights. A variety of this type of server also keeps track of versions of documents4",". These types of services work for general documents and are not specific to annotation processes or documents. Second, annotation specific services can be offered by providing ‘service calls’ that give shared access to documents on a server. These service calls can be implemented in a number of different ways (e.g. by a custom server process implementing some protocol, by remote method calls on distributed objects, by database queries or transactions, or by web services). Using the client-server model over the internet requires that each participating client on the internet can reach and access the server. Therefore protocols have to be used that can pass firewalls. To be able to contact a server it has to have a static IP address that can be determined using DNS. This excludes many machines that are part of a 4 An example of this type of service is CVS, Concurrent Versioning System, which is widely used for source code management. 213 private network and therefore requires dedicated machines. Like in the case of document exchange, the client-server model for collaborative annotation requires a separate communication channel for discussion. Although the client-server model is widely used in information technology, it is to our knowledge hardly ever used to provide annotation specific services and only sometimes for general document services."]},{"title":"Web-based model","paragraphs":["One way to overcome the limitations that are imposed on network protocols by firewalls is using the web-based model. This is a variety of the client-server model that is used very often. In the web-based model the server is implemented as a web- (HTTP) server, or a web-server wraps some service that is implemented otherwise. In the latter case web pages are usually created dynamically. The client is usually, but not necessarily, a ‘standard’ web browser whose functionality is often extended using some script language, like Java-script. The price that is paid is that it is harder to implement non-trivial interactive functionality because of the limitations of http and html, and of script languages run by browsers. An extra difficulty is that the implementer of such a system has no knowledge about, and control over the producer and version of a client’s browser and browser plug-ins. Contrary to some people’s claims this may increase the burden of installation and configuration on the users of such a system. The usefulness of this model for collaborative annotation document creation is therefore very limited."]},{"title":"Peer-to-peer model","paragraphs":["In earlier days of the internet, computers had static IP addresses and were able to contact each other freely. Each computer could in principle both provide services and use them. Growth of the internet and a strongly increased demand for security led to private networks hidden behind firewalls and to dynamic assignment of IP numbers, making it impossible to reach machines with unknown IP numbers. As a consequence useful services were centralized on servers with resolvable IP addresses. Many powerful computers now mainly run very non-demanding clients for internet services like email and web browsing, leaving an enormous amount of computing and storage potential unused. The ambitions to make use of this potential and to restore some of the internet’s decentralization (and of course the wish to bypass central servers when illegally exchanging copyrighted material) led to the development of peer-to-peer (P2P) technology. Typically P2P is used for instant messaging systems (‘chat’), file sharing (for example mp3 files, but also business documents in large companies) and distributed computing (online gaming, but also massively parallel scientific calculations). All three applications of P2P can be used to provide document-specific (file sharing) and annotation-specific (distributed computing) services for collaborative annotation, as well as an effective communication channel for discussion (‘chat’), all on basis of the same set of mechanisms and protocols, and without the need for central servers or hosting organizations. This is the peer-to-peer model for collaborative annotation."]},{"title":"Comparative evaluation","paragraphs":["All four collaboration models have their own benefits and drawbacks. Different annotation projects may want to apply a different one. This chapter compares the models on a number of criteria. Authentication Client-server and web-based models typically use login accounts managed on a central server. After a login procedure the client receives some sort of credential to be sent with each consecutive service request, or the login information itself is sent with each service request (e.g. when using .htaccess on a web server). Since these servers generally store many shared documents for different groups of collaborators, some user account administration is a necessity. For the document exchange model the receiver can only verify the sender’s identity on basis of information the exchange mechanism supplies. For example, the receiver of email messages can only check the sender’s email address. More reliable verification of identity can be achieved by additional means like encryption. Since people will only send those documents to people that they are willing to cooperate on, it is usually enough to rely on the correctness of email addresses. No user administration is necessary. P2P solutions sometimes support distributed membership services to define accepted identities and to handle authentication. If desired for collaborative annotation user accounts can then be defined. However, since collaborators usually work on at most a few shared documents at a time, it is probably enough to identify participants by email address. Extra security can be implemented, e.g. by exchanging some unique id by email, and use that id to join a group working session. Authorization Server based models in general deal with multiple files of multiple owners or groups and therefore access rights or access control lists are required. In the case of document exchange and P2P models collaborators usually work on one or just a few documents at a time. They trust each other to have full write access to all documents just on basis of authentication. Availability of service In cases of using servers or document exchange, services are usually reliable since there are organizations involved that provide adequate system administration. In case of P2P collaboration availability of services is not guaranteed. Being able to discover a service or find a route to it depends on the availability of other peers, that may be up or down (this can be considered both a weakness and a form of robustness). For relatively small communities this weakness can be remedied by explicitly providing a few peers that are always up and can be explicitly addressed (they function as a server in the classical sense).   214 Collaborative authoring of documents There are several non-trivial aspects to consider when cooperatively authoring annotation documents: how to distribute copies to every participant, how to keep these copies synchronized while allowing concurrent editing, and how to maintain a version history. Exchanging documents by email gives no support for handling document synchronization and versioning other then the support that is potentially built into the annotation application itself (“track changes”). Document based servers allow collaborators to download documents, modify them, and upload them again. Concurrent editing conflicts can be handled by either preventing them (via file locking) or by enforcing that they are fixed after file merging. Both approaches have their problematic aspects, but are viable. Annotation servers and P2P networks offer collaborators access to a virtual ‘shared document’ that is automatically kept consistent. In cases of P2P this is done by sending each peer a duplicate of the document that is kept consistent by exchanging change notifications over the P2P network. Far more flexible concurrent editing policies can be implemented for these cases. For example, locking can be done for parts of documents (e.g. each collaborator can have authorship for a different group of annotation layers in the same document), or merging of proposed modifications can be guided by one collaborator in the role of a ‘chair’. Exchange of messages Very important for collaborative annotation are the possibilities do discuss annotations and the annotation process, and to direct people’s attention to elements in the annotation document. Also important is that each participant is notified as soon as document changes occur. All of this can be adequately dealt with if it is possible to exchange instant messages between collaborators. Email is a form of messaging, but it is not instant, and the messages are meant for human interpretation, not for machine processing. Servers, and especially web servers, respond to client requests. In most cases servers have no means to take initiative to contact their clients, so messages can not be passed on from one client to the others. For P2P networks on the other hand, all clients can be servers at the same time, and all peers can be fully connected by bi-directional ‘pipes’, allowing efficient instant messaging. Sharing audio and video media Although some annotation tasks do not require the availability of audio or video playback, for many tasks it is very important to be able to inspect the primary data while annotating. Efficient sharing of media over the internet requires streaming and this is best provided by using existing streaming server solutions. Although attempts are made to implement internet telephony over P2P networks it is much too early to distribute high quality digital media this way. Therefore also P2P collaborative annotation depends on client-server based media serving.   Need for a hosting organization When there is a clear community with recognized hosting or service organizations it is not problematic that these organizations also host servers for server based collaboration, manage user accounts, handle security, etc. However, many communities and collaborations are adhoc, and it is not always easy to find some organization that can provide service. For document exchange and P2P such a service provider is not necessary. This results in a much lower threshold for collaboration, both in terms of organizational effort and in terms of funding.  Summarizing, the server-based models for collaborative annotation are best chosen when the annotation documents are part of corpora, with requirements on central storage capacity, user administration and access rights management. When messages between peers are desirable, when collaborations are adhoc and no user administration is available, when a hosting organization is not available or not wanted, or when annotation specific concurrent editing on shared documents is desired, then P2P may be appropriate. Finally, development on basis of P2P technology allows us to focus on some aspects of collaboration, leaving corpus and data management oriented aspects to solve as separate problems. It is always possible to integrate large servers in a p2p solution."]},{"title":"Sign language","paragraphs":["The community of linguists working on sign languages of deaf communities is growing rapidly, but is still relatively small. In the typical situation, sign linguists work in very small groups or in isolation. This fact makes collaboration at a distance of the utmost importance, but actually working together on sets of data is not commonly done. The use of video annotation software such as ELAN and SignStream5","is a very recent innovation for the field. At the same time, jointly discussing annotated video data is extra important for sign languages (as compared to spoken languages), since sign languages have no commonly accepted written form. The presentation of data typically takes the form of a rudimentary gloss transcription, accompanied by screen captures of video recordings for publication. Allowing linguists to actually look at and discuss video data together can improve the quality of collaboration, and indirectly improve the quality of linguistic analyses. In addition, short-distance collaboration by colleagues working on the same project can be facilitated by adding collaborative annotation functionality to annotation software; similarly, video data can be made available for assignments for groups of students, or be used for teaching sign language transcription. An additional consideration that is relevant for the community of sign language researchers, is that many members are deaf. This makes the use of (internet) telephony for discussing annotation documents impossible. While it would seem that the use of sign language over video phone connections or video chat channels is most appropriate in this context, this is probably not always a practical solution. Sign language communication requires eye contact, which in the 5 http://www.bu.edu/asllrp/SignStream/ 215 collaborative annotation scenario would go at the cost of focusing on the annotation document. By contrast, a conventional chat session using a written form of a spoken language does not require continuous eye gaze on the chat window, and allows looking back and forth between the chat and annotation windows. Our conclusion is that the P2P alternative can be a very valuable collaboration model for the sign language community."]},{"title":"System design","paragraphs":["The considerations in the previous chapters led us to the decision to design collaborative annotation facilities for ELAN and to do a first, experimental implementation. We are in the process of extending ELAN with the following functionality: Two or more people can use ELAN to set up an annotation Session. This is done at first by publishing the presence of a new ‘annotation session’ on the P2P network. Other collaborators can search for this presence, authenticate with their email address and possibly with a unique, previously distributed id string. The originator (‘chair’) of the session decides who may join. The chair brings in an annotation document. Every participant in the session receives a copy of this document that is opened in ELAN. The document refers to a (set of) media file(s), so each participant can individually choose to download/stream (parts of) these media files at any time (however, everything still functions in the absence of a media server as well). Participants can communicate directly using a simple built-in text chat application. Additionally, participants can point to places within the annotation document. This can be done by setting the media time (since ELAN is completely time-synchronized, all annotation and media viewers would automatically scroll to this time), by setting the selection (a specific time interval), by setting a point or 2D region in the video window, or by highlighting a specific annotation. All participants in the session will see instantly what other participants point to. However, only one of the participants at the time can actually do pointing. Control over pointing is passed around on request, assuming that all participants are willing to cooperate. Participants can temporarily choose not to display ‘pointing’ messages. A user interface component is built to show the Session Information: it shows session id, start time and date, shared document name and the name of the chair person. It also shows a list of participants in the session, with for each participant the email address, a short name, status (online, offline, busy, away), and which participant has control over pointing. The chair can delegate authorship for groups of annotation layers to different participants. Participants can at all times make their own local modifications to the parts of the shared document that they have authorship of. At their own decision they can then publish these modifications to their collaborators. The latter can choose to accept them. Every participant can at all times save a local copy of the shared document.   "]},{"title":"Implementation issues","paragraphs":["First implementation of this functionality is done on basis of JXTA6",". At it’s core, JXTA is just a set of protocol specifications, that have a reference implementation in Java. P2P application developers can use this reference implementation, having to know only about the relevant parts of the protocols. JXTA has protocols for advertising and discovering services, for sending and processing generic requests, for propagating messages between peers, for exchanging status information, for setting up communication channels (pipes) and for routing messages between peers. During implementation some issues came up that are worth mentioning here. For certain types of messages it is necessary to be able to uniquely identify certain components of annotation documents. For example, if a message says that an annotation is to be set the ‘active’ annotation it must be possible to address the annotation in question. This can be done by generating and adding unique ids to elements of annotation documents and their modifications, or by calculating ids at each peer by an identical algorithm at well defined moments (e.g. when accepting a modification to the document). For the moment, we will use the second method, since the first would imply a modification to ELAN’s storage format. Another issue is that it is very helpful if applications that are to be extended to support exchanging messages are well engineered for this. We took great care to model most operations in ELAN as ‘commands with arguments’. Finally, when people will start to use collaborative annotation sessions it can be expected that they will want to be able to break off these sessions, store them and resume them later."]},{"title":"Conclusion","paragraphs":["We feel that the internet’s capabilities are not sufficiently used for the creation of (multimedia) annotation resources. Collaborative annotation is possible following a number of different models. For resource creation in the context of the construction of large annotated corpora server-based models may be the best choice, but for small scale, adhoc collaborations without much organizational and financial overhead peer-to-peer approaches should definitely be considered. An additional benefit of P2P technology is that it better supports additional communication channels because it is based on messaging. P2P collaborative annotation may lead to completely new ways to communicate about scientific data, it may even support the formation of new groups of collaborators."]},{"title":"References","paragraphs":["Brugman, Hennie and Russel, Albert. (2004). Annotating multi-media / multi-modal resources with ELAN. (to be published). LREC 2004.  Crasborn, Onno, Els van der Kooij, Johanna Mesch, Brita Bergman, Dafydd Waters, Bencie Woll & Rachel Sutton-Spence (2004).Collecting, transcribing and sharing sign language data from three sign languages: experiences from the ECHO project. (submitted for publication). 6 Started by SUN Microsystems, and in 2001 turned over to the P2P development community. See: http://www.jxta.org 216"]}]}