{"sections":[{"title":"Resources for Calendar Expressions Semantic Tagging and Temporal Navigation through Texts Charles Teissèdre 1,2 , Delphine Battistelli 3 , Jean-Luc Minel 1 ","paragraphs":["1","MoDyCo – Paris Ouest Nanterre La Défense University - CNRS 2 Mondeca – 3, cite Nollez 75 018 Paris 3","STIH – Paris Sorbonne University","E-mail: charles.teissedre@gmail.com, delphine.battistelli@paris-sorbonne.fr, jean-luc.minel@u-paris10.fr Abstract The linguistic resources presented in this paper are designed for the recognition and semantic tagging of calendar expressions in French. While existing resources generally put the emphasis on describing calendar bases pointed out by calendar expressions (which are considered as named entities), our approach tries to explicit how references to calendar are linguistically built up, taking into account not only the calendar bases but as well the prepositions and units that operate on them, as they provide valuable information on how texts refer to the calendar. The modelling of these expressions led us to consider calendar expressions as a conjunction of operators interacting with temporal references. Though the resources aim to be generic and easily reusable, we illustrate the interest of our approach by using the resources output to feed a text navigation tool that is currently being improved, in order to offer users a way of temporally progressing or navigating in texts. "]},{"title":"1. General introduction","paragraphs":["Except the approach presented in (Aunargue & al., 2001), only few research projects have shown interest in describing the semantics of temporal adverbials as decomposable units calling upon a compositional interpretation of their significance. This description is the cornerstone of our approach. Furthermore, a linguistic study has led us to consider calendar expressions as a conjunction of operators interacting with temporal references (Battistelli & al., 2008) which contributes to structuring a text’s temporality, by specifying jointly aspecto-temporal values, calendar anchoring and discursive frames (see Battistelli, 2009 for further details).  Linguistic resources presented here are designed for the recognition and semantic tagging of calendar expressions in French. The particular aim is to describe the semantics of calendar expressions in order to feed a text navigation system, NaviText. After an initial period during which e-books were constructed in imitation of printed books (Juanals, 2003), from the editing and reading points of view, recent developments in reading software offer new possibilities for innovative usages based on natural language processing. The use of nomadic objects such as personal digital assistants or mobile phones dedicated to reading open up new possibilities for educational and scientific usages. The NaviText project (Couto & Minel, 2007) makes it possible to handle different kinds of annotations, morphological, syntactic, semantic and discursive, in order to assist the reader in his own text navigation or to help learners of a second language (Lundquist & al., 2006).  Exploring the semantics of temporal adverbial expressions within a navigational paradigm is in line with this kind of applicative device, namely assisted text reading. Our approach relies on two main innovative principles. The first one consists in proposing to a user several reading “temporal tracks” between temporal adverbial units contained in a text or in a group of texts, without aiming to link these temporal units to events (nor to anchor events in a calendar system). Temporal tracks are based on the specification of navigation operations which make it possible to go from a source unit to a target unit.  The second principle postulates that these navigation operations could rely not only on the denotation of different levels of granularity expressed in temporal adverbials but also on the denotation of different levels of compositional analysis of temporal adverbials. These different levels are formalized in a semantic operators’ algebra.  In the specific use case we are working on, the resources are part of a process that adds metadata to texts in order to provide information for the NaviText system, which is parameterized to facilitate access to temporal information. However, the resources are not specifically designed for this navigation application and are reusable in any system that at some point, requires temporal information to be automatically extracted from texts. Indeed, the recognition of temporal expressions is a commonly performed task both in QA and Information Retrieval systems when extracting Named Entities (Timex) or Events.  Section 2 shows how the recognition and semantic tagging of calendar expressions emerged as an important task in the field of human language technologies. Section 3 details the linguistic resources we have developed for this purpose and section 4 illustrates how the navigation tool can take advantage of our semantic modelling of calendar expressions."]},{"title":"3572 2. Calendar Expressions in NLP","paragraphs":["Currently, temporal information is approached in Natural Language Processing on two main levels of analysis: (i) temporal entities resolution, which consists in relating entities in the calendar system to actual, computable and exchangeable dates and durations, and (ii) temporal ordering of events described in texts (Song and Cohen, 1991; Hitzeman & al., 1995). The first task is emerging as a feasible and essential task in QA systems (TERQAS 2002 workshop) or multiple documents summarization (Battistelli & Minel, 2006).  Calendar expressions annotation aims at identifying expressions that can be anchored in a calendar. Two sub-tasks are generally distinguished, namely automatic extraction and calendar anchoring, which consists in transforming temporal information into a standard format generally ISO 8601 standard - (see for example Mani & Wilson, 2000; Setzer & Gaizauskas, 2000; Filatova & Hovy, 2001; Pustejovsky & al., 2003).  It appears, nevertheless, that there is no real consensus, from a theoretical point of view, on the definition of calendar expressions and the units of which they are composed. This can be attributed to the hybrid nature of temporal units: they can be seen, depending on the context, either as atomic or as divisible entities, since natural languages can use the same terms to express date (“last year”) or duration (“since last year”). This issue is not specific to calendar expressions; it is identified in Artificial Intelligence as a “granularity issue” (Bettini & al., 2000; Bechet & al., 2000). Human readers, in contrast, deal perfectly well with this kind of “ambiguity” - which is not really ambiguity in fact.  The TimeML project (Pustejovsky & al., 2003) focuses on temporal information expressed in texts, designing a rich annotation tagset that describes their semantics. However, concerning calendar expressions in particular, the semantics of prepositions or units that operate on calendar bases is not described, though it provides useful information on how texts refer to the calendar. In the wake of such an approach but restricted to calendar expressions semantic annotation, our approach and resources consider calendar expressions not as a set of temporal units that expresses a date or period, but rather as a composition of semantic operators which interact together and contribute both to the expression of the temporal and aspectual meaning of an utterance, and to the expression of discursive framing.  Our approach does not aim primarily to proceed to calendar base anchoring resolution, i.e. anchoring all expressions on a timeline; rather, it insists on how language refers to and designates areas on a calendar, either through absolute or relative expressions. In the specific case of relative expressions, the annotation resources we have developed do not aim to resolve or clarify calendar bases pointed out thanks to those expressions. Nevertheless our annotation scheme provides useful information about how relative expressions should be interpreted. Therefore outputs could be used in systems that aim at achieving anchoring resolution (Mazur & Dale, 2008; Cailliau & al., 2009)."]},{"title":"3. Automatic Semantic Tagging 3.1 Linguistic resources","paragraphs":["So far, we have developed linguistic resources in accordance with the semantic analysis described formerly in (Battistelli & al., 2008). This one breaks calendar expressions down into a succession of operators: (i) Zoning Operators (“since”, “until”, “long before”), (ii) Zooming and Shifting Operators (“the end of the year”, “10 days before”), and (iii) Pointing Operators (“last year”, “this month”). Those operators operate on a Calendar Basis (a mention of cardinal temporal units, “July 10th","”, or a mention of temporal measures “day”, “month”, “evening”). Each operator expresses a semantic value that the output of the extraction process transcribes in a controlled tagset.  Our annotation resources rely on linguistic grammar-based techniques. The differences between such hand-crafted grammar-based systems and statistical approaches have been widely discussed in the scientific literature. In our case study, the grammar-based approach, in which resources are designed by computational linguists, was necessary, considering the goal of the process: not only does the system need to recognize calendar expression measures and temporal units (the goal of classic Named Entity recognition systems), it also needs to capture the semantics of the introducing operators that interacts with temporal references.  The linguistic resources consist in lexicon lists and local grammars implemented in the form of Unitex transducers. Unitex is a French Open-Source software used for linguistic analysis and processing (Paumier, 2002). This software has the advantage of providing a GUI through which a linguist can graphically design Finite State Machines, thus reducing the time needed to develop, test and maintain them – an important asset, as the hand-crafting of grammars is known for being time consuming1","."]},{"title":"3.2 Annotation scheme","paragraphs":["Calendar expressions are decomposed by the transducers and each unit of this decomposition is annotated in order to reflect its semantics. The semantics of all the units that operate on the calendar base (“since the end of”, “during”, “at the beginning of”) is analyzed and described, as it provides information on how temporal references can be  1 One limitation, however, is that control over the output data is not as powerful as in some other NLP tools, such as the GATE platform (Cunningham & al., 2002), which makes it possible to combine Java processing and the extraction process."]},{"title":"3573","paragraphs":["interpreted. The resources aim at highlighting the structure of calendar expressions which are composed, in their core, of a calendar base (CB), on which three operations are successively performed: a pointing operation, a shifting and/or zooming operation and a zoning operation. As described in (Battistelli & al., 2008), calendar expressions can be represented through the following generic form: OpZoning(OpFocalising/Shifting(OpPointing(CB))2"," 3.2.1 Calendar Base The resources decompose and describe the granularities that play a part in the construction of the calendar base: cardinal and ordinal units (minute, hour, dayOfWeek, dayOfMonth, month, trimester, semester, year).  The description of calendar bases is adequately addressed in existing literature on the subject. However, beside classical constructions of the calendar bases, a corpus study reveals more complex structures that we intend to incorporate, for instance, those for which decisions concerning the level of granularity depend on the context (“long time”, “short period”) or on cardinal symbolic units (partOfDay such as morning, evening, lunch). 3.2.2 Pointing operation The pointing operation is used to describe the “trivial” operation of pointing out a calendar area. This operation, however, is not as trivial as it seems, as the pointing can be direct vs. indirect. In our approach this operation aims to capture the distinction between absolute vs. relative references. Indeed, like classical approaches, our annotation tagset distinguishes “absolute” expressions that can be directly located in a calendar system (“in 1999”, “during the 80’s”) and “relative” expressions that require computation to be anchored on a calendar system (“the past two years”, “tomorrow”).  The tags specify how to interpret “relative” calendar expressions, distinguishing, in the Pointing Operation, those which refer to another temporal reference given by the text (anaphoric expressions such as “two days later”, “the next day”) and those which refer to the time of the utterance situation (deictic expressions such as “yesterday”, “the last few months”, that depend on the “now” of the utterance situation). Extending previous modelling of semantic operators described in (Battistelli & al. 2008), we suggest integrating in the pointing operation information on how relative expressions are built up (deictic vs. anaphoric).  Sometimes, however, the annotation module is not able to specify whether a relative expression is deictic or anaphoric. For instance, “later” is a relative calendar expression, but only a deep context exploration could tell whether, in context, it is a deictic expression (“I will join you later”) or an anaphoric expression (“He later felt that  2 Zoning operations as well as shifting/zooming operations can be multiple, while the pointing operation can only appear once. he was wrong”). Our annotation process does not rely on syntactic parsing or on deep context exploration, but only performs a surface shallow analysis (decomposition of a string): this is why the pointing operation value for the expression “later” will not specify whether it is a deictic or an anaphoric expression, but will only tag it as a relative expression, leaving its complete interpretation for further computation. 3.2.3 Shifting and zooming operation The values of the shifting operation describe several items of information in relation to a temporal shift that operates on a calendar base (in expressions such as “two days before Christmas”, “next week”): (i) the temporal orientation of the shifting operation (identical, backward, forward); (ii) and, if relevant, its granularity (day, month, etc.) and the shifting quantity. An example is provided in figure 1.  The zooming operation encodes possible focus shifts such as in the expressions “By the end of the year” or “in the early eighties”. An example is provided in figure 2.  As mentioned for the pointing operation, the annotation resources include the notion of ambiguous interpretation of certain units. For instance, the interpretation of the shifting operation in the following expression “He met him on Tuesday” would require analysing the verb tense so as to be able to specify that the shifting orientation is backward. As information on verb tense is not provided during the annotation process, the system specifies that two values are possible (either backward or forward) and leaves the complete disambiguation to some further computing. 3.2.4 Zoning operation The value of the zoning operation encodes the semantics of units such as since, until, before, after, around or during (the zoning value, in this case, is “identical”). Starting from a given calendar base that acts as a reference, the zoning operation specifies the calendar area that is designated.  The model will be progressively extended to refine the description of the semantics of complex zoning operations (to distinguish expressions such as long before, just before, etc.)."]},{"title":"3.3 Output examples","paragraphs":["We illustrate the decomposition and annotation process through two examples. In figure 1, the expression (“six months later”) is analysed as a relative anaphoric expression (Pointing Operation), which shifts six months earlier from the calendar basis (Shifting Operation). The Zoning Operation, which specifies the kind of calendar area that is expressed upon the calendar basis, is set as “identical” (unchanged): other values would have been possible (e.g.: “until six months later”). "]},{"title":"3574","paragraphs":["e.g.: “six mois plus tard” (“six months later”) <TextUnit Type=\"Calendar Expression\"> <Annotation Name=\"Zoning\">Identical</Annotation> <Annotation Name=\"ShiftingQuantity\">six</Annotation> <Annotation Name=\"ShiftingGranularity\">month </Annotation> <Annotation Name=\"Pointing\">Anaphoric</Annotation> <Annotation Name=\"ShiftingOrientation\">After </Annotation> <String>six mois plus tard</String> </TextUnit>","","Figure 1: an output example for a relative calendar expression  Figure 2 illustrates the output generated by the annotation module for the expression “towards the end of February 1885”, an absolute expression in which a zooming shift operates and which designate an approximate zone (zoning “around”).  e.g.: “vers la fin du mois de février 1885” (“towards the end of February 1885”) <TextUnit Type=\" Calendar Expression \"> <Annotation Name=\"Zoning\">Around</Annotation> <Annotation Name=\"Zooming\">End</Annotation> <Annotation Name=\"CardinalMonth\">2</Annotation> <Annotation Name=\"CardinalYear\">1885</Annotation> <Annotation Name=\"Pointing\">Absolute</Annotation> <String>vers la fin du mois de février 1885</String> </TextUnit >","","Figure 2: an output example for an absolute calendar expression  We are currently working on the linguistic modelling of compound calendar expressions that can be considered as aggregates. Refining expressions (“on Monday morning, around 9am”), intervals (“between June and September”, “approximately from mid March to the end of July”), enumeration (“May 6th",", 7th",", 8th","and 9th","”) are examples of compound calendar expressions that require to be analyzed as a whole."]},{"title":"4. Evaluation","paragraphs":["The resources have been evaluated upon a corpus, in which 605 calendar expressions were manually annotated (approx 27 771 words). The corpus consists of different texts that were deliberately chosen because they present rich and varied calendar expressions and because they are different from each other, containing more or less absolute calendar expressions (a long biography, short news articles, excerpts from literary works).  The resources are evaluated thanks to the classical measures of recall rate and precision rate, distinguishing absolute (approx. 75% of the calendar expressions present in the corpus) and relative (25% of the calendar expressions present in the corpus) calendar expressions.  Recall Precision F-score Absolute 84.4% 95.2% 89.7% Relative 80,1% 82,2% 81,1%  Table 1: resource evaluation  The annotation module faces several difficulties, the main one being the analysis of compound calendar expressions (which are not yet analyzed as a whole) and elliptic expressions (such as “May 6th",", 7th","and 8th","” in which the month is not repeated). Another source of difficulty – which is a classic difficulty for this kind of annotation system - is when the system faces polysemic expressions, such as years which are not introduced by any explicit operator (and are hard to distinguish from numbers) or expressions such as “postponed from 2/25 to 3/4”, in which the system will wrongly recognize an interval of time."]},{"title":"5. From text mining to navigation through texts","paragraphs":["The semantic annotation outputs are used in a navigation system, NaviText, a French shareware (Couto and Minel, 2007), in which different ways of temporally progressing in texts are implemented, to facilitate access to the temporal information that raises one’s interest. The major use case considered is to gather information around a period of time: the user can easily scan texts to see which parts mention the period and the context he is interested in."]},{"title":"5.1 Text navigation","paragraphs":["Our conception of text navigation rests on the hypothesis that navigating through texts is the expression of a cognitive process related to specific knowledge (Minel, 2003; Couto & Minel, 2007. More precisely, we claim that a reader moves through texts by applying some knowledge to exploit the linguistic information present in texts (discursive markers). Moreover, we claim that this knowledge can be articulated in a declarative way relying on information in texts, coded both by their structure and by specific annotations. This conception of navigation is based on four elements: i) a text representation which associates linguistic annotations to a text unit (TU) (see Couto & Minel, 2007 for further details); ii) a language, called Sextant, to model navigational knowledge; iii) an agent (an individual or software) able to encode such knowledge; iv) a system, called NaviText, to interpret and apply knowledge to a specific text.  Underneath the navigation system, the generic declarative language Sextant is used to express conditions for a navigation operation to be enabled: (i) conditions on the source text unit and on the target text unit, as well as (ii) conditions on a relation between source and target. The conditions language is an important component of Sextant and is composed of basic conditions, TU elements existence conditions, hierarchical conditions and"]},{"title":"3575","paragraphs":["non-hierarchical conditions.  Basic conditions concern the TUs’ attributes and annotations. For this kind of condition we use a notation close to the pattern notion. We define an operator called TU, having five operands that correspond to the following properties: type, number, level, annotations and string. With the first three operands and the fifth one, we denote constraints of equality, inequality, order, prefix, suffix and substring occurrence. The fourth operand is used to indicate the existence or non-existence of annotations, whether it is an annotation name, a value or a name-value pair. For TU elements existence conditions, we define operators without operands to verify if a TU has annotations, string, title, parent and children. All the conditions may be combined using the classic logic operators OR, AND and NOT. Figure 3 presents a generic example of a navigation operation.  IF (condition TUsource) THEN : DO SELECT CRITERIA (Orientation, Order) WHERE {( condition TUtarget ) AND (Relation (TUsource, TUtarget) }; : DO SHOW (Operation’s Label); ","Figure 3: Generic navigation operation (Couto & Minel, 2006)"]},{"title":"5.2 Temporal navigation","paragraphs":["Using this language in the field of navigation through calendar expressions, these conditions express the type of relation that must exist between a source calendar expression and a target calendar expression (condition on the granularity, condition on the type of operators, etc.). For instance, a condition can express which kind of granularity the target and the source should have – larger or smaller – in the case of zooming progression (“in August 2009” toward “on 5 August 2009”). Figure 4 is an example of the rule that encodes a zoom in the navigation operation. Figure 5 is an example of rule that encodes a move forward operation (chronological navigation) and illustrates how the navigation system can take advantage of the linguistic operators’ analysis.  <NavigationOperator Title=\"ZoomInYear2Month\" Type=\"In\"> <Source> <Condition Type=\"Simple\"> <TextUnit Type=\"Calendar Expression\"> <Annotation Name=\"Granularity\">Year</Annotation> <Annotation Name=\"CardinalYear\"></Annotation> </TextUnit> </Condition> </Source> <Target> <Condition Type=\"Simple\"> <TextUnit Type=\"Calendar Expression\"> <Annotation Name=\"Granularity\">Month","</Annotation> <Annotation Name=\"CardinalYear\"></Annotation> </TextUnit> </Condition> </Target> <Relation_Source_Target Source_Name=\"CardinalYear\" Target_Name=\"CardinalYear\" Operator=\"Equal\"> </ NavigationOperator>"," Figure 4: A zoom in navigation operation  <NavigationOperator Title=\"MoveFwdYear1\" Type=\"In\"> <Source> <Condition Type=\"Simple\"> <TextUnit Type=\"Calendar Expression\">","<Annotation Name=\"Zoning\">After</Annotation> <Annotation Name=\"Granularity\">Year</Annotation> <Annotation Name=\"CardinalYear\"></Annotation> </TextUnit> </Condition> </Source> <Target> <Condition Type=\"Simple\"> <TextUnit Type=\"Calendar Expression\"> <Annotation Name=\"Zoning\">ID</Annotation>","<Annotation Name=\"Granularity\">Year</Annotation> <Annotation Name=\"CardinalYear\"></Annotation> </TextUnit> </Condition> </Target> <Relation_Source_Target Source_Name=\"CardinalYear\" Target_Name=\"CardinalYear\" Operator=\"Superior\"> </ NavigationOperator>"," Figure 5: A move forward navigation operation  The general idea is that from a specific period which the reader is interested in, the system offers him several ways to progress (navigate) in a text or in a set of texts: he can either move toward another part of the text that refers to the same period, or move toward a previous/following temporal reference (chronological navigation). He can, likewise, zoom into the period or zoom out to a larger period (granularity navigation). For instance, if the reader focuses on a calendar expression of interest (say “in August 1999”), depending on the text, he can then navigate from there to another temporal reference: toward “on the night of the 17th","of August 1999” or “from August 3 to 7, 1999”, if he wants to focus on what happened inside the same period (zoom in), toward “until September 1999” if he wishes to progress in time (move after), toward “on 15 July 1980”, if he is interested in what happened previously (move before). The navigation process also makes it possible to switch between types of operators: one can move toward a mention of the same period but with a different operator.  We think that our approach may have a significant impact on the way a text is read when its amount or nature does not make sequential reading on the Web easy. We are currently working on several improvements to our approach. Related to some future navigation applications in corpora, we are extending our concepts to a multi-text"]},{"title":"3576","paragraphs":["scenario.  We are also working on extending the power of expression of the Sextant language in order to bypass some current limitations. Presently it is not possible to assign scores to the TU targets that fulfill the conditions expressed by a rule (this score would be used for result ordering purpose). Nor is it possible to exploit the operators’ algebra (Battistelli & al., 2008) such that if the source expresses a “pointing operation” look for a target temporal reference expressing a “shifting operation” on the same granularity."]},{"title":"6. Perspectives","paragraphs":["The resources presented highlight the construction of calendar expressions, decomposing their structure into a succession of operations that apply on a calendar base. Progressively the linguistic modeling and the resources for text annotation are being extended to refine the analysis of operators and to capture larger constructions such as compound calendar expressions.  The linguistic decomposition of calendar expressions aims to go further than classical analyses that consider them as named entities. The annotation resources attempt to provide information on how they should be interpreted so as to make them computable and searchable. The interest of the approach has been illustrated through a navigation tool which takes advantage of the semantic description of operators entering into the construction of calendar expressions.  In its current version, the navigation system can describe, in a declarative way, which kind of target TU can be accessed from a given source TU that fulfils conditions. A future evolution will be to consider that the source TU, instead of being a text unit that appears in a text, could also be a user’s query: for instance, the user could submit queries containing temporal filters, such as “between 1852 and 1871” or “before 1871”. The semantics of the operators in the query would be analyzed by the annotation system and all the temporal references in a text or a set of texts that fulfill the conditions expressed in the set of rules we described will be returned to the user."]},{"title":"7. Acknowledgements","paragraphs":["This project is partially granted by ANR (Contint) RMM2."]},{"title":"8. References","paragraphs":["Aunargue, M., M. Bras, L. Vieu, and N. Asher. (2001). The syntax and semantics of locating adverbials. Cahiers de Grammaire, 26:11–35.","Battistelli (2009). La temporalité linguistique : circonscrire un objet d’analyse ainsi que des finalités à cette analyse, HDR, Université Paris 10, 2009..","Battistelli, D. and J-L. Minel. (2006). Les systèmes de résumé automatique : comment assurer une continuité référentielle dans la lecture des textes. In Compréhension des langues et interaction, Eds Hermès, Paris.","Battistelli, D. J. Couto, J-L. Minel and S. Schwer. (2008). Representing and Visualizing calendar expressions in texts. In STEP’08 Proceedings, Venice.","Bechet G., F. Clerin-Debard, P. Enjalbert. (2000). A qualitative Model for Time Granularity. In Computational Intelligence, Vol. 16 (2), p. 137-175.","Bettini C., S. Jajodia, S. Wang. (Eds). (2000). Time granularities in Databases, Datamining, and Temporal Reasoning. Springer.","Cailliau, F., A. Giraudel, B. Arnulphy. (2009). Tracking Out-of-date Newspaper Articles. In Advances in Computational Linguistics, Research in Computing Science 41, pp. 277-288","Couto, J. and Minel, J.-L. (2007). Navitexte, a text navigation tool. Lecture Notes In Artificial Intelligence 4733, pages 251–259.","Cunningham, H., D. Maynard, K. Bontcheva, V.Tablan and V. Ursu. (2002). The GATE user guide. http://gate.ac.uk/","Filatova, E. and E. Hovy. (2001). Assigning time-stamps to event-clauses. In Workshop on Temporal and Spatial Information Processing, ACL 2001, pages 88–95.","Hitzeman, J., M. Moens, and C. Grover. (1995). Algorithms for analyzing the temporal structure of discourse. In EACL95, pages 253–260.","Juanals B. (2003). La culture de l’information, du livre au numérique. In Hermès Sciences Publications- Lavoisier, Paris.","Lundquist L., J.L. Minel, J. Couto (2006). NaviLire, Teaching French by Navigating in Texts. In IPMU’2006, p. 1093-1099. Paris.","Mani, I. and G. Wilson. (2000). Robust temporal processing of news. In Proceedings 38th ACL, pages 69–76.","Mazur P. and R. Dale (2008). What’s the Date? High Accuracy Interpretation of Weekday Names. In 22nd"," International Conference on Computational Linguistics Proceedings, p. 553–560. Manchester.","Minel J.-L. (2003). Filtrage sémantique, du résumé automatique à la fouille textuelle, Hermes, paris.","Paumier, S. (2002), Manuel d’utilisation du logiciel Unitex. IGM, Université de Marne-La-Vallée. http://www-igm.univ.mlv.fr/~unitex/manuelunitex.pdf","Pustejovsky, J., J. Castano, R. Ingria, R. Sauri, R. Gaizauskas, A. Setzer, and G. Katz. (2003). TimeML: Robust specification of event and temporal expressions in text. In IWCS-5 Fifth International Workshop on Computational Semantics.","Setzer, A. and R. Gaizauskas. (2000). Annotating Events and Temporal Information in Newswire Texts. In Proceedings 2nd LREC, pages 64–66.","Song, F. and R. Cohen. (1991). Tense Interpretation in the Context of Narrative. In 9th AAAI, pages 131–136.","TERQAS. 2002, Time and event recognition for question answering systems. In an ARDA Workshop on Advanced Question Answering Technology. http://www.timeml.org/terqas/"]},{"title":"3577","paragraphs":[]}]}