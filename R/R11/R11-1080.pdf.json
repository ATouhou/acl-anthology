{"sections":[{"title":"","paragraphs":["Proceedings of Recent Advances in Natural Language Processing, pages 568–573, Hissar, Bulgaria, 12-14 September 2011."]},{"title":"An Algorithm of Identifying Semantic Arguments of a Verb from Structured Data Minhua Huang Department of Computer Science Graduate School and University Center City University of New York New York, U.S.A mhuang@gc.cuny.edu Robert M. Haralick Department of Computer Science Graduate School and University Center City University of New York New York, U.S.A haralick@aim.com Abstract","paragraphs":["We discuss a method for identifying semantic arguments of a verb from a sentence. It differs from existing methods by an unique feature that represents all semantic arguments of a verb in a syntactic parse tree. The feature is a path in which at least one of the children of a node is a root of a subtree that associates with a semantic argument. Experiments on WSJ data from Penn TreeBank and PropBank show that our method achieves an average of precision 92.3% and an average of recall 94.2% on identifying semantic arguments of over six hundred verbs."]},{"title":"1 Introduction","paragraphs":["Semantic argument identification is one of the subtasks of semantic role labeling (Gildea and Jurafsky, 2002) (Chen and Rambow, 2002) (Hacioglu, 2004b) which classifies a sequence of words associated with a semantic argument of a verb but does not assign its role. It is the most difficult task in semantic role labeling. Moreover, it is one of the core techniques for a machine to understand the semantics of a sentence. For instance, in the sentences Lisa cut the ribbon with a pair of scissors. and The ribbon was cut by Lisa with a pair of scissors, cut is the verb. Semantic arguments of cut will be Lisa, the ribbon, and a pair of scissors, where Lisa is the one who performs the ac-tion of cutting, the ribbon is the material to be cut by Lisa, and a pair of scissors is the tool used for cutting. For semantic role labeling, arguments of cut need to be determined. Then, each argument will be assigned to a label, such as agent, theme, and instrument in the example. In this report, we presents an algorithm for finding a semantic argument of a verb which is the first task required for assigning a role for the verb.","Over the years, two approaches have been discussed by researchers, such as methods developed based on hierarchical trees (Gildea and Jurafsky, 2002) (Hacioglu, 2004b) (Hacioglu, 2004c) and methods developed based on flat chunks (Hacioglu and Ward, 2003) (Hacioglu, 2004a). In almost all the methods of the first approach, a syntactic tree is transformed into a sequence of constituents. Each semantic argument of a verb is represented by a set of constituents. Each constituent is represented by a set of features. These features are extracted based on linguistic knowledge and local knowledge of the tree structure. Finally, sophisticated classifiers such as support vector machines or maximum entropy modeling classifiers are employed to identify semantic arguments of each verb. In contrast to these methods, our method is based on the idea that if a sentence has a correspondent labeled rooted tree (parser tree), a semantic argument of a verb in the sentence will be associated with a labeled rooted subtree. Hence, all semantic arguments of a verb in the sentence will be represented by a set of labeled rooted subtrees. For each verb node v, there exists a path from node a to node b, from which, all roots of the subtrees will be extracted. Obviously, all semantic arguments of a verb are represented by an unique feature – a path.","We find the path for a verb in a labeled rooted tree associated with a sentence by the probabilis-tic graphical model discussed in the paper (Huang and Haralick, 2009). This model is fast, uses less memory, and is very effective on text data. We construct the path by starting from a verb node and determining the next node by selecting the node that has the largest probability value among the adjacent nodes which have not been encountered yet. Then, a sibling or a child of a node in the path is identified as a root of a subtree associating with a semantic argument of the verb.","We have tested our method on the WSJ data 568 the 00 section from Penn TreeBak and PropBank (Weischedel et al., 2007). There are a total of 233 trees associating with about 600 verbs and 2000 semantic arguments. The evaluation metrics we have used are precision, recall, and f-measure. By applying 10-folder cross validation technique, we have obtained an average of precision 92.64%, an average of recall 94.94%, and an average of f-measure 93.81%. Our experiments show that our method is particularly effective for identifying such semantic arguments, which them are associated with a sequence of consecutive words. Our method is less effective for semantic arguments, which they are associated with two or more sequences of consecutive words (separated by other phrases). Details are shown in Section 4. We are doing more experiments on CoNLL-2005 shared task data set to further verify our method.","The paper is organized into six sections. Section two defines a labeled rooted tree and forest; section three discusses the algorithm; section four demonstrates empirical results; section five shows related research and comparisons; and section six gives a conclusion."]},{"title":"2 A Labeled Rooted Tree and a Labeled Rooted Forest","paragraphs":["A rooted tree T is a 3-tuple (V, E, r), where V is a finite set of vertices, E ⊆ V × V is a finite set of edges, and r ∈ V is the root that all edges of T are directed away from it. The tree-order is the partial ordering on V for any v, u ∈ V, u ≤ v if and only if the unique path from the root r to v passes through u.","In T , the root r is a unique minimal vertex and has level 0. An edge (x < y) in E is an ordered pair (x, y) ∈ (V × V ) s.t. x < y and there exists no z ∈ V with x < z < y. In this case, x is a parent of y and y is a child of x. If two nodes1 x, y have the same parent z, x and y are called siblings. Any node y is on the unique path from r to x is called an ancestor of x. In this case, x is a descendant of y. The sub-tree rooted at node x is the tree induced by descendants of x. A node with no children is an external node or a leaf. A node that is not a leaf node is an internal node. The largest depth of a node in T is the height of T . 1 In a rooted tree, a vertex can be also called a node. 2.0.1 Definition of a Labeled Rooted Tree A labeled rooted tree is a 5-tuple (V, E, r, A, L). It is a rooted tree with additional two elements: a labeling alphabet A and a labeling function L : V → A that assigns labels to vertices. 2.0.2 Definition of a Labeled Rooted Forest A labeled rooted forest is a set of labeled rooted trees, s.t. F = {Ti|i = 1 . . . N } where Ti is a labeled rooted tree."]},{"title":"3 The Method 3.1 Defining the Task","paragraphs":["Let T = (V, E, r, A, L) be a labeled rooted tree associated with a sentence, where A is defined by (Weischedel et al., 2007). Let π be a set of labels associated with verbs, s.t. π ⊆ A. Let C = {C1, C2} be a set of class categories, where C1 represents that a path will be extended from the current node to an adjacent node; C2 represents that a path will not be extended from the current node to an adjacent node.","The task can be stated as follows:","• Form a path P(x) = τ1, → . . . , → τK , where x ∈ V , L(x) ∈ π, and x is not a node in P′","(y), P′","(y) is a path that has been already formed previously. Each τk ∈ V , k = 1, . . . , K","– find a sequence nodes < τ1, . . ., τK >, s.t. < τ1, . . . , τK >","= argmax b1,...,bK p(c1, . . . , cK , b1, . . . , bK )","– where ck ∈ C, bk is one of adjacent nodes of bk−1, bk−1, bk ∈ V , bk−1bk ∈ E.","• Form a set of roots R(x) = {ri|i = 1 . . . M }, where ri ≤ τk, L(ri) ̸∈ π, and 1 ≤ k ≤ K.","• Form a labeled rooted forest F (x) = {T1, . . . TM }, where each Ti is a labeled rooted tree, rooted as ri, and induced by the descendants of ri. • Ti associates with a semantic argument of x.","Figure 1 illustrates the labeled rooted tree for the sentence Mrs. Hills said that the U.S. is still concerned about ”disturbing developments in 569 Figure 1: Mrs. Hills said that the U.S. is still concerned about ”disturbing developments in Turkey and continuing slow process in Malaysia”. Turkey and continuing slow process in Malaysia”. π = {V B, V BN , V BG, V BZ, V BP , V BD} ⊆ A. 3.2 The Algorithm 3.2.1 Obtaining < τ1, . . . , τK > We use equation (1) proposed by (Huang and Haralick, 2010b) (Huang and Haralick, 2009) to obtain the probability value of p(c1, . . . , cK , b1, . . . , bK ). p(c1, . . . , cK , b1, . . . , bK ) = K∏ i=1 p(bi−1|bici)p(bi+1|bi, ci)p(bi|ci)p(ci) = K∏ i=1 P (bi−1, bi, bi+1, ci) (1) We use the equation (2) to find a sequence of optimal nodes < τ1, ..., τK > in T , where τi ̸= τj, i, j = 1, ..., K, τi−1τi ∈ E and τiτi+1 ∈ E but τi−1τi+1 ̸∈ E < τ1, ..., τK >= argmax c 1∈C,b","1,b′","∈E {p(b2|b1, c1)p(b1|c1)p(c1)} argmax c 2∈C,b","2,b′","∈E {p(b1|s2, c2)p(b3|b2, c2)p(b2|c2)p(c2)} ... argmax","c K∈C,b","K,b′","∈E {p(bK−1|bK, cK)p(bK|cK)p(cK)} (2)","Note: b′ is a node in a path, b′","bk ∈ E, k = 1...K. 3.2.2 Time Complexity For each node bk, we need to assign a ck, s.t. Pk = max{P (bk−1, bk, bk+1, ck) | ck ∈ C} To compute a P (bk−1, bk, bk+1, ck), we need to have four multiplications. To obtain the maximum probability value Pk, we need to have M − 1 comparisons. In the case of a path of N nodes, we have Tc = 4 ∗ N ∗ (M − 1) ∗ (L − 1) = O(N ∗ M ∗ L) Note: M is the cardinality of C, L is the maximum degree of a node in the tree, and N is the length of the path. 3.2.3 Memory Complexity Because the global maximum probability is determined by each local maximal probability, for a path of N symbols, we only need to store the 570 information of the current node. That is, we need only store M probability values in order to find the maximal probability value. Therefore, Mc = M = O(M ) 3.2.4 An Example of a Path The path P (x), where L(x) =VBN (associating with the verb concern) in Figure 1 is V BZ → V P → ADJ P − P RD → V BN in Figure 2. Figure 2: All the semantic arguments of the verb concern can be extracted from this path. 3.2.5 Finding a set of roots ri ∈ R(x) Let Q(x) denote a set of nodes in path P(x) and let R(x) denote a set of roots we want to find. • R(x) = φ, Q(x) = {τi|1 ≤ i ≤ K}","• If Q(x) ̸= φ continue the following procedure:","1. For each τi ∈ Q(x)","2. For all siblings of τi, find z, s.t. L(z) ̸∈ π and z ̸∈ {τi|i = 1, . . . , K}, R(x) ← R(x) ∪ {z}","3. For all children of τi, if none of children z, L(Z) ∈ π, GOTO 4. Otherwise, find y, s.t. L(y) ̸∈ π and y ̸∈ {τi|i = 1, . . . , K}, R(x) ← R(x) ∪ {y}","4. Q(x) ← Q(x) − {τi}","• Otherwise, stop the procedure and return R(x). 3.2.6 Building a Labeled Rooted Forest F (x) Let T be a original labeled rooted tree, R(x) be a set of roots of subtrees that we want to build, and F (x) = φ.","1. For each ri ∈ R(x), we assign ri to the variable α. We initialize Ti with only a vertex ri. We visit α.","2. For {α, β} ∈ E, and β has not been visited, we attach {α, β} to Ti. 3. Assign β to α and visit α. Go to 2. • If α = ri, then the labeled rooted tree Ti has been built. F (x) ← F (x) ∪ Ti • If α ̸= ri, backtrack from α to its parent β in T . Then assign β to α and go to 2","Figure 3 illustrates a labeled rooted forest for verb concern for the labeled rooted tree corresponds to the sentence Mrs. Hills said that the U.S. is still concerned about ”disturbing developments in Turkey and continuing slow process in Malaysia”."]},{"title":"4 Experiments","paragraphs":["We have tested our method on data set developed by (Weischedel et al., 2007), specifically, the WSJ section 00 from Penn Treebank and PropBank. A total of 233 trees associates with 233 sentences and 621 verbs, each verb has an average of three semantic arguments, hence about 2000 semantic arguments are in total. The evaluation metrics we have used are precision , recall, and f-measure (F1). Moreover, we have used 10-fold cross validation technique to obtain the average result.","For each sentence, Treebank provides a corresponding parse tree while PropBank provides corresponding semantic arguments of predicates in the sentence. These trees were generated by a statistic parser from corresponding sentences with an average accuracy 95%. These semantic arguments of predicates in PropBank were generated manually.","From the experiment, among 621 verbs, we found 621 paths in total. By excluding 30 types of paths of which occurs less than 2 times, six types of paths are remained. Among these remaining patterns, 86% paths fall in the first three patterns. Table 1 shows these patterns.","Moreover, a set of labeled rooted subtrees managed by labeled rooted forests are obtained based on the procedure described in Section 3.2.5. The test results are shown in Table 2. Note, the precision (recall or f-measure) is obtained by applying 10-fold cross validation. On the average, each time, among the 1","10 semantic arguments that have been classified, about 93% semantic arguments are correctly identified and 7% semantic arguments are classified wrong. By checking these classified instances, we found that our method is very effective in the case of a semantic argument being a sequence of consecutive words. However, if a 571 Figure 3: A labeled rooted forest F = {T1, T2, T3} for verb concern for the sentence Mrs. Hills said that the U.S. is still concerned about ”disturbing developments in Turkey and continuing slow process in Malaysia”. Table 1: Six Types of Paths . NO % Path 1 62.1 V BZ(V BD, V BG, V BP, V BN, V B) → V P 2 14.2 MD(T O) → V P → V P → V B 3 10.1 V BP (V BZ, V BD) → V P","→ V P → V BN","4 4.2 V BD(V BZ, V BN) → V P → RB → V P → V B 5 2.4 T O → V P → V P → V B → V P → V BN 6 2.2 MD → V P → RB → V P","→ V BP (V B) → V P → V BN Table 2: testing result on W SJ data Files Precision Recall F-Measure % % % W SJ 20,37,49,89 Average 92.335 94.1675 93.2512 Standard-Deviation 0.6195 0.5174 0.4605 semantic argument consists of two or more word fragments, separated by some phrases, our algorithm is less effective. For example, the sentence: He wants to see for instance the movie Superman. Our methods can not distinguish the semantic argument of want from the phrase for instance. The reason is that this phrase is the part of leaves of the tree induced from one of the roots determined by our algorithm. This suggests us that in order to exclude phrases from a semantic argument, we need to develop a method so that a set of subroots can be found. Each of them corresponds to a fragment of a semantic argument. Then, these fragments must be combined together to obtain the semantic argument. Moreover, other misclassified instances are generated by errors carried in original syntactic trees."]},{"title":"5 Related Researches and Comparisons","paragraphs":["Methods for identifying semantic arguments of predicates in a sentence can be divided into two categories with respect to the representa-tion of the sentence, namely tree-related (Gildea and Jurafsky, 2002) (Hacioglu, 2004b) (Hacioglu, 2004c) and chunk-related (Hacioglu and Ward, 2003) (Hacioglu, 2004a) semantic argument identifiers. While systems are built use the first approach are more accurate, systems are build use the second approach are very efficient and robust.","In the first approach, a sentence is represented by a syntactic tree (Gildea and Jurafsky, 2002) or some variants, such as a dependence tree (Hacioglu, 2004c) obtained from a syntactic tree. For each predicate in a tree, a set of syntactic constituents (non-terminals) is extracted. Each constituent is determined by a set of features derived from sentence structure or a linguistic context defined for the constituent. These features may be 572 predicate lemma, path from constituents to the predicate, phrase type, dependency relations be-tween predicates and constituents, position of constituent with respect to it predicate, voice, head word stem, sub-categorization. Classifiers such as support vector machines and maximum entropy models have been employed to identify constituents into one of semantic arguments of predicates.","In the second approach, semantic argument identification is formulated as a chunking task (Hacioglu, 2004a). For each predicate in a sentence, each word in the sentence is classified into three categories which are inside a semantic argument, outside a semantic argument, or begin a new semantic argument by using a set of features defined for the word. These features may be the lexicon of the word, the POS of the word, and the syntactical phrase chunks. Then, a bank of SVM classifiers, a one-versus-all classifier, can be used for each class.","Our method is based on syntactic trees. However, our method differs from others in several ways. Instead of linearly transforming a syntactic tree into a sequence of syntactic constituents, we directly traverse the tree from top to bottom and left to right to find a set roots, each of them corresponds a semantic argument of a verb. Moreover, instead of finding a set of features for each semantic arguments of a verb based on the linguistic knowledge or syntactic structure, we find our feature, a path, by the method proposed by (Huang and Haralick, 2010a). This method is simple, fast, and uses less memory. In contrast with other methods, our feature represents not one semantic argument but all semantic arguments of a verb. Furthermore, instead of finding semantic arguments of a verb by using complex classifiers such as support vector machine or maximum entropy models, we determine the semantic arguments of a verb only by setting simple rules of looking up relatives of each node in our path. We argue that our feature is the most effective, efficient, and simplest feature compared with the existing methods."]},{"title":"6 Conclusion","paragraphs":["An algorithm for identifying semantic arguments of a verb in a sentence has been discussed throughout this paper. The method is developed based on the argument that a link must exist from a verb to its all semantic arguments if a sentence is structured syntactically with the root vertex been labeled with S and the leaf vertices been labeled with lexicon of words in the sentence. A semantic argument of a verb in the sentence can be represented as a labeled rooted subtree rooted at an internal node and induced by its all descendants. Therefore, to find semantic arguments of a verb is to find a set of such subtrees, more precisely, a set of roots. In our method, we apply a probabilistic graphical model to extract such a link – a path. Then we determine these roots from the path by a set of predefined rules. Experiments are conducted on WSJ data set from Penn Treebank and PropBank. Results demonstrate that our method is effective."]},{"title":"References","paragraphs":["John Chen and Owen Rambow. 2002. Use of deep linguistic features for the recognition and labeling of semantic argument. In Proceedings of EMNLP-2003.","Daniel Gildea and Daniel Jurafsky. 2002. Automatic labelling of semantic roles. Computational Linguistics, pages 245–288.","Kadri Hacioglu and Wayne Ward. 2003. Target word detection and semantic role chunking using support vector machines. In Proceedings of HLT/NAACL-03.","Kadri Hacioglu. 2004a. A lightweight semantic chunking model based on tagging. In Proceedings of HLT/NAACL-04.","Kadri Hacioglu. 2004b. A semantic chunking model based on tagging. In Proceedings of HLT/NACCL-2004.","Kadri Hacioglu. 2004c. Semantic role labeling using dependency trees. In Proceedings of Coling 2004, pages 1273–1276, Geneva, Switzerland, Aug 23– Aug 27. COLING.","Minhua Huang and Robert M. Haralick. 2009. Discovering patterns in texts. In 2009 IEEE International Conference on Semantic Computing, pages 59–64.","Minhua Huang and Robert M. Haralick. 2010a. Discovering semantics of a word from a sentence. In 2010 International Conference on Artificial Intelligence and Pattern Recognition, pages 51–57.","Minhua Huang and Robert M. Haralick. 2010b. Recognizing Patterns in Texts. River.","Ralph Weischedel, Martha Palmer, Mitchell Marcus, and Eduard Hovy. 2007. Ontonotes release 2.0 with ontonotes db tool v. 0.92 beta and ontoviewer v.0.9 beta. In http://www.bbn.com/NLP/OntoNotes. 573"]}]}