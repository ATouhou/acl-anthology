{"sections":[{"title":"American Journal of Computational Linguistics COMPUTER UNDERSTAND I","paragraphs":["NG"]},{"title":"OF PHYSICS PROBLEMS STATED IN I~ATURAL LANGUAGE Computer Science Department University of Texas","paragraphs":["Austin"]},{"title":"78712","paragraphs":["Microfiche 5 3 Copyright @ 1976' Associa tion for Computational Linguistics This palltar dcsrril)es n conrpu t or program, ri~ lled ISAA(:. \\\\*hi~-h ($;In rc!:~(i, underst and, solw, nntl draw pic~.t-iil.cs 01' pl~ysicss ps~hlcn~s stnt ocl ita 1S1lglish. l'he program has solsrd t ~vi'nty problems. most of tvhic.11 wcrll' t alicb11 unedit rtl fsonl high school and collihge physics t tlxts. Those prohlc~ns i~lvol\\.e taigicl hod icis in st at ic. equilibrium, and incl~idt~ 411cbh objec'ts .as Icv~1,s. pivots, ivrights, ~*ol,cs, anti s1)rings in various configurations. An exanlpltl of the r.l;tss of' p1.c)t)lems sol\\?ecl is the follo\\ving (from Scilcru nl ',s Out lir~ of COIIC~CJ /,'/l?si~*s ): The foot of n ladtlcr rrsts it n vcrtic*nl i and on :I t~o~,ixo~~tat floor. Thc top of' the l;\\clcltlr is stlpptn.~~d f'ronl tlltl \\vall t)y n hot%izotlt;\\l rope 30 ft long. l'hc 1;idtlcl is 50 St 10111, \\veighs 100 11) \\(it\\) its c,entriS of gravity 20 ft fl*om thv foot. ancl a 150 111 marl is 10 1'1 fro111 the to\\). Deternlinu the tension in the isol~t~. In order. to understancl allti sol\\.t. such a pi.oblu~n, it is necessar_v to build an itltrrnal model of the problelli ill ivtlic11 the various objt'cts and the11 i~lter~*elationsllips are adequately represented. Milny of the ~.tslil t ionships ;I nd feat ulwrs of the ohjerts are not specified explicitly in the problein st;ltc~nrnt hut must be infe~*re(l by usi~lg conlnloll serlse kno\\vlccige of what is usual. In the al)o\\v esamplc, we ;*sume that .the mar is standing or1 tlie ladtlcr, i~lth(,ugh this is not esl)licitly stittetl. Ttlus, the untle~*st;ln(ling of a physics psobletn is an acti\\tPpl-ocess in \\Chic11 the Cet~tences of' the prol~lenl statement are used to guide the construction of a model which roprt.sants the relationships ant! features of objects with ~nuch , greater . detail and spcciticity t'halt they are specif'iec! in tl~c original probletn sta teme~t. In this l)npf?)., ive in\\.estigate ways in which tllr meanit~g~ of pl1rasc.s anti sentences may be unclerst~oorl and related to a developing n1otle.l of the problem. usltlg common sense knowledge (represet~tod 1,. com!rutes progrilrns) to aid the"]},{"title":"un~lel-stand inÌ‚","paragraphs":["process. \\Va_vs of representing ot~jects and rileir relationships tire developecl. These representations, which are originally sreated in rehponse to the sentences in the problem statement, are further elal)ol*atcd by proc:esses which c0nstruct.n ~eonletricl 11lc,dei ot' the problem, associate ca~lonicnl objerts (such a5.a point mass) 1~ir11 physical objects rs~lc.!~ as a person), ~vrite aild solve equations which tiescribe the inte1.actio11s of the objects and construct a diagram of the problenl, This paper is a slightly etlitcd vel-sio1l i,f tlie ar1tllnr.s Ph.'I). disse!.t a1 ion. I ar- grateful to 11iy co~nmittet !~~ernt)el s, Prof'6ssors John I,othlin, \\\\2oodro\\v Hler!..;oe, and Nornian Martin, and esl>t'ci:~l\\y to my super~i.;in;; ~)l.ofus:~oi., Hnbevt"]},{"title":"F.","paragraphs":["Simmoils. TABLE OF CON'I'ENrl'S Page LIST"]},{"title":"OF FIGURES","paragraphs":["1. INTROI)T_JCTION AND OVEIiVIEW 1.1 Introduction 1.2 Ovcr\\?iew of the Program 2."]},{"title":"REVIEW OF PREVIOUS WORK","paragraphs":["2.1 Natural Language Problem Solvers 2.1.1 Bobrow's"]},{"title":"STUDENT 2.1.2","paragraphs":["Chart~iak's"]},{"title":"CARPS","paragraphs":["2.1.3 Gelb's HAPPINESS 2.1.4 Heidorn's Sirnulation Programmi tlg System","2.2 Natural Language Processing 2.2.1 Woods' Augmented Transition Networks 2.2.2 Winograd's"]},{"title":"SHRDLU 2.2.3","paragraphs":["Wilks' Prefere~ltial Semantics 2.2,4 Simmons' Senlantic Networks 2.2.5 Schank's Conceptual Dependmcy 2.3 Minsky's Fratlle System Theory 3."]},{"title":"PARSING 3.1","paragraphs":["Introduction 3.2 Control Structure of *he Parser 3.3 Data Structures Produced During Parsing","3.4 Noun Phrase Parsing 3.4.1 Basic Noun Phrase 3.4.2 Noun Phrase Co~npou%ds and Modifiers 3.4.3 Noun Phrase Variants 3.5 Verb Phrase Parsing 3.5.1 Basic Verb Group 3.5.2 Verb Phrase 3.6 Prepositional Plwase Parsing 3.7 Clause Parsing 3.8 Cor~clusion 4. SEMANTICS 4.1 Introduction 4.2 Preliminary Modifier Procwssing 4.3 Preposition Semantics 4.3:l Semantic's of the Preposition \"OF\" 4.3.2 Semantics of Other I'reposi tio~us 4"]},{"title":".","paragraphs":["3 .3 Ilefinition and Translatiotl of Pr~positions 4.4 Referent Identification 4.4.1 Identifying 13hysic;~l Entity Referents 4.4.2 Identifying Location Ii~furtlnts 4.4.3 Attachnuent Identification 4.5 Modifier Senla t~t ics 4.6 Verb Semantics 4.6.1 Semantics of the Verb \"BE\" 4.6.2 Selnantics of the Verb \"SUPPORT\" 4.6.3 Semantics of 0 tl~er Verbs 4.7 Question Semantics 5. CONSTRUCTION"]},{"title":"OF","paragraphs":["OBJECT FRAkIES AXI>"]},{"title":"THE","paragraphs":["GEOMETRIC MODEI, 5 .?1 Introductioh 56 5.3 Making Canonical Object Frames 57 5.3 Geometric hlodel Co~lstruction 59 5.4 Frame Completion (3 2 5.5 Conclusioi~ 6 3 6."]},{"title":"PROBLEM","paragraphs":["SOLVING 6.1 Generation of Equations 6.2 Equation Solviilg 6.3 Answer Generation","7. PICTURE CONSTRUCTION 7.1 Constructing the PiEture PvIodel 7.2 Drawing the Diagram 8. CONCLUSION 8.1 Methodology 8.2 Directions for Future Research 1. Introduct,iol~ i~ild Overview '1 ,I Introduct ion This paper describes a computer pl'ogram, called ISAAC, which is able to read and understand physics problems stated in English, write equations for the problems and solve them, and draw diagrams showing the objects irl the problr~;ls ~ind their spatial relntiot~ships. The pro~~ilt11 has*solverl twenty problems. \\\\*hirh wertr taken essentially ulledited born physics textbooks: some iample problems are shown, with the drawings and answers generated by the program, in Appcntiis A. While the diagram and answer to a problem are the most eas~ly observable outputs of the program, another significant output is its robust intel-11al inodel of the objects in the problem and their relationships. It is this model which makes possible the generation of the diagram and the answer to the problem. The internal nlodel is robust in the sense that it represents, in an explicit and readily accessible form, nost of the inrorn~ation which a competent hu~niin reader might be expected to derive from the English problem statement. In addition to the ways in which it is currently used, the model could be used for answering questions about the objects and their relationships, or. fbr generating a description of the problem in English or in another language. or for generating other types of diagrams (such as a force diagram). Since it makes all of the features and relationships of the objects explicit, the internal model is ma 11y t inles larger than the original problem statement. which specifies only the major features and leaves many details to be filled in by the' reader. 1.2 Overview of the Program The overall organization of the progratn and Its data elements is shown in Figure 1.1; programs are represented by boxes with double lines, and data structures by plain boxes. In this section, we present an overview of the functions performed by each group of programs and an overview of the types of information represented in the data structures. The process of understa~~ding and solving a physics problem occurs in several distinct steps. First, the problem statement is translated fro111 E tlglish into a structured par3ing of the sentences, which is iilterpretetl semantically to construct an initial intel.1131 model. This nlodel is interpreted to form a model in terms of cclnonif:al physical obje :ts (such as a point mass). A geometric model which reprr.wnts the spatla1 position and orientation of each object is corlstructed. Equations which descr~be the Figure 1.1: Overall Program Organization 1 b f English Problein Statement","A","., ! L. -I I c"]},{"title":"A 4 L F . r Y","paragraphs":[")"]},{"title":"' Y-","paragraphs":["Semantic Programs Parsing Programs Parsed Sentences > I T 'InitJal Internal Model Y"]},{"title":"- -","paragraphs":["Canonical Object 1. EUCLf D Frame"]},{"title":"-","paragraphs":["Creation 1 Model A 4 Programs"]},{"title":".. -","paragraphs":["Geometric Model ? t Problem Solver Picture Model Programs I","+ Equations","Ad r","Solutions Picture d Model"]},{"title":".","paragraphs":["< - i Answer Generator"]},{"title":".. v Picture","paragraphs":["Generatom","_1",", I * Diagram Answer","4 A"]},{"title":"-","paragraphs":[", 8 interactions"]},{"title":"of","paragraphs":["the objects a.ccolbding to physical laws are written and solved, and answers are generated from the solutions. Finally, a pictu1.e model is coustruc~tc~d ant1 used to guide the draw.ing of a diagram of the problem. 'T'hese processes arc dt.scribed below in somewhat grcatel8 dctail. The parsing prograals transform each sentence from a linear starill:: of' words into a more structured form"]},{"title":"in","paragraphs":["whicli the relationships of words and phrases to enoh other are clearly defined. Each type of phrnse is parsed by a specialist i)rogram which implements the grammar of the phrase as a11 augmented transition network. The grammar programs call the semantic programs both to interpret the sel~lalltic network structure produced Bs a result of the parsing and to guide the parsing process itself, Whether a particular modifier can be used to rnotiify a noun phrase, For example, may depend on the actual relatio~lships l~etwern objects in the model of the problen~. After each clause has been parsed, the semant io lqout ine associated with the mni 11 \\terb is called to cotnplete the setnantic processi~lg of the clause. This 3et11antic processing transfers the illformation provided by the sentence to' a growing model of the objects in the proble~rl and their relationshiljs. Once the se~narltic processing is colnpleted. the semantic netxark str~lctures produced by the parser are no longer used. All of the sentences ill the problem statement are parsed and processed semantically before the remaining parts of the program are executed. The routines grouped under the heading of \"Semantic Programs\" perform a variety of tasks. Semantic routines are associated with verbs and prepositions, and 111 some cases with other words. Preposition senl~antic routines must deternline the appropriate sense-nleaning of the preposition (using n decision net work based or1 rough semantic classifications of the nlodif'ied phrase and the object of the prepositic,~) anri then make the, appropriate changes 111 the semantic network token of the modified phrase. Verb semantic: ruUMnes typically act to tr:~nsft.r inforrn;~tion from the semant ir network ta the internal mtrdul. or dtll'itle relationshil~s anlong objects i11 the model; determinatioll of the proper dense-meaning of the verb is often uileded as well. Another major semautic task"]},{"title":"is","paragraphs":["the identification of the referent of a noun phrase. Given a nou~l phrase which denotes an object or a location, it is necessary to de.c~de whether the phrase refers to an object or location wlilch already exists in the nlodel (and if' there are several possibilities, which one it refers t.01, or whether a new object or location must he created as the referent of.the phrase ancl axlded to the model. After all the sen'tences of the problem statement have been read, the frame creation programs are called to assign to each object a ca~lonical object type (s~icll a:: a point mass or an \"ideal\" spring) which represents thr behavior of the ohject as ~t Pppears in the problem. The same t>-pe of actual ntlject nnay hr represented 1)~ clifk~.etlt canonical objects. depenciing on its contest in the pr,obietn. Thus, a ;~ei.son .n::i be represented as a pivot wheir carryllg a plank, or as n point moss ~vhen standing on ,x:e. Once a canonical object frame !1t1i heen selected. the"]},{"title":"model","paragraphs":["of rile object is es,inlinri, to r C"]},{"title":"- 22","paragraphs":["-4 P a"]},{"title":"- - -","paragraphs":["=L"]},{"title":". . 4 --","paragraphs":["+ +-r 3 4 S n 4 L' 's 3 Z C"]},{"title":"-","paragraphs":["+ I: 0 2. .A 3 3"]},{"title":"2 'r, 2 C -fi -37 3 -L' - 4 - 2 'I;","paragraphs":[". .-. r."]},{"title":"- d","paragraphs":["*"]},{"title":"-","paragraphs":["+ -d 5 .C? s n 4 2 C 2 5 3 'I? P C P"]},{"title":"- --","paragraphs":["u d '3 0 4 a d 4 .c, rd S cd"]},{"title":"2.","paragraphs":["Review"]},{"title":"of","paragraphs":["Previous Work This review"]},{"title":"of previous","paragraphs":["work, is grouped illto three sections: progriims"]},{"title":"which","paragraphs":["solve proble~ns stated ill natural lnngunge, natural langui~a processing, allti thcoreticol work. 2.1"]},{"title":"Natural","paragraphs":["Language Problem Solvers 2.1.1 Bobrow's"]},{"title":"SfI'UI)I.:NT The","paragraphs":["first natural language problem-sol~ing progmm \\r7ns"]},{"title":"the STUDENT","paragraphs":["system of Bobrow [Robrow 681 for solving algebra story problems. The natural language processing"]},{"title":"of","paragraphs":["this program"]},{"title":"is","paragraphs":["based on pattern matchillg around key words"]},{"title":"and","paragraphs":["phrases. The phrases around the key words become the \"variables\" in the equations which are constructed from the sentences. Thus. in one of Bobrow's examples,"]},{"title":"If","paragraphs":["the number of customers Tom gets is twice the squirre of 20 percent of the number of advertisements he runs, and the number of"]},{"title":"advertisements","paragraphs":["he"]},{"title":"runs is","paragraphs":["45, what is the number of custom el*Ì‚Tom gets? the two phrases"]},{"title":"\"the","paragraphs":["number of customers Tom gets\" and \"the number of advertisements"]},{"title":"he","paragraphs":["runs\" are treated as variables."]},{"title":"This","paragraphs":["problem is thus treated as if it were stated"]},{"title":"If x is","paragraphs":["twice the square of"]},{"title":"20","paragraphs":["percent of y, and y is 45, what"]},{"title":"is x? The","paragraphs":["pattern-matching rules break the input sentences into a possibly embedded set of \"kernel sentences\", in an order determined by priority values assigned to the keywords. In the above example, since \"percent\" has the highest priority, it would be processed first. There is a fairly direct transformation from English sentences into equations: In fact,"]},{"title":"the","paragraphs":["transformatio~ls are made upon the input sentences themselves until the sentences become the equations used in solving the problem. Large segments of the original sentences remain as \"variables\" in the equations. When the equations constructed from the input are insufficient to find a solution, other equations can be retrieved (based on words in common with \"variable\" phrases) expressing general relationships, such as"]},{"title":"(EQUAL (DISTANCE) (TIMES (SPEED) (TIME))).","paragraphs":["Bobrow's program was impressive for its time (about 1965). Howev9r. this type of"]},{"title":"approach","paragraphs":["has definite limitations."]},{"title":"The","paragraphs":["technique"]},{"title":"of","paragraphs":["transforming sentences directly into equations works only when the sentences express algebraic relationships among quantities. The \"variable\" phrases must be similar in each occurrence so they can be matched properly, and the key words must, not be used in multiple ways which might confuse the pattern matcher. These limitations make it difficult to extend the techniques Bobrow used to more.cotnplex problem areas. 2.1.2 Charniak's"]},{"title":"CARPS","paragraphs":["Charhiak's"]},{"title":"CARPS","paragraphs":["program [Charniak 681 is a program for solving calculus rate problems."]},{"title":"In","paragraphs":["many ways, it is an extension of Bobrow's"]},{"title":"STUDENT","paragraphs":["program. The analysis of the English input sentences is done by pattern matching which is slightly more sophisticated than that of"]},{"title":"STUDENT.","paragraphs":["The type of' rate problem (distance or volume)"]},{"title":"is","paragraphs":["determined by the occurrence of certain key words in the problem statement. Two sets of patterns are used to analyze the sentences appearing in the two types of problems."]},{"title":"Many","paragraphs":["of the patterns used are very ad hoc. The"]},{"title":"CARPS","paragraphs":["program builds a structure (generally a single tree) containing the information derived from the problem statement. This structure is used to generate the equations required to solve the problem. Additional equations may be derived from \"world knowledge\", but this is again very ad hoc. Thus. while the problems solved by"]},{"title":"CARPS","paragraphs":["appear very impressive, the program is tailored so closely to this specific set of problems that it would be difficult to extend it to additional problems or problem areas. 2.1.3 Gelb's"]},{"title":"HAPPINESS HAPPINESS","paragraphs":["[Gelb 711 is a program which solves basic probability problems stated in English. This program seems much like Charniak's: it build's a single tree structure representing a single problem. and selects a solution method based on the occurrence of keywords in the problem statement. The input sentences are broken into simple clauses and phrases by pattern matching. These simple clauses are then analyzed by a context-free grammar to extract the canonical verb and its voice. subject."]},{"title":"and","paragraphs":["predicate."]},{"title":"If","paragraphs":["certain key words (e.g., those referring to dice and coins) are found, a special search for possible modifiers of these words is made. This program, like Charniak's. is tailored very closely to a small set of specific problem types."]},{"title":"It","paragraphs":["wobld be difficult to extend a program using these techniques to handle a new problem area. 2.1.4 Heidorn's Simulation Programming System The"]},{"title":"NLPQ","paragraphs":["system of Heidorn [Heidorn 7'21 aqcepts an English statement of a queueing simulation problem, and produces from it a program in the"]},{"title":"GPSS","paragraphs":["simulation language which will simulate the problem. The system is interactive: it requests additional information from the user when the problem statement is incomplete. allows"]},{"title":"the","paragraphs":["user to ask questions about the simulation model, and can generate a complete problem description in English from its internal model. English sentences are parsed and gei~erated frotn two interpreted phrase structure grammars augmentetl by some semantic programs. These grammars go down to the character level, and handle English morphology as well us phrase structtire. 'l'he grammar is based in part on the theory of stratificatio~lal linguistics. The basic unit of storage in the internal tnodel is the \"record\", which is komputationally equivalent to a"]},{"title":"LISP","paragraphs":["atom with its property list. This program represents an advance over those considered previously in this section. It uses a legitilnate grammar to parse the inpup sentences, and can constrtict a"]},{"title":"mpdel","paragraphs":["which expresses relationships among a number of ot)jjects."]},{"title":"The","paragraphs":["grammar is specialized for simulation problems, and would have to be modified to extend the program to other areas. However, the performance of this system is quite impressive. 2.2 Natural Language Processing 2.2.1 Woods' Augmented Transition Networks"]},{"title":"Thc","paragraphs":["Augmented Transition Network (ATN) of Woods [Woods 501 is a powerful formalisnl for representing grammars. The grammar of ISAAC, while written in \"pure\""]},{"title":"LISP,","paragraphs":["is equivalent to an"]},{"title":"ATN","paragraphs":["grammar. A transition network consists of a set of nodes (representing states) and a set of directed arcs between the nodes which specify transitions between states based upon the input string being scanned. An"]},{"title":"ATN","paragraphs":["is"]},{"title":"augmented","paragraphs":["in several respects."]},{"title":"The","paragraphs":["test associated with a state transition may be arbitrarily complex, depending on the previously parsed structure as well as the input. The test may be the name of another transition network, in which case control is given to that network at a lower level, effecting a \"subroutine call\" to the subordinate network. These calls may be recursive. Transition arcs may also be augmented by arbitrarily complex strhcture-building actions: The structures so built are passed among network levels in designated registers."]},{"title":"If","paragraphs":["an attempted parsing of a subnet fails, the ATN interpreter automatically handles backup from the failure point and tries another possible transition. The automatic backup and clearly defined interface (via named registers) between network levels make the ATN a very \"clean\" formalism for writing grammars. 2.2.2 Winograd's"]},{"title":"SHRDLU","paragraphs":["Winograd's widely known SHRDLU program [Winograd 721 allows a person to converse with a simulated robot about a \"micro-world\" consisting of various colored blocks on"]},{"title":"a","paragraphs":["table. The robot may be asked to perform actions such as moving blocks or building structures and to answer questions about the state of the micro-world or about its motivatiolls for performing particular actions. The system employs a large grammar, based on Halliday's theory of Systemic Grammar. Much of the knowledge in t hc system is represented in the form of"]},{"title":"MICRO-PLANNER","paragraphs":["theorems. This miikes it easy for programs to be generated to find the answers to questions about the world model, and allows a number of logical forms such as conjunction. disjunction, and qu:\\ntification to be handled naturally. The theorem prover base is a source of consider~~ble power for certain types of semantic operations. The semantics is made much easier hv the small. finite world of very simple objects (colored blocks). Still, the"]},{"title":"SHRDLU","paragraphs":["svstpm remains one of the largest and most powerful natural language systems produced to date, anti its"]},{"title":"fame","paragraphs":["is well deserved.","2.2.3 Wilks' Preferential Semantics The work of Wilks [Wilks 751 is unique among \"artificial intelligbnce\" approaches to natural language processing in that Wilks is interested primarily in machine translation, rather than in deep understanding of natural"]},{"title":"I","paragraphs":["anquage by computer. However, there is an interesting parallel between the semantic templates used by Wilks and some of the semantic processing done in ISAAC. which is of course concerned with deep understanding."]},{"title":"In","paragraphs":["Wilks' system, a sense meaning of an English word is represented by a formula, which is a list of element names. The elements are approximately 70 semant~c classes which roughly classify the entities, qualities. actions, etc. which occur in English sentences. Examples of such elements are"]},{"title":"MAN","paragraphs":["(human being),"]},{"title":"STUFF","paragraphs":["(substances),"]},{"title":"KIND","paragraphs":["(qualities), and"]},{"title":"CAUSE","paragraphs":["(cause to happen). These elements may be combined into"]},{"title":"a","paragraphs":["formula to represent a word meaning, as in"]},{"title":"(FLOW STUFF)","paragraphs":["for the word \"liquid\". 4 sentence is analyzed by trying to fit a template (whicliis a list of element types) to some of"]},{"title":"the","paragraphs":["possible sense meanings of the words occurring in the se~tence. The templates are intended to represent the basic types of \"messages\" that people wish to convev in language. For example, the template MAN BE"]},{"title":"KIND","paragraphs":["would represent the class & messages in which the sentence \"My sister is pretty\" is included. After (possibly several) templates have been fitted 3 a piece of text, \"preferences\" of parts of each template are examined to"]},{"title":"see","paragraphs":["if they are satisfied. A verb. for example, may prefer an animate subject. The template for which the greatest number of preferences are fulfilled will be chosen as the intended meaning; however, possible fillers for the template slots will be accepted even though they do not meet the preferences, provided that the template as a whole is the best match. There is considerably more detail to Wilks' system which will not be covered here. We mention Wilks because there seem to he parallels between some of his techniques and techniques used in ISAAC. One such parallel is the use of rough seinantic classes to distinguish between sense mea~lings of worcls, which we follt~tl-to he particularly useful for determining pr.cl~osition meanings. Othurs hove rev-tninljt uxrtl rough seninntic classes tn distinguish srllse melulings"]},{"title":"in sporial","paragraphs":["applichtions: \\Yilksl work is valuable for investigating this techllicluu over a large subset"]},{"title":"of3Rnglish. A","paragraphs":["second parallel lies in the ncreptnnce of 11 tvord (or lr~rger unit) which t'ails to meet the preferences of the template which rovers it."]},{"title":"111","paragraphs":["the"]},{"title":"ISAAC","paragraphs":["system, this acceptance"]},{"title":"is","paragraphs":["an active process in which a11 acceptable it~terpretntion nust hr constructed fro111 the given unit."]},{"title":"These","paragraphs":["proccssrb ilre ciiscussed"]},{"title":"in","paragraphs":["more drtclil 111ter. 2.2.4 Sinlmons' Senlt~ntio Nettvorks"]},{"title":"The","paragraphs":["Semantic Network formnlism of Sio~mons [Simmons 7:l: Simmc~~s and Bruce ill provides"]},{"title":"n","paragraphs":["po\\verful and convenient method for representing the elements of a sentence and the semantic relations"]},{"title":"(deri\\-ed","paragraphs":["from a variety of syl~tactir forms) \\~hirh hold between them. 111 effect, it prodL~ces at1 ordei Tng of the argulhents ofLa ~t;.l~lat~tl~' grouping (guch as a verb and its case arguments, modality, and optional modlfieraj which is invariant cnrer the various syntactic orderings which express the same relationships. Thus. John gave Mary the book. John gave the book to hIary. The book was given to hlary by John. would all generate the same semnntir netv-ork structure. The semantic netwo1.k formalism has beell used for language gene]-ation [Simmons and Slot~~1111 721 AS \\v(3ll 3s parsing. [Simmons and Bennett-Novak 751 shows how these structures may he usetl to produce a small natural language understanding system with a minimum of effort. The structures used by"]},{"title":"ISAAC","paragraphs":["in understanding sentenc'rs are ,a natural extension of Semantic Networks as used by Simmons, In order to handle unultiple s~ntence discourse, links are made from tokens in individuai senterlces to the refel-mts of the tokens in the problem model which is being co~lstructed. Semantic interpretations are placed on some tokens as their meani~lgs are determined: Particular semantic interpretitions may be specified based on information from many different sources."]},{"title":"Making an","paragraphs":["interpretation of a token may cause links to be made from that token to objects not mentioned in the sentence and may generate additional inferences about the relationships"]},{"title":"of","paragraphs":["the objects involved. These processes are discussed in derail in later chapters. 2.2.5 Schank's Conceptual Dependency","\" w The Conceptual Dependency system of Roger Schank [Schank 73. ,a] is a theory (embodied in a series of computer programs) which postulates that the concepts transmitted in natural language can be reyri?setlted as col-11plex structures bnsecl on a small number of primitive actions. The primitive actions are linketl by named links to their case arguments (some of which are other primitive action groups) and to other groups to which they are related, e.g.; causally. Some case arguments we mal~datory, so"]},{"title":"that ih \"John","paragraphs":["hit Mary\" we"]},{"title":"must","paragraphs":["infer"]},{"title":"an","paragraphs":["instrument in this case John's Ililnd) used in performing the action."]},{"title":"While the","paragraphs":["structures and actions used by Sch~nk are not very useful for physics problems, some of the concepts he uses (such as inferring a required semantic object when"]},{"title":"it","paragraphs":["is u nspecifird) are basic to almost any language u nclerst antler. &hank's work is also importfa nt because l~e has defined a set of' primitive concepts and actions which can be used to express a fairly wide rmge (though certainiy 11ot all) of natural language sentences. 2.3 Minsky's Frame System Theory Minsky's frame system theory [Minsky 741 pi-oposes that knowledge is 9 organized"]},{"title":"(in","paragraphs":["humans and, potentially. in computers) in terms of interconnected","elements called Frames. A frame is a data-structure for representing a stereotyped situation, like being in a certain kind of living room, or going to a child's birthday party. Attached to each frame are several kinds of information. Some of this information is about how to use the frame. Some is abgut what one can expect to happen next. Some is about what to do if these expectations are not confirmed. A frame may have \"slots\" which can be filled by the particular \"arguments\" invc~lved in an instantiation of the frame. There may be procedures associated with n frame to determine the suitability of proposed arguments and to infer values for those which are unspecified. Minsky also makes some general comments about how frames may be used in computational linguistics."]},{"title":". . .","paragraphs":["in understanding a discourse, the synthesis of a verb-structure with its case-assignments may be a necessary but transient phase. As sentences are understood, the resulting substructures must be transferred to a growing \"scene-frame\" to build up the larger picture.","Minsky's frame system theory has been immensely popular-so popular that many people are claiming thatframes are exactly what they bave been doing all along. There are many similarities between the processes and data structures used by ISA.4C and the frame systems described by Minsky, and the term \"frame\" will be used"]},{"title":"in","paragraphs":["describing some of them. The interpretations given will of course be those of the author. The idea of frames is a powerful one. but the mechanics or their implementation remains a problem for research."]},{"title":"3.","paragraphs":["Parsing 3.1 Introductiol~"]},{"title":"Parsing,","paragraphs":["as"]},{"title":"used","paragraphs":["in this chapter., means the process"]},{"title":"of assigning","paragraphs":["a"]},{"title":"structure","paragraphs":["to the linear string &of words rotnprising"]},{"title":"a","paragraphs":["sentence so that the syntactic relationships among the words and phrases in' the sentence are tnade explicit. The processes of relating the structures in the sentence' to parts of the developing model of the problem"]},{"title":"and of","paragraphs":["determining the meaning of the structures will be treated in the chapter 011 Semantics. Obvionsly, there"]},{"title":"is no","paragraphs":["clear"]},{"title":"division hetween","paragraphs":["what is syntas"]},{"title":"and what","paragraphs":["is semantics; many constructions could be claimed to be either."]},{"title":"In","paragraphs":["the sentence processing done"]},{"title":"by ISAAC,","paragraphs":["syntactic"]},{"title":"and","paragraphs":["se111~1ltic processing are frequently intermixed."]},{"title":"We","paragraphs":["shall describe the two parts separately to make them easier to understand,"]},{"title":"while","paragraphs":["trying to"]},{"title":"indicate","paragraphs":["the points at"]},{"title":"which","paragraphs":["they interact."]},{"title":"How","paragraphs":["to best organize th8 interactions of syntactic and semantic processes in a language understanding program remains an unsolved problem. Although the parsing programs"]},{"title":"in ISAAC","paragraphs":["are written in \"pure\""]},{"title":"LISP,","paragraphs":["their structure is strongly influenced by the Augmented Transition Network"]},{"title":"(ATN)","paragraphs":["formalism of Woods [Woods 701. An"]},{"title":"ATN","paragraphs":["grammar allows sub-grammars for phrases to"]},{"title":"be","paragraphs":["called (recursively) as subroutines by other grammars. A grammar program may build structures which are passed back to the program which calls it."]},{"title":"In","paragraphs":["case an attempted subgramrnar fails. the grammar interpreter automatically"]},{"title":"backs","paragraphs":["up from the failure poi~t and tries the next possible alterllative which is specified. These features of"]},{"title":"ATN","paragraphs":["grammars are also present in the parsing programs of"]},{"title":"ISAAC.","paragraphs":["The grammar programs are organized as"]},{"title":"a","paragraphs":["set of parsing functions, most of which parse a single functional"]},{"title":"unit, such as","paragraphs":["a noun phrase. This orga~lization in terms of functional units seems natural because"]},{"title":"it","paragraphs":["allows the grammar functions to communicate with each other by passing pointers to complete, well-defined functional structures. A noun phrase, for example, causes the production of a noun phrase token structure which has a standard form, independent of the function of the noun phrase in the sentence. Grammar functions which parse larger syntactic"]},{"title":"units,","paragraphs":["such as a clause, connect the smaller structures, such as noun phrase and verb phrase tokens, by means of named links which specify the relationships of the phrases in the sentence."]},{"title":"The","paragraphs":["structures which"]},{"title":"are","paragraphs":["produced"]},{"title":"by","paragraphs":["the parsing programs"]},{"title":"bear a","paragraphs":["strong resemblance, to the semantic networks of Simmons [Simmons '731. The grammar functions which parse"]},{"title":"the","paragraphs":["major phrases. such as noun phrases and verb phrases, produce,\"token\" structures which represent the itlforlnation in the phrase in a standard and readily accessible form. Other grammar functions, such as those which parse prepositio~lal phrases and other modifiers, may make changes anti add information to the modified token structures rather than creating new structures themselves. The links between token structures may specify semantic relationships (for example, that one noun phrase namesea location on the object referred to by another noun phrase) as well as syntactic relationships."]},{"title":"In","paragraphs":["some cases (e.g., with prepositional phrase modifiers), the semantics may be done at onct, so that semantic links among the tokens are not needed."]},{"title":"As","paragraphs":["semantic processing proceeds, the token network structure is elaborated by adding"]},{"title":"semantic","paragraphs":["intelbpretations to some tokens a~ld. by creating links between some tokens and the objects to which they refer in the program's model of the kvorld. These semantic processes may render a toke11 unnecessary and leave it unlinketl to thL: rest of the structure. After all the semantic processing has been done, the information in the sentence has been transferred to the world nlodel, and the network of toker~s is no longer needed. 3.2 Control Structure of the Parser The parsing programs are written as"]},{"title":"LISP","paragraphs":["functions. without using an additional interpreter as a Woods system does. Automat~c backup and control of the scanner which points tq the current position in the sentence being parsed are accomplished bv"]},{"title":"-","paragraphs":["a set of small functions which are called from within the individual parsing programs. These functions set the system registers (global variables) appropriately for the current state of the parser."]},{"title":"A","paragraphs":["sentence is represented internally as an ordered list of ~vords. As the sentence is scanned from left to right, the global variable"]},{"title":"SENT","paragraphs":["is set to point to the current position in the sentence. The current word (or multi-word unit) being scanned is put info"]},{"title":"the *","paragraphs":["register. Thus, a grammar program could test whether the word currently under the scanner is \"and\" by using the"]},{"title":"LISP","paragraphs":["code (EQ"]},{"title":"* \"AND),","paragraphs":["where the quotation marks are an abbreviarion for the function"]},{"title":"QUOTE.","paragraphs":["The parsing of a sentence is initiated by setting"]},{"title":"SENT","paragraphs":["to the sentence and calling the function SETVo set the :': register. When a grammar program wishes to move the scanner one position to the right. it does so by calling the function ("]},{"title":"=>","paragraphs":["). The next word to the right and the second word to the right may be gotten by using the functions"]},{"title":"(NEXT)","paragraphs":["and"]},{"title":"(NEXTS),","paragraphs":["respectively, without affecting the position of the scanner. The function CAT (category) is frequently used to test whether the word currently under the scanner is in a particular category, as defined in the lexicon. Thus,"]},{"title":"(CAT \"ADJ)","paragraphs":["may be used to test whether the current word is an adjective."]},{"title":"Since","paragraphs":["the parser operates from left to right,"]},{"title":"it","paragraphs":["sometimes happens that a grammar program fails tojfind the type of phrase it expects, after it has moved the"]},{"title":"scanner","paragraphs":["from its initial position. For"]},{"title":"example, in","paragraphs":["parsing"]},{"title":"the sentence \"To","paragraphs":["err"]},{"title":"is","paragraphs":["human\","]},{"title":"the","paragraphs":["parser"]},{"title":"might","paragraphs":["first"]},{"title":"at,te~i~pt to","paragraphs":["pilrse"]},{"title":"a","paragraphs":["prepositional"]},{"title":"phrase. The preposition would be","paragraphs":["found,"]},{"title":"and the","paragraphs":["noun"]},{"title":"phrase parsel would","paragraphs":["be"]},{"title":"cnlled","paragraphs":["after"]},{"title":"nroving the","paragraphs":["scanner."]},{"title":"The noun pllrnse parser","paragraphs":["woulcl"]},{"title":"finti","paragraphs":["the"]},{"title":"verb \"err\",","paragraphs":["and so, it and the prepositional phrase parser wnuld"]},{"title":"fail. In order to","paragraphs":["handle such cases, it"]},{"title":"is","paragraphs":["necessary to l~e"]},{"title":"able","paragraphs":["to save"]},{"title":"the","paragraphs":["current"]},{"title":"y~sition","paragraphs":["in the sentence so that the purser can"]},{"title":"bark up","paragraphs":["and"]},{"title":"try something else when","paragraphs":["an attempted"]},{"title":"parsing fails. This","paragraphs":["is"]},{"title":"nccornplishetl","paragraphs":["by calling three smitll"]},{"title":"functions, SAVE, SIJCCESS. ant1 FAIL, within each parsing function. Nornmally, n parsit~g Rulctiun ill esecute (SAVE)","paragraphs":["ils its"]},{"title":"firsl.action and esecutc","paragraphs":["either \\"]},{"title":"FhII.)","paragraphs":["or"]},{"title":"(SUCCEBS), as","paragraphs":["appropriate,"]},{"title":"immedintely before it esits. SAVE s:nPes","paragraphs":["the poil~tcrs to the current"]},{"title":"point","paragraphs":["in"]},{"title":"the","paragraphs":["sentence"]},{"title":"on a push-down stark. In","paragraphs":["atitfition, it saves the current"]},{"title":"point in the list of generated atqms,","paragraphs":["so that ntly"]},{"title":"atoms gene~ated by a","paragraphs":["ftlnction a"]},{"title":"hich","paragraphs":["later fails"]},{"title":"can","paragraphs":["be"]},{"title":"deleted. SUCCESS","paragraphs":["removes one set of pointers from the stack: since"]},{"title":"the","paragraphs":["attempted parsing was successful, these pointers are no longer needed."]},{"title":"FAIL","paragraphs":["restores"]},{"title":"the","paragraphs":["pointers to the sentence to their original position, and calls"]},{"title":"SET","paragraphs":["to restol-r the"]},{"title":"*","paragraphs":["register."]},{"title":"In","paragraphs":["addition. it releases any atoms which may"]},{"title":"have","paragraphs":["bee11 generated by the"]},{"title":"function","paragraphs":["which"]},{"title":"failed. In order","paragraphs":["to"]},{"title":"illustrate","paragraphs":["how the parsing functions are actually written, a simple function"]},{"title":"to","paragraphs":["parse a noun"]},{"title":"phrase (using","paragraphs":["the"]},{"title":"same","paragraphs":["conventions as"]},{"title":"the parsing","paragraphs":["programs of"]},{"title":"ISAAC) is shown below. This program parses","paragraphs":["a"]},{"title":"simple noun pht-afe consisting","paragraphs":["of"]},{"title":"an","paragraphs":["optional determiner, zero or more adjectives,"]},{"title":"and","paragraphs":["a noun. The program s~lcceeds"]},{"title":"and returns True if it finds such a","paragraphs":["ph~+ase: otherwise,"]},{"title":"it restores","paragraphs":["the pointers uslng"]},{"title":"FAIL and returns NIL. No","paragraphs":["structures are"]},{"title":"built by this","paragraphs":["program, but it is easy to see how structure-building code Could be added."]},{"title":"(NP (LAMBDA","paragraphs":["( )"]},{"title":"(PROG","paragraphs":["( 7"]},{"title":"(SAVE) (COND ((CAT WET)","paragraphs":["(=> )))"]},{"title":"A (COND ((CAT \"ADJ)","paragraphs":["("]},{"title":"=>","paragraphs":[")"]},{"title":"(GO A)) ((CAT \"NOUN)","paragraphs":["(=> )"]},{"title":"(RETURN (SUCCESS))) (T (RETURN (FAIL)))) 1)) This pmqram","paragraphs":["accepts"]},{"title":"a noun phrase","paragraphs":["equivalent"]},{"title":"to that","paragraphs":["accepted"]},{"title":"by","paragraphs":["the"]},{"title":"following","paragraphs":["grammar: Using the Woods"]},{"title":"ATN","paragraphs":["formalism, such a program could"]},{"title":"be","paragraphs":["written as followkr"]},{"title":"(NP/ (CAT DET T (TO NP1)) (TST T T (JUMP NP-1 ))I (NP1 (CATADJ T (TO NPI","paragraphs":["))"]},{"title":"(CAT NOUN T (TO NP2))) (NP2 (POP T T))","paragraphs":["Our method of writing pnrsing-functions requires th~ writing of slightly more"]},{"title":"code","paragraphs":["than"]},{"title":"is","paragraphs":["required for a Woods interpreter system, but sit"]},{"title":"avoids","paragraphs":["the overhead of","interpretive execution. The functibn"]},{"title":"SET*, which sets","paragraphs":["the"]},{"title":"value of the","paragraphs":["'X register,"]},{"title":"checks for","paragraphs":["maltiple-word units,"]},{"title":"and","paragraphs":["replaces"]},{"title":"them","paragraphs":["with"]},{"title":"single","paragraphs":["words in the"]},{"title":"*","paragraphs":["register. \"As much 6 6"]},{"title":"as\",","paragraphs":["\"center of gravity\", cross section\". \"point of application\", and \"so that\""]},{"title":"are","paragraphs":["recognized as multiple-word units."]},{"title":"These","paragraphs":["gl-oupiqgs could have been lrandled by other methods, but replacing themby"]},{"title":"a","paragraphs":["single \"constructed\" word is"]},{"title":"a","paragraphs":["convenient way to do it."]},{"title":"A","paragraphs":["large parsing system wpuld need to be able to back up ?n case the multiple-word interpretation was incorrect; in our limited field of physics problems no such ambiguities accurred. Becker [Becker 751 has argued that such groupings play a major"]},{"title":"role in","paragraphs":["language. Values are passed between levels of the grammar using"]},{"title":"the","paragraphs":["normal"]},{"title":"LISP","paragraphs":["conventions of function arguments and returned values. A returned value of"]},{"title":"NIL always","paragraphs":["indicates failure of a grammar program."]},{"title":"A","paragraphs":["grammar program which"]},{"title":"succeeds","paragraphs":["may return a generated token atom (as in the case of a Noun Phrase), or it may attach its results to existing atoms and simply return True (as in the case of a Prepositional Phrase). Some grammar functions"]},{"title":"have no","paragraphs":["arguments. but"]},{"title":"others (such as","paragraphs":["the"]},{"title":"Verb","paragraphs":["Phrase) have quite a few. 3.3 Data Structures Produced During Parsing As a sentence is parsed, the grammar programs create a set of intertinked"]},{"title":"nodes","paragraphs":["representing the major phrases (primarily Noun Phrases and Verb Phrases) of a sentence. These networks initially"]},{"title":"bear","paragraphs":["a strong"]},{"title":"resemblance","paragraphs":["to the"]},{"title":"Semantic","paragraphs":["Networks"]},{"title":"of","paragraphs":["Simmons [Simmons 731. As semantic pmc:essing of the sentence progresses, modifiers"]},{"title":"of the","paragraphs":["nodes are removed or changed in form, semantic interpretations are added, and links are"]},{"title":"made","paragraphs":["from the nodes to objects and relations"]},{"title":"in","paragraphs":["the developing model of the problem. Finally, after execution of the verb semantics, the network is discarded. Each"]},{"title":"node","paragraphs":["in"]},{"title":"the","paragraphs":["parse network"]},{"title":"is","paragraphs":["a"]},{"title":"GENSYM","paragraphs":["atom"]},{"title":"whose name","paragraphs":["is"]},{"title":"TOK","paragraphs":["followed by a number. Features of the node (also called a \"token atom\" or \"token\") are"]},{"title":"stored","paragraphs":["on"]},{"title":"its","paragraphs":["property list. The \"main\" word of the phrase (usually, but not always,"]},{"title":"a word from the","paragraphs":["sentence)"]},{"title":"is","paragraphs":["stored under the indicator"]},{"title":"TOK.","paragraphs":["The type of phrase"]},{"title":"is","paragraphs":["stored 2 0 under the indicatcjr"]},{"title":"LFRAME","paragraphs":["(Linguistic"]},{"title":"Frame);","paragraphs":["the poltsible types of"]},{"title":"LFRAMEs","paragraphs":["a r*r NP (No~in E)hrase), VP (Verb Phrase), QNP (Q\\iestio~z No~in I'l~rase), and IIEIINP (Relative Noun E'hrase). The noun phrase \"each end'' in"]},{"title":"P;3\",","paragraphs":["for ~xar~iple, wo~ild generate the followi~~g token:"]},{"title":"TOK89 TOK END LFHAME NI1 NBR (Ns) MODS ((,QNTFIZ EACH)) SFRAME LOCPARrr SEMOBJ","paragraphs":["(SCAFI+'OIJD85)"]},{"title":"RFNT","paragraphs":["(LOG91 L0C:lo) The first four items 011 the property list of the token,are cre:~trd by the parsing program. NRR.is the Nuntbur (Noun Singulm),.nntl h1OI)S is n list of modifiei*?;, in this case the quantifier"]},{"title":"EACH.","paragraphs":["'I'he~emnining property list items are ~tl(lrti tluring semantic processing: S FRAME (Semantic Frame) is"]},{"title":"LOCat","paragraphs":["ion PART; .$E:hlO BJ (Semantic"]},{"title":"Object)","paragraphs":["is a link to the"]},{"title":"object","paragraphs":["in the problenl ~llotlel which the location refvrs to, in this case the scaffold"]},{"title":"SC'AFF0LYH;'r. RFN'I'","paragraphs":["(Referent) is a list of painters to the items in the problemmodel to which the phrase refers: the locarions LOC91 and LOC!)O. When the semantic function for the verb is exec~ited. it will dehl tllrcctly with the Referents of the phrase, independent of the syntactic construction in the original sentence which caused those referents to be selected. :3.4 Noun Phrase Pmsing"]},{"title":"In","paragraphs":["this section we will esalnine in some detail the parsing of the noun phrase anci its modifiers. 3.4.1 Basic Noun Phrase A flowchart of the"]},{"title":"NP","paragraphs":["parsing program is shown in Figure 3.1. A flo6chart is used to describe the program because a transition nkt of this size would be unlvieldy. and because a flowchart can mare closely folloiv the actual program structure. ti few nonstandard conventions are used in the parser flowcharts in *this chapter. A test consisting of a word in capital letters indicates a test of whether the word currently under the scanner (the word in the '$ register) is"]},{"title":"in","paragraphs":["that category. (NEXT) indicates the next word to the right, and (NEXT\" indicates the second word to the 1-ight. The symbol"]},{"title":"=>","paragraphs":["appearing next to a line indicates that tohe scanner is moved to the right along that control path. The symbol"]},{"title":"+-","paragraphs":["indicates that the right part is appended to the lett:"]},{"title":"*","paragraphs":["References to the example problems are denoted by the letter"]},{"title":"P","paragraphs":["follo~~ed by the problem number. Proper Noun \"At (B) che ocher end YP TOK"]},{"title":"- (NPAPP","paragraphs":["NIVIEY P I HODS 4 (\"NAME NMLE)"]},{"title":"1 Figure 3.1 (page 2) Put NAME on TOK 0","paragraphs":["generally,"]},{"title":"A","paragraphs":["+t-"]},{"title":"B","paragraphs":["is implemented ss (SETQ A"]},{"title":"(NCQNC","paragraphs":["A"]},{"title":"(LIST B))).","paragraphs":["Phrases in quotes next to corltrol paths are examples of phrases which would follow the indicated paths. The initial tests in the flow diagram tgst for proper nouns, geometric names, and pronouns, which are handled separately. [Geometric names, as in"]},{"title":"\"AT END","paragraphs":["(A)\", are represented in"]},{"title":"LISP","paragraphs":["as lists containing the names; in the original sources from which the problems were taken, such names were written as italic capitnls.] The determiner, if present, is saved. A series of tests separates the use of a measurement (e.g., \"10"]},{"title":"ft\")","paragraphs":["as a noun phrase by itself or as a modifier (\"a"]},{"title":"10","paragraphs":["f~ pole\"), while prohibiting it if it precedes a relative preposition (as in \" 10 ft from"]},{"title":". .","paragraphs":[".\") since this form is more easily handled as part of the prepositional phrase. Adjectives which are marked"]},{"title":"NULLADJ","paragraphs":["are ignored. Thus, \"a tapering wooden telegraph pole\""]},{"title":"(PI","paragraphs":["1) is treated the same as \"a pole\". This is one of the few cases in the parser where information from the problem stqtement is ignored. Possessive pronouns are rewritten at once; the referent of the corresponding root pronouh is found, and a modifier of the form (POSSBY referent) is constructed. This modifier retains the ambiguity of the type of possession. Not surprisingly, there is considerable similarity between the semantics of POSSBY and some of the sense meanings of OF. Thus, for example, \"its end\" and \"the end of the lever\" will be reduced to an identical form when processed semantically. When the noun is found, a token atom is created for the noun phra~e, usually using the singular form of the noun as the token name. In some cases, however, an expanded definition is used, resulting in the use of a different token name and the generation of additional modifiers. Thus,"]},{"title":"PAUL","paragraphs":["becomes PERSON,"]},{"title":"(SEX","paragraphs":["MALE), (NAME"]},{"title":"PAUL)","paragraphs":["and"]},{"title":"BOY","paragraphs":["becomes PERSON, (SEX MALE), (AGE YOUNG). This expansion eases the identification of the same object when it is referred to by different words; the identification of these two tokens will result in the inference that Paul is young. The modeling of words as carriers of modifiers to be applied to their root concepts is an interesting area of research; [Simmons and Amsler 751 are investigating this type of modeling for verbs of 'motion and communication. After the noun token is made, an attempt is made to execute the semantics of each of the modifiers which have been found. Some modifiers will make changes directly to"]},{"title":"the NP","paragraphs":["token; others will create new modifiers which are saved for later processing.","9 1","\"Both\",-for example, will create modifiers equivalent to \"Each of the two"]},{"title":". . . .","paragraphs":["The pronoun matching algorithm which is used is very simple. A pronoun which was previously used is matched to the same referent as before. Otherwise, the last-mentioned candidate which matches the pronoun in number and is appropriately human or inanimate is chosen. This technique is fairly crude, but it worked for this class of problems. In general, finding pronoun referents can be very difficult. [Charniak 721 considers this problem in some detail. 3.4.2 Noun Phrase Compounds and Modifiers","Conjunctions and modifying phrases int ~oduce many potential ambiguities into the parsing of a sentence. In a noun phrase containing two prepositional phrases, for example, the second prepositional phrase"]},{"title":"(Pp)","paragraphs":["might modify either the top-level noun phrase or the noun phrase"]},{"title":"in","paragraphs":["the first"]},{"title":"PI?. A","paragraphs":["conjunction het*ween two noun phrqses might join them into a compound"]},{"title":"noun","paragraphs":["phrase, or it might connect two top?level clauses containing the noun phrases. Although syntactic constraints' may select the correct interpretation in some cases, in many other cases the choice cambe made only on","semantic grounds. For example, in Lowering the level of the lake allows city officials to kill weeds and residents to repair their docks. we must use semantic interpretations to reject the possibility that \"weeds and residents\" is a compound noun phrase. People seem to make these choices easily and correctly the first time they read or hear a sentence; only rarely do they have to back up and re-parse a sentence in order to interpret it correctly. The parsing programs of"]},{"title":"ISAAC","paragraphs":["rely heavily on,semantic tests to reject incorrect combinations of phrases. A noun phrase may be' modified by a prepositional phrase,, an adjective phrase, or"]},{"title":"a","paragraphs":["dependent clause. In each case, the parser for the modifying phrase is called with the"]},{"title":"NF","paragraphs":["token as an argument. The modifying phrase parser may reject the combination on semantic grounds even though the appropriate syntactic constituent is found. This is especially important in the case of prepositional phrases. Compound modifiers,"]},{"title":"as","paragraphs":["in \"a uniform scaffold 12 ft long and weighing 100 lb\""]},{"title":"(P5),","paragraphs":["are permitted. Conjoined noun phrases are required to all be members of the same semantic class, which may be one of the set PERSON,"]},{"title":"PHYSOB","paragraphs":["(physical object), LOCNAME (location name),"]},{"title":"ATTRNAME","paragraphs":["(attribute name), or"]},{"title":"MEASU","paragraphs":["(measurement unit). Pronouns are prohibited as members of dompound noun phrases. These tests handled almost all cases which OCCUII-ed in the set of test problems. One pathological sentence required additional treatment:"]},{"title":"If","paragraphs":["it is placed on the edge of a block 1.5 m from the light end and a weight of 750 nt added to the light end, it will be balanced."]},{"title":". 0'14) Since the","paragraphs":["auxiliary \"is\""]},{"title":"is","paragraphs":["omitted"]},{"title":"in","paragraphs":["the second clause, \"added"]},{"title":". . .\"","paragraphs":["could be considered a dependent clause modifying \"weight\", and \"blork\" and \"weight\" could be combined"]},{"title":"as","paragraphs":["a compound noun phrase under the above rules. This problem was solved"]},{"title":"by","paragraphs":["a semantic test associated with the preposition \"of' which prohibits a compound object noun phrase for such cases. This is not a very pleasing solution. People probably accept \"edge of a block\" as a well-formed unit before reaching the secuand clause, and thus do not consider combining \"block\" and \"weight\". The depth-first operation of this"]},{"title":"parser","paragraphs":["allows"]},{"title":"it","paragraphs":["to go fairly"]},{"title":"far","paragraphs":["afield"]},{"title":"in","paragraphs":["such"]},{"title":"cases;","paragraphs":["additional semantic tests to allow some constituents to be combined earlier would"]},{"title":"be","paragraphs":["a desirable, but difficult, improvement. 3.4.3 Noun Phrase Variants There are three *small parsing programs which accept variants of noun"]},{"title":", 9","paragraphs":["phrases."]},{"title":"THERENP","paragraphs":["accepts \"there\" as a tloun phrase in cases such as \"there is"]},{"title":". . . . 9 Y QNP","paragraphs":["accepts a noun phrase beginning with a question word, as in \"what force"]},{"title":". . .","paragraphs":[","]},{"title":"RELNP","paragraphs":["parses a \"relative noun phrase\" containing \"as much as\", as in \"the man supports twice"]},{"title":"as","paragraphs":["much as the boy\""]},{"title":"(P7).","paragraphs":["The multiplicatioll factor is saved, and a link is"]},{"title":"made","paragraphs":["to the noun phrase involved in the comparison. 3.5 Verb Phrase Parsing 3.5.1 Basic Verb Group The verb group, which is parsed by the program"]},{"title":"VG,","paragraphs":["consists of a set of auxiliary verbs, a main verb, and optional adverbs. The flowchart of VG is shown in Figure 3.2. Since tense and modality are not needed for our type of physics problems, the auxiliary verbs are ignored except for determining whether the verb group is active or"]},{"title":"passive.","paragraphs":["Other authors (for example, [Winograd"]},{"title":"721","paragraphs":[") have given procedures for determining verb tense froq"]},{"title":"the","paragraphs":["auxiliary verbs. The program"]},{"title":"VG","paragraphs":["has six arguments."]},{"title":"NPHD","paragraphs":["is a noun phrase token which is the syntactic subject of the verb."]},{"title":"VPHD","paragraphs":["(if specified) is a verb phrase token which is either the first part of a compound verb phrase or the initial auxiliary verb which is separated from the rest of the verb group in a question. CMPND is a flap which is true if the verb group is part of a compound verb phrase. DCLF is true if the verb group is part of a dependent clause;"]},{"title":"DCLP","paragraphs":["is true if the dependent clause construction is passive."]},{"title":"QFLG","paragraphs":["is true if the verb group is a top-level verb group in a question. The flowchart of"]},{"title":"VG","paragraphs":["is fairly straightforward. If a previous verb phrase is available from a separated verb group in a question, it is deleted and incorporated into the main verb group. The syntactic subject is attached to the verb phrase as subject or object depending on whether the verb is active or passive. This transformation frees the verb semantic programs from-having to concern the~selves with the voice of the verb. In"]},{"title":"a","paragraphs":["compound verb phrase without a subject (object if passive), the corresponding phrase from the first verb phrase is used. Thus, in \"John was tarred and feathered\","]},{"title":"\"~ohn\"","paragraphs":["would be used as the object of \"feathered\"."]},{"title":"3.5.2 Verb Phrase A","paragraphs":["flowchart of tlre verb phrnse parsing program, Q1', is shown in Figure"]},{"title":":I.:). VP","paragraphs":["first parses n verb group by calling VG, then i*ollcrts tllt.' rennt~inillp prt1dic;ltc. phrases and modifiers and attaches them to the verb phmsu loken. These phrnses include tho syntactic object noun phrase oradjeciive phrase, an i~lfiniti\\+e verb phl*nse object (as in \"they wlui~t to go"]},{"title":". .","paragraphs":[".\"), and prepositiollnl p11r~ses or adverbs modifying the verb, After parsing a verb group,"]},{"title":"VP","paragraphs":["calls"]},{"title":"VPMODS","paragraphs":["to collect \\*erb modifiers (adverbs and prepo~it~ional phrases)."]},{"title":"An","paragraphs":["infinitive verb phrnse objort is r0llt3rted if present and attached to the \\perb phrase token under the indicator"]},{"title":"INFOBJ. If","paragraphs":["a question"]},{"title":"is","paragraphs":["being parsed, the subjecb and"]},{"title":"the","paragraphs":["remainder of the separated group are collected. A prepositional phrase on"]},{"title":"HOLD","paragraphs":["(that is, one which occurred at the st art of the sentence and could not be attached to anything, e.g. \"At"]},{"title":"(B),","paragraphs":["the other end of the pole, there is , ,"]},{"title":".\"","paragraphs":["(P15) is attached to the verb phrase if possible. The predicate noun phrase or adjective phrase is collected, along with any remaining modifiers. If the verb phrase is part of a dependetlt clause, it is required to contain more than just a verb. A dependent clause (DCLAUSE) is attached to the tokk of the phrase it modifies. 3.6 Prepositional Phrase Parsing The structure of the prepositional phrase is fairly simple."]},{"title":"In","paragraphs":["addition to the usual"]},{"title":"PP","paragraphs":["consisting of a preposition and noun phrase, the"]},{"title":"PP","paragraphs":["parser accepts a phrase involving a measurement and a preposition and noun phrase (as in \"10 ft from one end\") as a single prepositional phrase. Hoth t-yes may involve question phrases, as in \"at what ppint\""]},{"title":"(P7)","paragraphs":["and \"how far from the center\" (P20). The"]},{"title":"PP","paragraphs":["parser behaves differently from the other parsing programs in that it saves a well-formed result which cannot be attached to the head token which was specified, due to semantic constraints. If the PP parser is called again to reparse the same phrase (as it surely will be), it applies the semantic tests to its previous result and the new head token. This not only saves the work of reparslng an identical phrase twice,"]},{"title":"but","paragraphs":["more importantly, it prevents side effects which occur during the parsing from being repeated. These side effects (such as the creation of a new object in the model of the problem) violate the restriction on a pure Woods net parser that all results be passed between programs in designated registers; hence, the effects are not undone when backup is made from a failing parse attempt. We could make all such actions reversible, as in"]},{"title":"CONNIVER","paragraphs":["[McDermott and Sussman 721, but such arl approach exacts a high penalty"]},{"title":"in","paragraphs":["computational overhead. Our approach is probably safe for prepositional phrases, which cannot in general be parsed as anything else. The pure Woods net"]},{"title":"approach","paragraphs":["makes it difficult to mix syntactic and semantic processing. More research is needed on ways to intermix the two and still be able to"]},{"title":"bnck","paragraphs":["up when necessary, without incurring too much overhead. Preposition semantics are executed, when possible,"]},{"title":"as","paragraphs":["soon"]},{"title":"as","paragraphs":["the prepositional phrase"]},{"title":"has been parsed. In some rases, the","paragraphs":["se~nontic routine"]},{"title":"will","paragraphs":["electlo delay the sem~ntic processing."]},{"title":"In","paragraphs":["these cases, the"]},{"title":"PP is","paragraphs":["saved on the head token under the indicator'"]},{"title":"PPS","paragraphs":["for la&r processing. 3.7 Clause Parsing"]},{"title":"The","paragraphs":["clause parsing programs,"]},{"title":"CLAUSE","paragraphs":["and"]},{"title":"QCLAUSE.","paragraphs":["are relati\\?ely simple programs which accept the several for~ns of declarative, ia~perative, ui~d"]},{"title":"question clauses. An","paragraphs":["iuitial prepositio~~nl phrase, if present, is placed on n"]},{"title":"HOI,D","paragraphs":["list for"]},{"title":"later","paragraphs":["processing."]},{"title":"A noun","paragraphs":["phrase or question phrase is parsed and then used as all"]},{"title":"argument for calling","paragraphs":["the"]},{"title":"verb","paragraphs":["phrase parser. The result of parsing a clause is the verb phrase token, which contains pointers to its various arguments. This verb phrase token is passed as an argument to the verb serna~ltics driver,"]},{"title":"EXVBSEM,","paragraphs":["which completes semantic processing of the sentence. Figure 3.4 shows the structure formed after parsing and seniantic processing of a complete sentence. Much of the information iri the structure is produced by the semantic programs after parsing, but we will describe it briefly as an introduction to the semantic processes. The root of the parse tree (the value returned by the"]},{"title":"SEWTENCE","paragraphs":["parsing function) is"]},{"title":"TOK185,","paragraphs":["the verb phrase token for the main verb of the sentence."]},{"title":"The","paragraphs":["object"]},{"title":"of","paragraphs":["the verb"]},{"title":"is TOKltll,","paragraphs":["which was the syntactic subject (since the verb phrase is passive); the subject (agent) of the verb is"]},{"title":"TOK186,","paragraphs":["which was intl~oduced by the preposition \"by\". The semantic routine for \"by\" sinlply attached its object phrase token,"]},{"title":"TOK186;","paragraphs":["to the verb phrase token as the subject of the verb; hence, there is no need for \"by\" to appear anywhere in the structure) TOKl8l is the noun phrase token produced from the initial noun phrase of the sentence; it is a TOKen of the word"]},{"title":"SCAFFOLD,","paragraphs":["is a Linguistic FRAME of t-ype NP (Noun Phrase) has an INDEFinite DETerminer, and has a"]},{"title":"NBR","paragraphs":["(number) of NS (Noun Singular). The modifier \"12 ft long\""]},{"title":"has","paragraphs":["been converted to the form"]},{"title":"(LENGTH","paragraphs":["12"]},{"title":"FT);","paragraphs":["the same modifier form would be produced for the phrase \"a 12 ft scaffold\"."]},{"title":"TOK181","paragraphs":["is the syntactic subject of a"]},{"title":"DCLAUSE","paragraphs":["(Dependent"]},{"title":"CLAUSE)","paragraphs":["whose verb token is TOK182. The SFRAjWE (Semantic"]},{"title":"FRAME)","paragraphs":["interpretation of TOK181 is"]},{"title":"PHYSENT","paragraphs":["(PHYSical ENTity), and its"]},{"title":"RFNT","paragraphs":["(Referent) is SCAFFOLD184, which is an object in the model of the problem."]},{"title":"The","paragraphs":["remaining tokens shown in the figure have a similar structure. The modifier \"vertical\" of TOK186 has been converted to the form (ROTN 90); this token has two referent objects. The modifier*\"its\" of"]},{"title":"TOK188","paragraphs":["was converted to a modifier of the form"]},{"title":"(POSSBY","paragraphs":["SCAFFOLD184), which was semantically processed to make TOK188 a"]},{"title":"LOCPART","paragraphs":["(LOCationlPAIiT) SFRAME whwe SEMOBJ (SEMantic ODJect) is"]},{"title":"SCAFFOLD1","paragraphs":["84; idelltif'ication of the location referents of"]},{"title":"TOK","paragraphs":["188 yieldad the two locations LOC190 and LOC189, which are locations on"]},{"title":"SCAFFOLD184","paragraphs":["in the model of the problem. Since TOKIBN was the object of a preposition, semantic processilig of the prepositional phrase transferred its referents to a modifier of the verb phrase TOK187; this left"]},{"title":"TOK188","paragraphs":["unconnected to the rest of the structure.","3.8 Conclusion The computer time required for parsing and semantic processing averages about one second per sentence, running on a CDC 6600 and using interpreted LISP. The parsing programs constitute only about 15% of the total; the semantic programs are twice as large. Syntactic processing is thus a -relatively small part of the complete process of language understanding. On the other hand, this program has convinced the author thax even in so constrained and well-defined an area as physics problems, syntactic processing cannot reasonably be isolated and done without recourse to semantic tests, some of which ultimately involve reasoning based on the particular facts which are known about the objects being discussed. \"A uniform scaffold 13 ft long and weighing 100 lb is supported horizontally by two vertical ropes hung from its ends.\" TOK181 TOK182"]},{"title":"TOK SCAFFOLD TOK WEIGH","paragraphs":["LFRAME"]},{"title":"NP","paragraphs":["LFRAME"]},{"title":"VP","paragraphs":["DET"]},{"title":"INDEF MAINVB","paragraphs":["WEIGHING NBR (NS) DCLAUSE"]},{"title":"?'T* MODS (UNIFORM (LENGTH","paragraphs":["12"]},{"title":"FT))","paragraphs":["INTRANS *T* DCLAUSE (TOK182) ACT *T* SFRAME PHYSENT"]},{"title":"SUBJ","paragraphs":["TOIC181"]},{"title":"RFNT","paragraphs":["(SCAFFOLDl84)"]},{"title":"COMP","paragraphs":["TOK183 TOK183 TOK"]},{"title":"LB","paragraphs":["LFRAME NP QTY 100 TOK185 TOK SUPPORT LFRAME VP MAINVB SUPPORTED AUX"]},{"title":"(1s)","paragraphs":["TRANS *T* PASV"]},{"title":"q*","paragraphs":["OBJ TOK181"]},{"title":"SUBJ","paragraphs":["rOK186 TOK187 TOK HANG LFRAWE VP MAINVB HUNG DCLAUSE"]},{"title":"*T*","paragraphs":["INTRANS *T*"]},{"title":"PASV *T* OBJ","paragraphs":["TOK186 MODS (LOC FROM (LOCI90 LOC189)) TOK186 TOK"]},{"title":"ROPE","paragraphs":["LFRAME NP"]},{"title":"QTY 2","paragraphs":["NBR (NPL)"]},{"title":"MODS","paragraphs":["((ROTN 90)) DCLAUSE (TOK187) SFRAME PHYSENT"]},{"title":"RFNT","paragraphs":["(ROPE192 ROPE191) TOK188 TOK END LFRAME NP"]},{"title":"NBR (NIX,) SFRAME LOCPART","paragraphs":["SEMOBJ (SCAFFOLD184) RFNT (LOCI90 LOC189) Figure 3.4: Structures Produced for a Complete Sentence"]},{"title":"It may be","paragraphs":["helpf'ul at this stage to realize"]},{"title":"that","paragraphs":["the primary form of mathematical communication is not description, but injunction,"]},{"title":"in","paragraphs":["this reppect"]},{"title":"it is","paragraphs":["comparable"]},{"title":"with","paragraphs":["practical"]},{"title":"art forms","paragraphs":["like"]},{"title":"cookery, in","paragraphs":["which"]},{"title":"the taste","paragraphs":["of a cake, although literally indescribable, can be conveyect to a reader in the form of a set of i~~junctions called a recipe."]},{"title":"-G.","paragraphs":["Spencer Brown 4. Semantics 4.1 Introduction Semantics, for our purposes,"]},{"title":"is","paragraphs":["the procr.ss"]},{"title":"of","paragraphs":["constructing the meaning of a sentence: the process of relating the objects in the sent.cnce to objects in the world model of the reader, and of updating the world model to reflect the meaning of the sentence."]},{"title":"The","paragraphs":["sentence itself is not a description of the meaning, but rather a set of injunctions, a recipe which can be followed to construct the meaning from what the reader already knows. As the above definition implies, the way in which a sentence is interpreted depends strongly on the knowledge, intelligence, and inclinations of the reader. As is"]},{"title":"well known,","paragraphs":["different readers will interpret"]},{"title":"the same","paragraphs":["text (even in physics problems) in different ways. A semantic interpretation of a sentence may, be viewed as satisfactory or unsatisfactory for a particular purpose, but it would be difficult to judge it as \"right\" or 14 wrong.\" Updating the world model to reflect the meaning of a sentence can be a very"]},{"title":"involved","paragraphs":["process, since the meaning of a single sentence call have many consequences."]},{"title":"In","paragraphs":["our physics problems, these deductions do not propagate very far beyond the immediate understanding of a sentence during the time when the sentences are"]},{"title":"being read. In","paragraphs":["this chapter, then, we will primarily discuss \"linguistic semantics,\" which we may define as the semantic processing up to the point at which the parsing of a sentence"]},{"title":"may","paragraphs":["be discarded. This distinction is well defiried within the computer program. Under this heading there are a number of distinct semantic processes: determining the meaning of ambiguous words and phrases; finding anaphoric referents (such as pronoun referents) and elliptical referents (such as the physical object referred to when a location is named alone as in ('one end\"); determining the meaning of groups of words whose meaning in combination is more than a combination of tkeir individual meanings; determining the meanings of modifiers of nouns and verbs and saving the meanings so"]},{"title":"that","paragraphs":["they can be effective at the proper place in the processing; determining whether an object or location mentioned in a sentence is a new one, or whether it refers to one mentioned previously; adding objects and relations to the world model, and updating existing ones to reflect new information; expanding the model of a11 object"]},{"title":"so","paragraphs":["that its subparts may be referenced; testsing n modifier to determine whether it can reasonably 111odify a given phrase (which may require reasoning based"]},{"title":"on","paragraphs":["the particulars of the world nlodel); interpreting all object of a given type as a11 obdect of a desired type (for exa~nple, interpreting an object as a locnt.ion or vice versa), All of these processes will be discussed in this chapter, 4.2 Preliminary Modifier Processing","Adjective and adverb modifiers of noun and verb phrases frequentlv have their effects at a relatively late stage of semantic processing: the idulltification of the referent of a noun phrase, or the execution of verb semantics. These modifiers must therefore be saved for later reference. In some cases, a semantic routine will be associated with the modifier itself; ill other cases. it is more convenient for a larger routine to look for the existence of certain modifiers to guide its processing. Preliminary modifier processing puts modifiers of certain classes into a standard form so that they will be easy to identifv or so that a single semantic routine can be used for the whole class. In some cases, different meanings for a modifier may be selected depending on the modified phrase. Adjectives such as \"one\", \"other\", \"first\", and \"second\" are put directly on the noun phrase token under the indicator"]},{"title":"DET2.","paragraphs":["These modifiers are referenced in determining the referent of the noun phrase. Adjectives such as \"heavy\", \"left\", and \"upper\" are converted to modifiers of the form (SELECT adj); they are used in selecting a particular referent from several possible ones. Quaritifiers such as \"each\" become modifiers of the form"]},{"title":"(QNTFR","paragraphs":["adj). Adjectives such as \"horizontal\", \"vertical\", and \"upward\" are converted to rotation modifiers of the form (ROTN ang), where \"ang\" is the appropriate angle. Adjective phrases indicating measurement (as in \"a 10 ft pole\" or \"a pole 10 ft long\") are converted to modifiers where the measured quantity is made explicit, e.g.,"]},{"title":"(LENGTH","paragraphs":["10"]},{"title":"FT).","paragraphs":["When the referent of the noun phrase is found, the modifier is transferred to the property list of the referent. In the case of unspecified force measurements, tests are made on the modlfied noun phrase to determine the rrleasured quantity. Thus, a 150 lb man is a man whose weight is 150 lb, while a 150 lb force is a force vector whose magnitude is 150 lb. 4.3 Preposition Semantics Preposition semantics is an interesting area. A single preposition can have a number of sense-meanings (as many as seven in our set of physics problems) depending on the types of objects it connects. The actions required of the semantic routine are in general quite different for each sense-meaning; for our purposes, sense-meanings are differentiated by the different actions required to process them adequately. Discrimination net tests based on rough semantic classifications of the phrases connected by the preposition were found to be adequate to distinguish the preposition sense-meanings in our sample problems. We shall discuss in detail the semantic procesbing"]},{"title":"for","paragraphs":["some prepositions, auld then compare our sense-meaning classificatiol~s with dictionary classifications and postulate that techniques similar to ours may be useful fqr machine translation of prepositional phrases."]},{"title":"4.3.1","paragraphs":["Semantics"]},{"title":"of","paragraphs":["the Preposition"]},{"title":"\"OF\"","paragraphs":["The sense-meaning classifications for the prepositions were determined"]},{"title":"by","paragraphs":["listing the occurrences of each preposition together with the modified (or \"head\") phrase and the object phrase of each. Occurretlces which seemed to be af the same semantic class were grouped together, and a set of discrimination net tests was developed which would distinguish between preposition uses in each of the diffe~ent classes. Using this procedure, seven distinct sense-meanings of the preposition"]},{"title":"\"OF\"","paragraphs":["were found in our small sample of twenty physics problems-a surprisingly large number considering that the problems are all of a similar. type. The seven sense-meaning classes are listed below with examples. Although the classes were determined from our physics problems, it is easy to think of examples of each class which are in common usage and are not limited to the narrow area of physics problems. 1."]},{"title":"<","paragraphs":["quantifier>"]},{"title":"OF <","paragraphs":["objects> each of the ropes 2."]},{"title":"<","paragraphs":["measurement> OF"]},{"title":"<","paragraphs":["value> a length of 10 ft 3."]},{"title":"<","paragraphs":["object>"]},{"title":"OF <","paragraphs":["value>"]},{"title":"<","paragraphs":["attribute> a pole of uniform cross section"]},{"title":"4. <","paragraphs":["location>"]},{"title":"OF <","paragraphs":["object> the left end of the lever 5."]},{"title":"<","paragraphs":["attribute> OF"]},{"title":"<","paragraphs":["object> the weight of the lever 6."]},{"title":"<","paragraphs":["group> OF"]},{"title":"<","paragraphs":["objects> pair of legs 7."]},{"title":"<","paragraphs":["part>"]},{"title":"OF <","paragraphs":["object> hinges of a door"]},{"title":"The","paragraphs":["semantic classes for the head and object phrases are given for each sense-meaning in the left-hand column; the discrimination net at the beginning of a preposition semantic routine uses tests for these semantic classes to determine the proper sense-meaning for a given use of the preposition. Once the proper sense-meaning has been determined, the processing required is fairly simple. For sense-meaning 1 of \"OF\", <quantifier> OF"]},{"title":"<","paragraphs":["objects>, the quantifier token is replaced by the object token, and the quaritifier is made a modifier of the token; thus, \"each of the ropes\" is"]},{"title":"put","paragraphs":["into the same form as \"each rope\". For sense-meaning 4, <location>"]},{"title":"OF <","paragraphs":["object>"]},{"title":",","paragraphs":["the SFRAME (Semantic Frame) of the head is set to LOCPART, and the referent of the object phrase is put on the head token ynder the indicator SEMOBJ (Semantic Object). [The process of referent identification is discussed in a later section.] In cases such as this one, the determination of the prepositsion sense-meaning also serves to determine the proper sehlantic frame for the head phrase. The prepositional phrase itself serves to supply one of the nrglimehts of the semantic frame. Just ns parsing makes explicit"]},{"title":"the","paragraphs":["syntactic relations which hold among the words in a sentence, the reduction of phrases to their semantic frame form makes explicit the semantic relations which hold among the objects referred to '(explicitly or implicitly) by the phrases. The semantic frames constitute a set of standard forms into which phrases representing similar meanings are translated; thus, nulnerous different ways of expressing the same meaning can"]},{"title":"all","paragraphs":["be translated into an identical semantic frame form."]},{"title":"In","paragraphs":["the case of senge-n~eaning 7,"]},{"title":"<","paragraphs":["part>"]},{"title":"OF <","paragraphs":["object> , a special semantic"]},{"title":"routine","paragraphs":["may be calledinto play to define the parts and their relation to the object they are part of. In our example, \"the hinges of a door\" (P9), the correct formulation of the problem requiresbthe use of world knowledge that'a door has two hinges (if the number is unspecified) which are arranged vertically and attached to the door on one side. This pragmatic knowledge is contained in a semantic routine for defining parts of doors. By representing the knowledge in this way, it"]},{"title":"is","paragraphs":["possible to refer to the parts of a complex object if necessary without expanding the inte~nal model of the object into its parts if they are not referenced."]},{"title":"In","paragraphs":[",our sample problems, there was'only one case where a prepositional phrase modified a conjoined noun phrase: \"magnitude, direction, and point of application of the equilibrant\" (PI3 and P15)."]},{"title":"In","paragraphs":["this instance, the prepositional phrase \"of the equilibrant\" should be assumed to modify each of the three conjoined phrases; this is handled within the semantic routine for"]},{"title":"\"OF\".","paragraphs":["It would be desirable to handle such cases"]},{"title":"at","paragraphs":["a higher level and thus in a more general fashion. More research is needed to find rules to govern the interpretation of prepositional phrases which modify compound phrases. 4.3.2 Semantics of Other Prepositions"]},{"title":"In","paragraphs":["this section, we will briefly describe the sense meaning classifications and semantic processing for the remaining prepositions. In each case, of course, there are some sense-meanings of the preposition which are not handled by the program; we discuss only those which are."]},{"title":"BY","paragraphs":["is used only to specify the agent of the verb in a passive verb phrase. The object of the preposition is put on the verb token under the indicator"]},{"title":"SUBJ. AGAINST","paragraphs":["is used to specify a case argument for a verb, as in \"rests against a vertical wall\""]},{"title":"(P8).","paragraphs":["The referent of the object phrase is identified, and the preposition atld referent are put on the verb token as a modifier under the indicator"]},{"title":"CASEARG. CASEARG","paragraphs":["modifiers are processed by the verb semantic routines, which may have specific interpretations for case arguments illdicated by certain prepositions."]},{"title":"TO","paragraphs":["with"]},{"title":"a","paragraphs":["location object is used to specify a location for"]},{"title":"a","paragraphs":["verb phrase. The location referent is identified, and the preposition and refhent"]},{"title":"are","paragraphs":["used as a-modilier under the indicator"]},{"title":"LOC.","paragraphs":["Since lnodifiers are kept as \"a list under the property list indicator"]},{"title":"MODS,","paragraphs":["there can be multiple"]},{"title":"LOC","paragraphs":["modifiers. The preposition is kept in case the verb semantic routine can derive additional information from it; usually, however,","only the location referent will be used. Proposed"]},{"title":"LOC","paragraphs":["modifiers are tested against the head phrase to determine whether the modification is acceptable; this is done by a function called"]},{"title":"LOCTSI'.","paragraphs":["If the head is a verb phrase, the verb is tested"]},{"title":"to","paragraphs":["see whether it can properly take a location modifier. For example, in the sentence \"There is a man weighing 150 ib at one end\", the"]},{"title":"LOC","paragraphs":["modifier \"at one end\" would be rejected as a modifier of \"weighing\", while in the sentence \"There is a man standing at one end\" the"]},{"title":"LOC","paragraphs":["modifier would be accepted as a modifier of \"standing\". If the modified phrase is a noun phrase, the object referred to (explicitly or implicitly) by the location modifier is tested against the head object; if they are the same, the modification is rejected. Thus, in the sentence \"one-painter"]},{"title":". . .","paragraphs":["stands on the scaffold 4.0 ft from one end\""]},{"title":"(P3),","paragraphs":["the location modifier \"4.0 ft from one end\" is rejected as a modifier of \"scaffold\", since its implicit object referent is the scaffold. This rejection on semantic grdunds (making reference to the relationships among objects in the model of the problem which has been constructed,so far) will cause the parsing in which the prepositional phrase modifies \"scaffold\" ta be rejected, so that the prepositiopal phrase will eventually be interpreted as a"]},{"title":"LOC","paragraphs":["modifier"]},{"title":"d","paragraphs":["the verb \"stands\". In the case \"a boy 3 ft from one end\""]},{"title":"(PT),","paragraphs":["the location modifier is accepted since different objects are referenced by the head and object phrases."]},{"title":"FROM","paragraphs":["(without a measurement phrase preceding it) modifies a verb as a"]},{"title":"CASEARG,","paragraphs":["as in \"supported from the wall\" (P8), or a LOC, as in \"From end (A) a weight of 2500 nt is hung\" (P15)."]},{"title":"FROM2","paragraphs":["(preceded by a measurement phrase) always specifies a"]},{"title":"LOC;","paragraphs":["the measureme~lt phrase may be a question phrase, a8 in \"how far from the center\" (P20). If the object of"]},{"title":"FROM2","paragraphs":["specifies a physob rather than a location on a"]},{"title":"RELPOBJ","paragraphs":["(an object"]},{"title":"on","paragraphs":["which relative positions are defined), aa appropriate object for the location to be on must be found. This is done by finding an attachment point between the specified object and a"]},{"title":"RELPOBJ;","paragraphs":["thus, \"0.5 m from Paul\" (Ply) specifies a location on the pole Paul is carrying which is 0.5 m from the point of attachment between Paul and the pole. The semantic routine for"]},{"title":"FROM2","paragraphs":["must interpret the given object (a physob) as an object of the desired type (a location on a different physob of a particular type),"]},{"title":"PETWEEN","paragraphs":["occurs only once in our problems: \"on a pole between them\""]},{"title":"(P17).","paragraphs":["When it connects a single physob and two physobs, as in this case,"]},{"title":"BETWEEN","paragraphs":["is interpreted to mean that the first object"]},{"title":"is","paragraphs":["attached"]},{"title":"to","paragraphs":["(.he other two at the \"usual\" places for the object (in this case, the ends of the pole)."]},{"title":"AT","paragraphs":["always specifies"]},{"title":"a","paragraphs":["lo~ation, which may be a question phrase, as"]},{"title":"in","paragraphs":["\"at what point\""]},{"title":"(P7). IN","paragraphs":["specifies either a location, as in \"stand in the center\", or an attribute of an object,"]},{"title":"as","paragraphs":["in \"the tension in each rope\" (P5). In the latter case, the"]},{"title":"SFRAME","paragraphs":["of the head noun phrase is set"]},{"title":"to ATTROF","paragraphs":["and its"]},{"title":"SEMOBJ","paragraphs":["is set"]},{"title":"to","paragraphs":["the referent"]},{"title":"of","paragraphs":["the object noun phrase. The same semantics are used for sense-meaning 5 of"]},{"title":"OF, <","paragraphs":["attribute> OF"]},{"title":"<","paragraphs":["object>"]},{"title":",","paragraphs":["and for one sense-meaning of"]},{"title":"ON. WITH","paragraphs":["may be used to connect an object with an attribute and value, as in ''a spring with a constant of 40 Iblft\""]},{"title":"(PI),","paragraphs":["or to connect a second participant in a relationship with the relationship, as in \"an angle of 60 deg with the horizontal\""]},{"title":"(P4). The","paragraphs":["latter sense-meaning is frequently used in English to define the participants in a relationship, usually using the verbs \"have\" and \"make\". There are five sense-meanings of ON which are recognized by the program: 1."]},{"title":"<","paragraphs":["physob> on"]},{"title":"<","paragraphs":["loc> the rope on the left end (P4) 2."]},{"title":"<","paragraphs":["attribute> on"]},{"title":"<","paragraphs":["physob> the tension on each of the ropes (P3) 3."]},{"title":"<","paragraphs":["action> on"]},{"title":"<","paragraphs":["physob> the forces on the supports (P6) 4."]},{"title":"<","paragraphs":["verb> on"]},{"title":"<","paragraphs":["physob> stands on the scaffold (P3) 5."]},{"title":"<","paragraphs":["verb> on"]},{"title":"<","paragraphs":["loc> placed on the edge of a block (P14)"]},{"title":"Sense-meanings","paragraphs":["1 and 5 are processed"]},{"title":"as LOC","paragraphs":["modifiers; meaning 2 is converted to an ATTROF SFRAME; nleaning 4 is converted to a CASEARG modifier. Meaning 3 is converted to the SFRAME"]},{"title":"ACTON,","paragraphs":["with the referent of the object noun phrase as its"]},{"title":"SEMOBJ. 4.3.3","paragraphs":["Definition and Translation of Prepositions Out of curiosity, the sense-meaning classificatior~s for the preposition"]},{"title":"OF","paragraphs":["(which had the most sense-meanings of any in the program) were checked against the definitions given for OF in several dictionaries. The agreement with the dictionary definitions was very poor. Often, several of our classes would fit in a single dictionary class, or one of our classes would fit in several dictionary classes. Prepositions are of course hard to define, and native speakers of a language rarely need to look them up in a dictionary. However, in translating from one natural language to another (whether done by a human or by a machine), the correct translation of prepositional phrases is a difficult problem. For example, the preposition OF can be translated into about a dozen different prepositions in German; some uses of OF are translated into the genitive case or other constructions which do not use prepositions."]},{"title":"It","paragraphs":["seems plausible that discrimination nets similar to those used in our preposition semantic routines might be used to discriminate preposition sense-meanings for machine translation. Hopefully, sense-meaning classes could be found such that all usages of a preposition which fall within each class could be acceptably translated into the same form in the target language.","4.4 Referent Identification Referent Identification is the process of associating the phrases"]},{"title":"in","paragraphs":["a sentence with"]},{"title":"the","paragraphs":["objects"]},{"title":"and","paragraphs":["relationships they refer to (explicitly or implicitly) ih the reader's model of the world."]},{"title":"Such","paragraphs":["a process involves a number of possible steps. Candidate referents must be found. In some cases the candidates will be identified by the same word used in"]},{"title":"the","paragraphs":["sentence, or will be members of the same class which can be matched together (e.g.,"]},{"title":"\"Paul","paragraphs":["'"]},{"title":"and","paragraphs":["\"boy\", both of which are members of the class"]},{"title":"PERSON","paragraphs":["with the restriction"]},{"title":"(SEX MALE)).","paragraphs":["In other cases, the phrase in the sentence identifies the candidates implicitly by identifying their relationships or attributes. (For example, in"]},{"title":"(P17)","paragraphs":["the word \"load\" refers to a sack which is being carried on a pole.)"]},{"title":"In","paragraphs":["such a case, the candidate can be considwed an instance of the phrase in the sentence in its particular instantiation, but not in general."]},{"title":"If","paragraphs":["there are no candidates (or if there are not enough), a referent must be created and added to the model. If there are several candidates, it may be necessary to select a particular one, either arblitrariiy or based on modifiers of the phrase in the sentence."]},{"title":"If","paragraphs":["modifiers are used, problem solving may be required to determine which of the candidates satisfies the modifiers. Once the referent(s) of the phrase have been identified, modifiers of the phrase must be processed"]},{"title":"to add","paragraphs":["information"]},{"title":"to","paragraphs":["the referent"]},{"title":"as","paragraphs":["appropriate."]},{"title":"ISAAC","paragraphs":["contains programs to identify three types of referents: Physical entities (objects and non-material physical entities such as forces), locations, and attschments. These referent identification programs are described below."]},{"title":"4.4.1","paragraphs":["Identifying Physical Entity Referents Physical entity referents are identified by the function IDRFNT."]},{"title":"Sf","paragraphs":["the refe~ent was previously identified, it is retrieved from the noun phrase token's property list. Okherwise, the referent is identified using the function PHYSNP and put on thg tok~n's property list under the indicator"]},{"title":"RFNT.","paragraphs":["(The \"referent\" is a list of pointers to each of the objects or relations denoted by the noun phqase.) If the noun phrase& compound, the referent of each component noun phrase is determined, and the concatenation of all the referents is used as the referent of the compound. A flowchart of PHYSNP is shown in Figure 4.1. The first step in identifying the referent is"]},{"title":"to","paragraphs":["find the existing objects"]},{"title":"in","paragraphs":["the"]},{"title":"world","paragraphs":["model to"]},{"title":"which the","paragraphs":["noun phrase"]},{"title":"might","paragraphs":["refer."]},{"title":"(If","paragraphs":["the dcternliner is indefiilito, it"]},{"title":"is","paragraphs":["assumed that"]},{"title":"a new object is","paragraphs":["bring referred to,"]},{"title":"and","paragraphs":["this step is bypassed.)"]},{"title":"The","paragraphs":["list of esisting object& is sea~ched first for objects"]},{"title":"with","paragraphs":["the satne token word ns the noun phrtlse. ant1 then for ot~j,jr~lts \\vhosr token words are synonyms of the token word of the noun phrase. If no cnndid~tvs are foutld by either of these searches, n semantic routine associated with the nourl phrase token word is executed (if available) to see if there is"]},{"title":"a","paragraphs":["suitablereferent for that \\yard"]},{"title":"in","paragraphs":["the tncldr.1."]},{"title":"Such","paragraphs":["a semantic routine allows the"]},{"title":"noun","paragraphs":["phrltse \"the load\" in (PIS)"]},{"title":"to","paragraphs":["be mntched to the"]},{"title":"object","paragraphs":["whose toke11"]},{"title":"word","paragraphs":["is \"snck\" The referent semantic routi~~e for \"load\" selects an object which is"]},{"title":"a","paragraphs":["physical entity, is not R person,"]},{"title":"is","paragraphs":["supported by something, and cto~s not support anything itself. The semantic routine for \"support\" selects the appropriate number of objects which all support the same objwt."]},{"title":"If","paragraphs":["candidate objects are found by"]},{"title":"any","paragraphs":["of these searches, they"]},{"title":"are","paragraphs":["subjected to further testing begi~~r~ing at the floivchart label"]},{"title":"(B)","paragraphs":["(page 2 of Figure 4.1)."]},{"title":"If","paragraphs":["no candidate objects are found, or if all candidates are rejected on semaatic grounds, new referent objects must be created. The number of objects to be created is set equal to the"]},{"title":"QTY","paragraphs":["(quantity) attribute of the noun phrase if specified (as in \"two boys\" (P20)), to two if the noun phrase is plural and not compound, to the number"]},{"title":"of","paragraphs":["locations if there is a locatiorl modifier (as in \"a pier at each end\" (P13)), or to one otherwise. The proper number of objects is then created using the function MAKENT."]},{"title":"In","paragraphs":["most cases,"]},{"title":"MAKENT","paragraphs":["simply creates a"]},{"title":"GENSYM","paragraphs":["atom, sets its token word appropriately, and adds it to the libt of created objects. Provisio~~ is made,"]},{"title":"however, for","paragraphs":["special semantic routines to create referents for particular words. A seesaw, for example, is not a single object, btit E\\ rigid plank pivoted at its center. The semantic routine to make a referent for \"seesaw\" creates both objects and specifies their attachment. Similarly, an equilibrant is a force which is applied to a rigid body to produce equilibrium. The semantic routine to create a referent for \"equilibrant\" creates a force,"]},{"title":"finds","paragraphs":["an appropriate rigid body, and specifies the attachment of the force to the rigid body at"]},{"title":"an","paragraphs":["unknown position; When the refererits of the ,noun phrase have finally been determined or created, the function DOMOUS is called to execute the nlodifier semantics for each of the modifiers which remain on the noun phrase token. Modifier semantics is discussed"]},{"title":"in","paragraphs":["a later section."]},{"title":"The","paragraphs":["second page of Figure 4.1 shows the tests which are performed on"]},{"title":"candidate","paragraphs":["referents for a"]},{"title":"noun","paragraphs":["phrase in order to reject those candidates which are clearly inappropriate on semantic grounds and to select the proper candidate(s) from those which remain. First, each candidate is subjected to RSTRTEST (restriction test) and"]},{"title":"NAMETEST.","paragraphs":["RSTRTEST requires that if the candidate and the noun phrase have"]},{"title":"RESTRKT","paragraphs":["modifiers with the same indicator, the restriction values"]},{"title":"must","paragraphs":["be equal."]},{"title":"Thus, \"~aui\"","paragraphs":["and \"boy\", both of which have thefmodifier"]},{"title":"(RESTRICT (SEX MALE)),","paragraphs":["would match, while \"Paul\" and \"girl\" would not."]},{"title":"NAMETEST","paragraphs":["requires that"]},{"title":"if","paragraphs":["both the candidate and"]},{"title":"the","paragraphs":["noun phrase token have names, the names must match."]},{"title":"After any candidates","paragraphs":["which fail"]},{"title":"RSTRTEST","paragraphs":["or"]},{"title":"NAMETEST","paragraphs":["have been removed, thearemailling candidates ace examined to see if they constitute the proper number"]},{"title":"of","paragraphs":["referents."]},{"title":"If","paragraphs":["there is onry one candidate, if the quantifier \"each\""]},{"title":"is","paragraphs":["present, if"]},{"title":"the","paragraphs":["number of candidates matches the"]},{"title":"QTY","paragraphs":["(quantity) of the noun phrase, or if the noun phrase is"]},{"title":"plural","paragraphs":["and there are two candidates, then the existing set of candidates is"]},{"title":"accepted","paragraphs":["without further tests."]},{"title":"If","paragraphs":["a determiner adjective is present, the corresponaing candidate is picked: the first for \"one\" or \"first\", or the second for \"other\" or \"sepond\". Otherwise, the candidates are tested against modifiers of the noun phrase."]},{"title":"If","paragraphs":["a candidate is found which has a matching modifier (e.g., both have the modifier"]},{"title":"(WEIGHT","paragraphs":["125"]},{"title":"LB)),","paragraphs":["that candidate"]},{"title":"is","paragraphs":["selected."]},{"title":"If","paragraphs":["a candidate has a rqismatching modifier (e.g., (WEIGHT 150 LB)), that candidate is removed from the list of possibilities. Some modifiers, such as location modifiers,"]},{"title":"may","paragraphs":["have special semantic routines fbr selecting candidates. A candidate is selected by the location semantic routine"]},{"title":"Bif","paragraphs":["the location referent of the location modifier is a member of one of the attachment relations of the candidate. Thus, \"the rope on the left end\" (P4) will select"]},{"title":"the","paragraphs":["rope which is attached to the left Bnd of the bar. If multiple candidates remain after"]},{"title":"all","paragraphs":["the modifiers have been tested, the first one"]},{"title":"is","paragraphs":["selected arbitrarily."]},{"title":"Inl","paragraphs":["some cases, the number of referents created for a noun phrase is not"]},{"title":"enough","paragraphs":["when the context of the noun phrase is considered; in such cases, the function"]},{"title":"MORERFN?","paragraphs":["may be called to create additional referents."]},{"title":"For","paragraphs":["example, \"the pier at"]},{"title":"each end of","paragraphs":["the bridge\""]},{"title":"(P18)","paragraphs":["will cmse two \"pier\" objects to be created because of the two locations in the location modifier generated by the prepositional phrases. However,"]},{"title":"in \"a plank . . . .","paragraphs":["supported at each end by a stepladder\""]},{"title":"(P19),","paragraphs":["the locatian modifier is attached to the verb phrase, so that initially only a single \"stepladder\" referent is created. The verb semantics for"]},{"title":"SUPPORT,","paragraphs":["however, requlres a separate supporting"]},{"title":"object","paragraphs":["for each specified location, so that"]},{"title":"MORERFNT","paragraphs":["will be called to make a second \"stepladder\" referent. 4.4.2"]},{"title":"Identifying","paragraphs":["Location Referents There are two primary functions involved in the identification of location referents,"]},{"title":"IDLOC","paragraphs":["and"]},{"title":"LOCNP. IDLOC","paragraphs":["identifies a location given the object to which the location is relative, the location name, an optional"]},{"title":"SELECT","paragraphs":["modifier, and an optional"]},{"title":"list of","paragraphs":["location frames to be excluded from the selection process. For example, the phrase \"the left end of the lever\" would result in a call to IDLOC with the referent object"]},{"title":"for \"the","paragraphs":["lever\", the location name"]},{"title":"\"END'',","paragraphs":["the"]},{"title":"SELECT modifier","paragraphs":["\"LEFT\", and"]},{"title":"a","paragraphs":["null exclusio~l list as~arguments. IDLOC is used both by iilternnl pimcesses RII~ by"]},{"title":"LOCNP* LOCNP","paragraphs":["identifies the locqtion(s) referred to by"]},{"title":"a","paragraphs":["noun phrase. $' 111~"]},{"title":"a","paragraphs":["locatioll may"]},{"title":"be","paragraphs":["specified by a wide variety of syntactic forms,"]},{"title":"LOCNP","paragraphs":["lnust identify the form of the t~aun phrase and the features of the lor~tioll which arq specifietl. These features are collected, and missing features are filled ill by inaking inferences; finally,"]},{"title":"IDLOC","paragraphs":["is called to identify the location referents. 'I'hus. LOCNP serves as an interface function to collect the nrguments for"]},{"title":"IDLOC","paragraphs":["tltld put tlletll into a standard form."]},{"title":"IDLOC","paragraphs":["and"]},{"title":"LOCNP","paragraphs":["are described in detail \\)elow. A flowchart of"]},{"title":"IDLOC","paragraphs":["is shown in Figure 4.2."]},{"title":"IDLOC","paragraphs":["first examines all the existing locations on the specified object to see if one of them is suitable. An existing location is rejected if it is a member of the excluded locations list, if it has the wrong location name, or if it has a relative positio~l (displacement) from the named position."]},{"title":"If","paragraphs":["the location passes these tests, it is examined for the specified"]},{"title":"SELECT","paragraphs":["value. In most cases, the"]},{"title":"SELECT","paragraphs":["semantics consists of a test for an identical"]},{"title":"SELECT","paragraphs":["modifier (e.g.,"]},{"title":"RIGHT","paragraphs":["or"]},{"title":"LEFT). In","paragraphs":["some cases, however, a special semantic routine must be used to test the world model and determine whether a location meets the selection criterion. To find \"the heavy end\" (P12), for example, it is necessary to esamine the object frame for the object involved; the \"heavy\" end is the one which is closest to the center of gravity of the object. Which end is the \"heavy\" one could be changed by changing the numeric value of either the length of the bar or the distance from one end of the center of gravity, while leaving all the English words the same. Thus, numerical problem solving by a specialist program, based on the particular values specified for certain parameters, is required to determine the proper location referent."]},{"title":"If","paragraphs":["no SELECT parameter is specified to IDLOC, or if the object being-examined has no"]},{"title":"SELECT","paragraphs":["modifier, the object is saved as a second choice in case a better candidate is not found. Thus, if a"]},{"title":"SELECT","paragraphs":["value of"]},{"title":"LEFT","paragraphs":["is specifitxi, all the locations on the object with the proper location name (e.g., END) will be examined for a"]},{"title":"SELECT","paragraphs":["LEFT modifier. If none is found, a location with no SELECT modifier will be chosen; when the modifiers of the noun phrase are processed, the select value will be added to that location frame.","In addition to its use by LOCNP, IDLOC is used internally by semantic routines to identify particular locations on objects. For example, when a referent object for \"seesaw\" is created,"]},{"title":"IDLOC","paragraphs":["is called to create a location frame for the center of the newly created seesaw plank; this location is then used in specifying the attachme~lt of"]},{"title":"the","paragraphs":["plank to the pivot which is created."]},{"title":"LOCNP","paragraphs":["identifies the referent(s) of a location noun phrase; such a location may be denoted in many different ways. If the location has a name, the name alone may be used (as in \"80 cm from (A)\""]},{"title":"(PG));","paragraphs":["the ol~ject to which the location is relative lnhy or"]},{"title":"may not be","paragraphs":["named"]},{"title":"(\"the left","paragraphs":["end of the lever\""]},{"title":"or","paragraphs":["simply \"the"]},{"title":"left end\");","paragraphs":["a"]},{"title":"physicnl","paragraphs":["object name may be used to specify"]},{"title":"n","paragraphs":["location, since every physical object occupies a position in space.Most of the function LOCNP co~lsists of code"]},{"title":"to","paragraphs":["make the 'inferet~ces and collect the argutnents.needed to identify a location when the location is dci~oted by any of the noun phrase forms mentioned above."]},{"title":"A","paragraphs":["flowchart of"]},{"title":"1,OCNP is","paragraphs":["shown in Figure 4.3. If the referent of the noun phrase is known, it is returned at once. Otherwise, a series of tests"]},{"title":"is","paragraphs":["made to determine the type of location noun phrase."]},{"title":"If n","paragraphs":["location is specified"]},{"title":"by","paragraphs":["name, the existing location frames are searched for a location with that ~-rame. When the correct location is found, it is saved on the noun phrase token under the indicator KFNT, and the function"]},{"title":"DOMODS","paragraphs":["is called to process any modifiers of the noun phrase. If the noun phrase is already marked as being a LOCPART"]},{"title":"SFRAME,","paragraphs":["the object to which the location is relative is already known; this will be the case if a modifier of the location noun phrase specifies the object, as in \"the end of the lever\" or \"its left end\"."]},{"title":"In","paragraphs":["such cases,"]},{"title":"LOCNP","paragraphs":["transfers directly to the label"]},{"title":"\"B\"","paragraphs":["(page 2 of Figure 4.3). If a location is named without an object (as in \"one end\"), it is necessary to find an appropriate object. This is done by examining the"]},{"title":"GEOMODEL","paragraphs":["(geometric model) of each object in the model of the problem until an object for which the location name is appropriate has been found. Once the appropriate object for the location has been inferred, the noun phrase token is converted to"]},{"title":"a","paragraphs":["LOCPART"]},{"title":"SFRAME,","paragraphs":["and control is transferred to label"]},{"title":"\"B\".","paragraphs":["If tfie noun phrase names a physical object or person,"]},{"title":"IDRFNT","paragraphs":["is called to identify the physical object referent. If the object to which the location is relative is specified in the call to"]},{"title":"LOCNP","paragraphs":["and is different from the object named by the noun phrase, a search is made for a location at which the named object is attached to the desired object; thus, in"]},{"title":"\"0.5","paragraphs":["m from Paul\" (P17), which specifies"]},{"title":"a","paragraphs":["location on a pole which Paul is carrying, \"Paul\" is interpreted as a location on the pole by finding the point on the pole where Paul is attached to it. If the desired object is unspecified, a location is made for the default lacation of the named object. At label"]},{"title":"\"B\"","paragraphs":["of the flowchart, where LOCPART SFRAMEs are processed, a test is made â‚¬0 see if the noun phrase is plural or modified by the quantifier EACH, as in \"its ends\" or \"each end\". If sa. the number of such locations is gotten from the"]},{"title":"GEOMODEL","paragraphs":["of the object, and that number of locations is identified by calls to"]},{"title":"IDLOC.","paragraphs":["Thus, \"wch end\" (P3), referring to a scaffold, will cause two \"end\" location frames to be generated."]},{"title":"If the","paragraphs":["noun phrase is singular,"]},{"title":"IDLOC","paragraphs":["is called to identify a single location referent. If a location name is specified, the location found is required to pass"]},{"title":"NAMETEST,","paragraphs":["having either the correct name or no name. Once the proper referent"]},{"title":"P HD Is a","paragraphs":["LOCPART SFWIE","HD plural Get the number of chi3 tvpe of locat~on for chis object","IDLOC","Identify location referent Ident~fv proper number of locations Figure 4.3 (page 2) has been found, control is passed to the label"]},{"title":"\"H\"","paragraphs":["to save the referent and process modifers of the noun phrase.","4.4.3 Attachment Identification An attachment relationship among two or more objects is identified by the function"]},{"title":"IDATT.","paragraphs":["Attachment relations are not the direct referents of phrases in a sentence, but are defined by"]},{"title":"verb","paragraphs":["semantic routines or modifier semantic routines. The argument of"]},{"title":"IDATT","paragraphs":["is a paired list of objects and locations on the objects; one member"]},{"title":"of","paragraphs":["each pair may be nil. IDATT identifies an attachment frame which specifies the attachment"]},{"title":"of","paragraphs":["all the objects in the list; if no such attachment frame exists, one is created, along with links between it and the objects involved. (The structure of attachments and other frames is described in Appendix"]},{"title":"B.)","paragraphs":["If an existing attachment which matches the 1ist.i~ found and the list contains locations which were previously unspecified, the locations are"]},{"title":"put","paragraphs":["into the existing attachment frame. Thus, in cases such as"]},{"title":"A","paragraphs":["painter"]},{"title":". .","paragraphs":["stands on a plank"]},{"title":". . . If","paragraphs":["he stands 1.0 m from one end of â‚¬he plank"]},{"title":". . .","paragraphs":["(P19), the second attachment will be identified with the earlier one and will cause the location on"]},{"title":"the","paragraphs":["plank to be added to the attachment frame. The order i~ which the objectllocation pairs are specified in the call to"]},{"title":"IDATT","paragraphs":["is unimportant. A second parameter in the call to IDATT is the type of attachment:"]},{"title":"CONTACT","paragraphs":["(as in the above example) or PINJOINT. The type of attachment is not used by"]},{"title":"IDATT,","paragraphs":["but"]},{"title":"is","paragraphs":["saved with the attachment frame for later use. The interaction of objects at an attachment point may depend"]},{"title":"on","paragraphs":["the type of attachment. A CONTACT attachment with a \"smooth\" surface, for example, implies that the force exerted by the surface"]},{"title":"is","paragraphs":["nonnegative and perpendicular to the surface. A"]},{"title":"PINJOINT","paragraphs":["att,achment may transmit a force in any direction, but may not transmit a torque. Although other types of attachments could be used, CONTACT and"]},{"title":"PINJOINT","paragraphs":["are the only ones used by the program in its present form.","4.5 Modifier Semantics Modifiers of noun phrases are savedi after some preliminary processing (Section 4.2), on the property list of the noun phrase token under the indicator MODS. After the referent of the noun phrase has been determined, the semantic routines. of these saved modifiers are executed so that the appropriate changes may be made to the referent of the noun phrase. (Some modifiers, which are used in selecting the proper. referent, are deleted before this stage is reached.) Modifier semantic processing is controlled by the driver function"]},{"title":"DOMODS,","paragraphs":["which calls"]},{"title":"PUTMODR","paragraphs":["for"]},{"title":"each","paragraphs":["modifier.."]},{"title":"PUTMODR","paragraphs":["(which is also"]},{"title":"used","paragraphs":["for modifier processing by some verb semantic routines) transfers the modifier"]},{"title":"to the","paragraphs":["property list of"]},{"title":"each","paragraphs":["referent, or executes a special semantic routihe"]},{"title":"if","paragraphs":["there is one associated"]},{"title":"with the","paragraphs":["modifier."]},{"title":"Thus, in","paragraphs":["simple"]},{"title":"cases such as","paragraphs":["\"a 150"]},{"title":"lb man\", the","paragraphs":["modifier"]},{"title":"(WEIGHT","paragraphs":["150"]},{"title":"LB)","paragraphs":["generated from the adjective phrase is transferred to the referent's property list as the value (150"]},{"title":"LB)","paragraphs":["under the indicator"]},{"title":"WEIGHT.","paragraphs":["In other cases, semantic routines may"]},{"title":"make","paragraphs":["inferences from modifiers,"]},{"title":"e.g., that an","paragraphs":["object"]},{"title":"which is at a","paragraphs":["location"]},{"title":"on","paragraphs":["another object is attached to the other object"]},{"title":"at","paragraphs":["that"]},{"title":"location. RESTRICT","paragraphs":["modifiers are cotlcatenntcd and y laced on the referent object under the indicator"]},{"title":"RESTRICT;","paragraphs":["this allows an object to have multiple"]},{"title":"RESTRICT","paragraphs":["modifiers, which"]},{"title":"are used","paragraphs":["in determining 110~11 phrase referents. Measurement modifiers are transferred directly to the property list of the referent. In the process, the measurement units for each type 6f measurement are saved for use in answer generation. It would be easy to modify the measurement modifier semantic routine to allow differing units (e.g., feet and meters) to be used in the same protilem."]},{"title":"NAME","paragraphs":["modifiers are processed in different ways depending on the type of name and the type of object which is named. Simple names are transferred directly to the property list of the named object. Geometric names which modify locations are distributed to the named locations. I-f geometric names are assigned to a physical object,"]},{"title":"as","paragraphs":["in \"a uniform bar (A"]},{"title":"B)\" (P6),","paragraphs":["location referents are created for the appropriate locations on the object (in this case the ends of the"]},{"title":"bar)","paragraphs":["as determined by"]},{"title":"the","paragraphs":["object's GEOMODEL, and the geometric names are assigned to the location referents."]},{"title":"An APART","paragraphs":["modifier gives the distance between twb' locations, as"]},{"title":"in","paragraphs":["\"the hinges of a door"]},{"title":". . .","paragraphs":["are 12"]},{"title":"ft","paragraphs":["apart\""]},{"title":"(P9).","paragraphs":["This modifier not only gives the distance between the two locations, but also implicitly determines the size of the object if the two locations are on the same object. In the above case, for example, we can infer that the door is at least 12 ft tall. The semantic routine for"]},{"title":"APART","paragraphs":["modifiers consults the"]},{"title":"GEOMODEL","paragraphs":["of the object, calculates the overall size dimension which would give the specified distance between the two points, and assigns that size to the object."]},{"title":"In","paragraphs":["our set of physics problems, a location modifier of a noun phrase always implies that the referent object is attached to something at that location, as in \"an automobile"]},{"title":". . .","paragraphs":["which, is 30.0"]},{"title":"ft","paragraphs":["from one end of the bridge\""]},{"title":"(P18).","paragraphs":["The modifier"]},{"title":"semantics","paragraphs":["routine for location modifiers calls"]},{"title":"IDATT","paragraphs":["to define the attachment."]},{"title":"In","paragraphs":["a larger system which handled"]},{"title":"a","paragraphs":["wider range 6f problems, some additional semantic tests would be needed to determine whether"]},{"title":"an","paragraphs":["attachment was actually implied by the location madifier. 4.6 Verb Semantics The semantic functions performed by verbs are very diverse. Some verbs (for example, certain sense-meanings oE"]},{"title":"the","paragraphs":["verbs \"is'', \"have\", and \"make\") serve only as function words which con~~ect other phrases; the semantics of such verbs resides primarily in the phrases they connect. Other verbs (e.g., \"need\" or \"wish\") intrdduce verb phrases to which they pass some of their case arguments. Some verbs carry case arguments and other inferences to be used with their \"underlying*' verbs; for exmpk, \"stand on"]},{"title":". . .\"","paragraphs":["specifies an attachment by contact between the feet of the subject add the object of \"on\", with the subject in"]},{"title":"a","paragraphs":["standing position. A single verb may have multiple sense-meanings; as in the case of prepositions, we found that discrilnit~atio~l"]},{"title":"net","paragraphs":["tests based on"]},{"title":"rough","paragraphs":["semantic classifications 61 the case arguments of the verb were sufficient to differentiate the sense-meanings."]},{"title":"In","paragraphs":["this section, we will describe"]},{"title":"the","paragraphs":["semantic functions for a number of verbs as they are implemented in the program. In the cases where a"]},{"title":"verb","paragraphs":["appeared infrequently in the sam~le problems, the verb semantic routines handle only the limited sense-meanings necessary for those cases; often, there are not many error checks to keep the program from going astray if it were presented with different cases. Some of the verb semantic routines handle a number of variations in the types of their case arguments; it seems likely that general rules for handling different types of arguments which would be applicable to classes of similar verbs might be found. This would be an interesting area for further research."]},{"title":"The","paragraphs":["execution of"]},{"title":"a","paragraphs":["verb semantic routine is initiated"]},{"title":"by EXVBSEM,","paragraphs":["which is called when a clause or dependent clause has been parsed."]},{"title":"'EXVBSEM","paragraphs":["executes the semantic routines for any prepositional phrases or adverbs which modify the verbi It then binds some of the case arguments of the verb (and their referents) to global variables so that they will be easily accessible, and calls the semantic function associated with the main verb of the verb phrase. 4.6.1 Semantics of the Verb"]},{"title":"\"BE\"","paragraphs":["There are seven sense-meanings of the verb"]},{"title":"\"BE\"","paragraphs":["which are recognized by the program; the sense-meaning classes are listed with examples below. 1."]},{"title":"THERE BE <","paragraphs":["physob>"]},{"title":"<","paragraphs":["loo At @)...there is a weight (P15) 2."]},{"title":"<","paragraphs":["physob>"]},{"title":"BE <","paragraphs":["loc> a man is 10 ft from the top (P8) 3."]},{"title":"<","paragraphs":["physob>"]},{"title":"BE <","paragraphs":["adj phrase> the door is 3 ft wide (P9) 4."]},{"title":"c","paragraphs":["attrof>"]},{"title":"BE <","paragraphs":["measurement> the weight of the lever is 8 lb (PI) 5."]},{"title":"<","paragraphs":["attrof>"]},{"title":"BE WHAT","paragraphs":["what is the weight of the bar (P4) 6."]},{"title":"<","paragraphs":["locpart>"]},{"title":"BE < lot>","paragraphs":["its center of gravity is 6.0 ft from one end"]},{"title":"(PI","paragraphs":["1 ) 7."]},{"title":"< subj> BE TO <","paragraphs":["verb phrase> the bar is to be supported ...("]},{"title":"P6)","paragraphs":["These sense-meanings are easily separated by a set of discrimination net tests, most of the sernantic classes being tested at this point are"]},{"title":"SFRAME","paragraphs":["types, so that"]},{"title":"any of the","paragraphs":["syntactic forms which result in the creation of a particular"]},{"title":"SFRAME","paragraphs":["will be accepted. Once the sense-meanings have"]},{"title":"been","paragraphs":["separated into these classifications, we find happily that most of the semantics has already been done: it is only necessary to pass the arguments of the ver,b to routines which were written to do the same semantics for different syntactic forms. Sense-meaning 1 is changed to the same form ns 2;"]},{"title":"IDATT","paragraphs":["is called for both cases to define"]},{"title":"an","paragraphs":["attachment of the object at the location specified."]},{"title":"For","paragraphs":["sense-meanings 3 and 4,"]},{"title":"PUTMODR","paragraphs":["is"]},{"title":"calleil","paragraphs":["to esecute'the semantics of the modifier"]},{"title":"for","paragraphs":["the referent of the object involved. For sense-meaning 6, the argume~lt is converted to arguments for the question routine"]},{"title":"WHATIS; WHATIS","paragraphs":["is expiained in q later section. For sense-meaning 6, the location is saved on the property list of the object referent using the location name as the indicator. For sense-meaning 7, the function"]},{"title":"SUBSTINF","paragraphs":["is called to substitute the subject of the verb as the syntactic subject of the infinitive verb phrase and execute its verb semantics. Thus, in \"the bar is to be supported\""]},{"title":"(P6),","paragraphs":["the subject \"the bar\" is substituted as the syntactic subject of the passive verb phrase, so that the referent of \"the bar\" becomes the semantic object of the verb \"support\". 4.6.2 Semantics of the Verb"]},{"title":"\"SUPPORT\" Six","paragraphs":["sense-meaning classes of the verb"]},{"title":"\"SUPPORT\"","paragraphs":["are recognized by the program; these are listed with examples below. 1."]},{"title":"< physob> SUPPORT <","paragraphs":["physob> the lever"]},{"title":"is","paragraphs":["supported by a spring"]},{"title":"(PI)","paragraphs":["2."]},{"title":"< physob>","paragraphs":["SUPPORT"]},{"title":"< N","paragraphs":["the boy"]},{"title":"...","paragraphs":["supports"]},{"title":"'6","paragraphs":["as much"]},{"title":"as","paragraphs":["the man"]},{"title":"(P2:","paragraphs":["times"]},{"title":"> AS MUCH AS <","paragraphs":["physobs 3."]},{"title":"<","paragraphs":["physob>"]},{"title":"SUPPORT","paragraphs":["WHAT what load does each pier support (P13)"]},{"title":"c","paragraphs":["force> 4."]},{"title":"<","paragraphs":["nil>"]},{"title":"SUPPORT <","paragraphs":["physob> a beam"]},{"title":"...","paragraphs":["is supported dt both ends"]},{"title":"(PIG)","paragraphs":["5."]},{"title":"c","paragraphs":["physob>"]},{"title":"SUPPORT <","paragraphs":["locpart> the top of the ladder is supported from the wall by"]},{"title":"a","paragraphs":["horizontal rope"]},{"title":"(P8)","paragraphs":["6."]},{"title":"<","paragraphs":["physob> SUPPORT"]},{"title":"<","paragraphs":["attrob the weight of the door is supported by"]},{"title":"the","paragraphs":["upper hinge (P9)"]},{"title":"It","paragraphs":["might be argued that these are not distinct sense meanings, but rabher six different ways of specifyiflg the arguments for a single sense-meaning. Essentially, the verb"]},{"title":"SUPPORT","paragraphs":["(for our purposes) specifies an attachment of two objects at a particulan location on each object; a force is exerted on one object by the other object in order to support it. For sense-meaning classes 1,4, and 5, the arguments of the verb are arranged to serve as arguments for IDATT so that the attachment relation may be specified. (In the case of sense-meaning 4, a pivot object is created to serve as the unnamed supporting object.)"]},{"title":"In","paragraphs":["the remaining sense-meaning classes"]},{"title":"(2. 3,","paragraphs":["and 6), the force exerted"]},{"title":"in","paragraphs":["the attachment relation"]},{"title":"is","paragraphs":["referenced. Such a force is identified by the function IDFORCE, which creates variables for the force vector and adds them to the attachmefit relation"]},{"title":"if","paragraphs":["necess-ary. for sense-meaning 2,"]},{"title":"<","paragraphs":["physob>"]},{"title":"SUPPORrr < N","paragraphs":["times>"]},{"title":"AS MUCH AS <","paragraphs":["physob>"]},{"title":",","paragraphs":["equations are written which relate the two force vectors so that one is"]},{"title":"N","paragraphs":["times as much as the other. For sense-meaning 6,"]},{"title":"<","paragraphs":["physob> SUPPORT"]},{"title":"<","paragraphs":["attrof>"]},{"title":",","paragraphs":["an equation is written equating the force and the specified force attribute."]},{"title":"For","paragraphs":["sense-meaning 3,"]},{"title":"<","paragraphs":["physob>"]},{"title":"SUPPORT WHAT < force> ,","paragraphs":["the force vector"]},{"title":"variables are","paragraphs":["marked as desired unknowns,"]},{"title":"and an","paragraphs":["entry is made to use the force vector values as a reply."]},{"title":"(The","paragraphs":["latter operatio~~s are discussed in more detail in the section on question semantics.) 4.6.3 Semantics of Other Verbs Verbs such as WEIGH and STRETCH express attributes in verbal form."]},{"title":"The","paragraphs":["semantic routines for these verbs call the function ATTRVBSEM with the appropriate case argument of the verb (subject for"]},{"title":"WEIGH,","paragraphs":["object for STRETCH) specified as the object which is modified. ATTRVBSEM uses the attribute associated with the verb to make a modifier, whose semantics are executed by PUTMODR. (In the case of a question, the case argument and attribute are used as parameters for the function WHATIS.) Thus, a semantic transformation is used to transform the verbal form"]},{"title":"into","paragraphs":["a modifier form for which the semantics already exists. The forms \"a man weighs 150 lb\", \"a 150 lb man\", and \"the weight of"]},{"title":"a","paragraphs":["man is 150 lb\" are all reduced to"]},{"title":"an","paragraphs":["identical \"semantic deep structure\", which cotlsists of the referent object for \"a"]},{"title":"man\"","paragraphs":["and the modifier (WEIGHT 150"]},{"title":"LB),","paragraphs":["by the time the semantics of the modifier are to be executed. A single modifier semantic routine performs the final semantic operations for all three cases."]},{"title":"In","paragraphs":["addition to the verb"]},{"title":"SUPPORT,","paragraphs":["the verbs"]},{"title":"REST, PIN,","paragraphs":["BALANCE, SIT,"]},{"title":"HANG, CARRY, ATTACH,","paragraphs":["STAND, LIFT, and"]},{"title":"EXERT","paragraphs":["can all be used to specify attachment relations. SIT and STAND imply that particular locations on the person who is sitting or standing are involved in the attachment, and that the attachment is of type"]},{"title":"CONTACT.","paragraphs":["(These verbs could also determine the person's posture for the picture-making programs, but that is not done in the present system.) A number of the verbs imply that one of the objects iil the attachment relation supports the other. These support relations are marked by SUPPORT and"]},{"title":"SUPPORTBY","paragraphs":["links among the objects; they are used in later inferences, such as inferring whether a person shoul'd be modeled as a pivot or as a weight by the problem solver."]},{"title":"The","paragraphs":["verb PIN implies (as used in these problems) a pivot object which must be created as the other object for the attachment relation. CARRY, if used with an instrument, implies that the subject, is attached to the instrument and that the object i5 attached to and. support etl hy the instrument, as in"]},{"title":"\"Paul","paragraphs":["and Henry carry a sack"]},{"title":".","paragraphs":[", on pole between them\" (P17). The verbs WISH NEI':D."]},{"title":"w~ul","paragraphs":["REQCIIIIE nre used in the sample prohlems with infinitive verb phrase objects, as ill \"two boys"]},{"title":". . .","paragraphs":["wish to btalance on n seesaw\" (P20). For our purposes,"]},{"title":"the","paragraphs":["\"modal\" il~formatioil provided by these verbs can be ignored. The verb seloanti6 routines far these verbs call the function SUHSTINF to substitute the appropllinte argument as the syntactic subject of the infinitive verb phrase and execute its verb se~nnntics. The above example is processed as if it were simply \"two boys balance on a seesaw\". HAVE appears with only one sense-mennit~g,"]},{"title":"<","paragraphs":["physob>"]},{"title":"HAVE <","paragraphs":["locpart>"]},{"title":"<","paragraphs":["loc> as in \"a bar"]},{"title":". . .","paragraphs":["has its center of gravity 1.5 m from the heavy end\" (P4). The location is put on the property list of the subject referent using the LOCPART name as the indicator This sense-meaning is similar to sense-meaning (i of the verb"]},{"title":"BE, <","paragraphs":["locpart> BE"]},{"title":"<","paragraphs":["loc> , escept that the arguments are in a different order."]},{"title":"MAKE","paragraphs":["is used with a relation name as an object, as in \"the rope"]},{"title":". . .","paragraphs":["makes an angle of 45 deg with the horizontal\" (P4). In such cases, the semantics is determined primarily by the relation involved (in this case, \"angle\"). The verb semantic routine for"]},{"title":"MAKE","paragraphs":["calls the semantic routine for the relation, passing to it the arguments of the verb. The semantic routine for \"angle\" creates a relative rotation modifier and attaches it to the former subject referent. The ambiguity of the direction of rotation is maintained by the relative rotation modifier; later,, absolute rotations are chosen (based on symmetry considerations) to provide a plausible interpretation of the problem.","FIND, CALCULATE, COMPUTE, and DETERMINE are &ll handled by a common semantic routine."]},{"title":"If","paragraphs":["the object of the verb is an ATTROF SFRAME. as in \"find the tension in each rope\" (P5), the object and attribute are used as argumrlts for the question routine WHATIS. If the object of the verb is an ACTON SFRAME, as in \"compute the forces on the supports\" (P6), thp desired force is identified using"]},{"title":"IDFOHCE.","paragraphs":["The force variables are marked as desired unknowns, and an entry is made to print the value of the force as a reply.","4.7 Question Semantics A question of the type found in our physics problems specifies two t-ypes of information: a set of variables whose values rnust be found in order to answer the question, and the manner in which the information provided bythe variablesois to be presented in the answer. For example, the sentence \"T>etermine the magnitaide, direction, and point of application of the equilibrant\" (P15) identifies the two variables in the equilibrant's force vector and the distance variable in the equilibrant's attachment relation as \"desired unknowns\", or variables whose values are required to generate the answer. In a(lditio11, the sentence specifies that the inagnitude anci -* rm 3 C"]},{"title":"; 3 hJ;","paragraphs":["%I cj 'I: cF"]},{"title":"- a, a z Q, s t, c. -CI 5r,","paragraphs":["+ C, Q,"]},{"title":"-- % L,","paragraphs":[";3r a C *k \", w s G C + m i a -42 s"]},{"title":"- r. h V","paragraphs":["$2 A c.1 .u 3 II) a 5 -+ 42 3 0 & E= 0 I CI *"]},{"title":"E 0) E: a M 5. Construction of Object","paragraphs":["Frames"]},{"title":"and the Geometric Model 5.1 Introductiox~ In","paragraphs":["reading"]},{"title":"the English","paragraphs":["problem statement of"]},{"title":"a","paragraphs":["physics problem,"]},{"title":"ISAAC","paragraphs":["builds an internalmodel of"]},{"title":"the","paragraphs":["problem"]},{"title":"in","paragraphs":["which"]},{"title":"most","paragraphs":["of the objects nnd relati~tlship~"]},{"title":"in the","paragraphs":["problenl"]},{"title":"are ~qepresented. A","paragraphs":["n~inber"]},{"title":"of steps are","paragraphs":["tlecessnry"]},{"title":"to","paragraphs":["ronrtert"]},{"title":"this","paragraphs":["t~loti~l into"]},{"title":"a","paragraphs":["model for which equations describing"]},{"title":"the","paragraphs":["i~~tcractio~~s of the objects"]},{"title":"mn","paragraphs":["be written. It"]},{"title":"is","paragraphs":["necessary to determine for"]},{"title":"each","paragraphs":["object"]},{"title":"thr.","paragraphs":["canotlical object frame which"]},{"title":"represents","paragraphs":["tht?"]},{"title":"object in","paragraphs":["its particular instantintion"]},{"title":"in","paragraphs":["the problan"]},{"title":"for","paragraphs":["the purpose of"]},{"title":"solving a physics","paragraphs":["problem."]},{"title":"(The","paragraphs":["fr'amr representing 3."]},{"title":"similar40bject","paragraphs":["in"]},{"title":"n different","paragraphs":["situation"]},{"title":"or for a different purpose might be a","paragraphs":["completely"]},{"title":"difftrent","paragraphs":["type"]},{"title":"of ct\\i~onical object.) A","paragraphs":["person, for example, might be modeled as n weight when sitting on a pole,"]},{"title":"or","paragraphs":["as"]},{"title":"a","paragraphs":["pivot when carrying it. Qnce the ca11onic~L object"]},{"title":"frame","paragraphs":["has"]},{"title":"beerr","paragraphs":["selected, it is necessary to make appropriate assumptions to fill in information qecessary for the canonical frame which may not be present in the original problem statement. A \"weight\" object must have a weight, although it heed not have a geometric size, ifi the weight is unspecified and is not a variable, a symbolic constant is created for it."]},{"title":"A","paragraphs":["\"lever\""]},{"title":"object lieed","paragraphs":["not have a weight, but"]},{"title":"must","paragraphs":["have a length."]},{"title":"Once the","paragraphs":["canonical object fraines Kave been selected for all the objects in the"]},{"title":"model,","paragraphs":["a geometric model of the problem in which the locations and orientations of the"]},{"title":"objects","paragraphs":["are made explicit"]},{"title":"must be","paragraphs":["constructed.,Since the sizes of some objects may be symbolic constants, the geometric locations for some points mby contain algebraic expressions. Problem solving"]},{"title":"by","paragraphs":["specialist programs (for example, solving a triangle"]},{"title":"given two","paragraphs":["sides"]},{"title":"and an","paragraphs":["angle) may"]},{"title":"be","paragraphs":["necessary in order to create a complete geometric"]},{"title":"model.","paragraphs":["After"]},{"title":"the","paragraphs":["geometric model of the problem has been created, the canonical"]},{"title":"frames","paragraphs":["for each object are completed by filling in any necessary information that"]},{"title":"remains","paragraphs":["unspecified. The weight of an object, for example, is modeled as a force exerted on the object"]},{"title":"at its center","paragraphs":["of gravity. (The geornetric model is needed to determine the location of"]},{"title":"the","paragraphs":["center of gravity.) Attachment relations are completed by creating force variables for each object involved in the attachment. After all of these processes have"]},{"title":"been","paragraphs":["completed, the problem solver is called to write equations for the interactions of the objects and solve the resulting equation set. This chapter describes the processes of making canonical object frames,"]},{"title":"creating the","paragraphs":["geometric model of the problem, and completing the frames which were"]},{"title":"created.","paragraphs":["5.2 Making Canonical Object Frames"]},{"title":"A","paragraphs":["Canonical Object is an idealizatio~~ of an actual physical object which represents"]},{"title":"its","paragraphs":["salient characteristics for a particular physics problem. A pole, for example,"]},{"title":"may","paragraphs":["be represented as a weightless rigid body; this is an idealization of an actual pole, which has a finite weight and is not perfectly rigid. The idealized canonical objects used in physics problems, such"]},{"title":"as","paragraphs":["weightless poles and frictioilless pulleys, rarely exist"]},{"title":"in","paragraphs":["the real world,"]},{"title":"but","paragraphs":["often give good approximations to the behavior of real-world objects. The same object may be representecl in different problems by different canonical object frames, depending on its relationship to other objects in each problem."]},{"title":"For each","paragraphs":["object in"]},{"title":"the","paragraphs":["problem, it"]},{"title":"is necessary","paragraphs":["to decide which canonical frame should be used to represent it, to mark the object with the canonical frame type, and to fill"]},{"title":"in any","paragraphs":["information necessary for the frame which is missing."]},{"title":"The","paragraphs":["function"]},{"title":"MFDRIVER","paragraphs":["calls the appropriate frame making routine for"]},{"title":"each","paragraphs":["physical entity"]},{"title":"in","paragraphs":["the model of the problem. Associated with each physical entity token word is a list of the frame-making routines which might be applicable to that- t-ype of object; there may be a specialist routine for"]},{"title":"a particular object (as","paragraphs":["in the case of a person) which decides which of several possible canonical object frames to use, or there may be a list of more general routines Svhich can fail if they are inappropriate for- a particular object in a particular context. In the present system, only a single frame-making routine is needed for each physical entity token. The functions"]},{"title":"REQUIREVAL","paragraphs":["and"]},{"title":"REQUIREVAR","paragraphs":["examine an object frame for a"]},{"title":"specified","paragraphs":["quantity;"]},{"title":"if","paragraphs":["the quantity is unspecified, they create"]},{"title":"a","paragraphs":["symbolic constant or"]},{"title":"a","paragraphs":["variable, respectively,"]},{"title":"to","paragraphs":["represent the missing quantity, and add the constant or variable to the property list of the object"]},{"title":"frame atom.","paragraphs":["A constant or variable is a"]},{"title":"GENGYM","paragraphs":["atom which is added to the list of objects in the model; it has property list values which tell the canonical object frame it is associated with, the quantity it measures (e.g.,"]},{"title":"TENSION),","paragraphs":["the units (e.g.,"]},{"title":"LB),","paragraphs":["and whether it is a constant or variable. There are seven canonical object types in the present system:"]},{"title":"LEVER, WEIGHT, SPRING, PIVOT, ROPE, SURFACE,","paragraphs":["and"]},{"title":"FORCE.","paragraphs":["The simplest, the"]},{"title":"PIVOT and SURFACE","paragraphs":["frames, do not require any attributes. A"]},{"title":"WEIGHT","paragraphs":["is required"]},{"title":"to","paragraphs":["have"]},{"title":"a","paragraphs":["weight; if absent, a constant is generated for it. A SPRING or ROPE must have a"]},{"title":"TENSION","paragraphs":["(variable); a"]},{"title":"SPRING","paragraphs":["must also have a"]},{"title":"STRETCH","paragraphs":["(variable) and"]},{"title":"CONSTANT","paragraphs":["(constant). [The type of symbol generated for each quantity if it is"]},{"title":"unspecified","paragraphs":["is given in parentheses.] A"]},{"title":"SPRING","paragraphs":["or"]},{"title":"ROPE","paragraphs":["must have a"]},{"title":"LENGTH","paragraphs":["(constant) only if"]},{"title":"it","paragraphs":["is attached to more than one object."]},{"title":"CKROTATION","paragraphs":["is called to check and disambiguate the orientation of a"]},{"title":"SPRING or ROPE,","paragraphs":["and"]},{"title":"DISAMLOCS","paragraphs":["is called"]},{"title":"to","paragraphs":["disambiguate locations; these functions are described below. A"]},{"title":"FORCE","paragraphs":["frame is required to have a11 orientation; if. absent, an orientat,ion of zero is assumed. A"]},{"title":"LEVER","paragraphs":["(actually, rigid body) frame is required to have"]},{"title":"a IXNGTH","paragraphs":["(consttint). If a width"]},{"title":"is","paragraphs":["specified (as in the case of the door in (P9)), it is used"]},{"title":"in","paragraphs":["~nnki~lg the geometric size vector; otherwise, n"]},{"title":"width","paragraphs":["of zero is assumeci. Unless"]},{"title":"n LEVER","paragraphs":["is oriented vertically, it"]},{"title":"is","paragraphs":["required to"]},{"title":"be","paragraphs":["attached at more than one point; if it is not, a"]},{"title":"PIVOT","paragraphs":["object is created and attached to a point similar to the existing attachment point. Thus, in a problem such as \"What force is needed to lift one end of [a beam]\""]},{"title":"(PI","paragraphs":["0): n pi\\rot is created to hold up the ather end of the beam while one end is being lifted."]},{"title":"IIISAMLOCS","paragraphs":["is called for"]},{"title":"a LEVER","paragraphs":["frame to disalnbiguate its locations."]},{"title":"The function MFPEIISON, which makes a","paragraphs":["frame for a"]},{"title":"PERSON,","paragraphs":["esnmines* the contest to determine whether to model the"]},{"title":"PERSON","paragraphs":["ns a"]},{"title":"WEIGHT","paragraphs":["or as (1"]},{"title":"PIVOT. If","paragraphs":["the"]},{"title":"PERSON","paragraphs":["is supported by something or supports somethi~lg, a"]},{"title":"WEIGHT","paragraphs":["or"]},{"title":"PIVOT","paragraphs":["model is used, respectively: Otherwise, the objects the person is attached to are examined to see whether they support something or are sup~orted. A person is assumed to be supported by an object which is supported, and to support an object which supports something. (A function to"]},{"title":"infer","paragraphs":["support relationships based on \"usual\" relationships and a more careful examination of the known relations of objects in the problem would not be too difficult,"]},{"title":"and","paragraphs":["would give correct answers in more general cases than the above heuristic can handle,)"]},{"title":"CKROTATION","paragraphs":["examines an object to see if its orientation is specified by a relative rotation, as in \"the rope on the left end makes an angle of 45 degrees with the horizontal\" (P4)."]},{"title":"If","paragraphs":["so, the relative rotation is oo~~vertecl to an absolute rotation."]},{"title":"1x1","paragraphs":["addition,"]},{"title":"the","paragraphs":["objects to which the specified object is attached are examined to see"]},{"title":"if","paragraphs":["a similar object is attached to one of them with a relative rotation; if so, the rotation of the other object is made absolute in a direction symmetrical to that of the first object. This insures that if an object is hanging from two ropes, for example, the orientations of"]},{"title":"the","paragraphs":["ropes will be made symmetrical: Right Wrong"]},{"title":"DISAMLOCS","paragraphs":["disambiguates locations by assigning specific locations on an"]},{"title":"object","paragraphs":["to location frames which were originally specified by ambiguous location names. The ends of a bar, for example, may be specified by \"one end"]},{"title":". . .","paragraphs":["the other end\". \"the left end"]},{"title":". . :","paragraphs":["the other end\", \"ends (A) and"]},{"title":"(B)\",","paragraphs":["and so forth. These locations must be assigl~etl"]},{"title":"to","paragraphs":["specific locations on the object so that geometric positions"]},{"title":"can","paragraphs":["he computed. DISAMLOCS First assigns location names to locations which have specific"]},{"title":"SELECT","paragraphs":["modifiers; the appropriate"]},{"title":"SELECT","paragraphs":["motlifiess and correspontling absolute location llames are specified"]},{"title":"as","paragraphs":["part of the"]},{"title":"GEOMOIIIGL","paragraphs":["of' the object. thus,Ì‚location with the name"]},{"title":"END","paragraphs":["and the modifier"]},{"title":"(SEI,ECT I,EFT)","paragraphs":["is assigned the absolute location name"]},{"title":"LEFTEND.","paragraphs":["After those locations which have specific"]},{"title":"SELI3CT","paragraphs":["values have been assigned, the remainilig locations are given unique absolute location names; thus, \"the other end'' would be given the absolute name"]},{"title":"RlGHTENL)","paragraphs":["if it appeared with \"the left"]},{"title":"end\".","paragraphs":["Absolote location names are propagated to locatiolls relative to named locations (e.g., \"2 m from the right end\" (P4)) by the fut~ction"]},{"title":"RENAMELOC. 5.3","paragraphs":["Geometric Model Construction","After a canonical object frame has been made for an object, its geolnetric size and (frequently) its absolute rotation are known, and absolute location names are assigned to all of its locations."]},{"title":"his","paragraphs":["information is sufficient to construct a geometric model of the problem in which absolute locations (coordinates which are numeric or composed of expressions involving constants or variables) are assigned to each object and (implicitly) to all of its locations. The geometric model is two-dimensional. The position of an object is completely specified by three quantities: the coordinates of its starting poinF, its rotation relative to its standard orientation, and its geometric"]},{"title":"size. The GEOMODEL","paragraphs":["of the object gives the coordinates relative to the starting point f~r each"]},{"title":"named","paragraphs":["absolute location. The geometric position of a named point on the object"]},{"title":"can be found","paragraphs":["by taking the coordinates of the point relative to the starting point, scaling this vector by"]},{"title":"the","paragraphs":["geometric size, rotating it"]},{"title":"by","paragraphs":["the object's rotation, and adding the resulting vector to the geometric coordinates of the starting point. This process is illustrated in Figure 5.1. The vector V, which is the position of the point P relative to the starting point"]},{"title":"S","paragraphs":["in the"]},{"title":"GEOMODEL","paragraphs":["of the object, is scaled"]},{"title":"m","paragraphs":["the appropriate geometric size and rotated through the angle"]},{"title":"6","paragraphs":["to give the vector V'. Adding V' to St, the geometric starting point of the object in the problem, yields Pt, the coordinates of the point corresponding to the point"]},{"title":"P.","paragraphs":["Once an object has been added to the geometric model by specifying values for its"]},{"title":"GSTART,","paragraphs":["GSIZE, and"]},{"title":"ROTN","paragraphs":["(rotation), the geometric coordinates for any location on the object may be obtained by calling the funtion"]},{"title":"EXECLOCA","paragraphs":["with the location frame as an argument. If the location specifies a position relative to a named location,"]},{"title":"EXECLOCA","paragraphs":["calls itself to find the position of the named locatiotl. A relative position vector of the appropriate size is created and added to the geometric position of the named point to give the position of the relative point. The direction of the relative position vector is taken as the direction of a vector from the named point toward the center"]},{"title":"of","paragraphs":["gravity of the object; if the named point is the center of gravity, the direction"]},{"title":"of","paragraphs":["the rotated x-axis of the object is used. Construction of the geometric model"]},{"title":"is","paragraphs":["performed by the function"]},{"title":"EUCLID.","paragraphs":["When"]},{"title":"EUCLID","paragraphs":["is initiated, every object has a geometric size (in terms of length units, e.g., meters) specified under the property list indicator GSIZE. The GSIZE of each object is recomputed by dividing each component by the corresponding scale factor (stored under the indicator FRMSCL) for the"]},{"title":"GEOMODEL","paragraphs":["of the object. After this has been done, a relative position vector from the GEOMODEL can be multiplied by the object's GSIZE to yield the corresponding vector in length units. The geometric model is built up by repeatedli adding objects which are attached to objects which are already part of the model. (The first object is selected arbitrarily and assigned a starting point of (0 O).) In order to add the object to the model, its rotation must be determined."]},{"title":"If","paragraphs":["the rotation is unspecified. the futlction TRITEST"]},{"title":"is","paragraphs":["called to test whether the abject is part of a triangle; if so, its rotation is computed by the function TRIANGLE. Otherwise, the \"tlormal\" rotation for the object, or zero, is assumed. Given the rotation and geometric size of the object, its starting point f S S' GEOMODEL of Object Object as it appears in problem Figure 5.1: Finding Relative Position on an Object < can be calculated from a point of"]},{"title":"attachment","paragraphs":["to"]},{"title":"an","paragraphs":["object which is already in the model."]},{"title":"Tlle","paragraphs":["coordinates of the pomt are calculated for the object in the model, and for the new object assuming a starting point of zero; subtracting the latter vector from the former yields the starting point for the new object."]},{"title":"This","paragraphs":["is illustrated"]},{"title":"in","paragraphs":["Figure 5.2, where the new object"]},{"title":"02","paragraphs":["is to be added to the model based on its attachment to the existing object"]},{"title":"01","paragraphs":["at point"]},{"title":"P.","paragraphs":["The coordinates of the point"]},{"title":"P","paragraphs":["in the geometric model are computed, and the vector V2 is calculated by finding the coordinates of"]},{"title":"P","paragraphs":["relative to 02"]},{"title":"with 52","paragraphs":["assumed to"]},{"title":"bB","paragraphs":["zero. Subtracting Vp from the geometric model coordinates of"]},{"title":"P","paragraphs":["gives the geometric coordinates of the new starting point, Se. After the starting point of the new object has been determined, the coordinates of all of its attachment points are computed and saved. Any objects to"]},{"title":"which","paragraphs":["it is attached which are not part of the model or on the waiting list are added to the waiting list. Finally, the"]},{"title":"next","paragraphs":["object from the waiting list is selected to be added to"]},{"title":"the","paragraphs":["geometric model. When the waiting list has been emptied, the model is complete."]},{"title":"If","paragraphs":["three objects are attached to each other so that they form a triangle, it will generally be necessary to solve the triangle for one or more sides and angles in order to properly construct the geometric model. Since the triangle may be implicitly specified by specifying the attachments of the three objects, it is necessary to test object,s which have a finite size to see if they are part of a triangle; this test is performed by the function"]},{"title":"TRITEST.","paragraphs":["Given an object A, TRITEST looks for objects"]},{"title":"B","paragraphs":["and"]},{"title":"C","paragraphs":["such that.A is attached to"]},{"title":"B and C","paragraphs":["and B is attached to C; if such a set of objects is found,"]},{"title":"TRITEST","paragraphs":["returns a list of the three objects as its value. This list may then be used as the argument","C 1"]},{"title":"Figure","paragraphs":["5.2: Calculating the Starting Point for a"]},{"title":"New","paragraphs":["Object 4 *","for the function TRIANG1,E. Given a list of three objects which are attached so that thev form a trinngle, the function"]},{"title":"TRIANGIX","paragraphs":["attempts to solve the triangle to find the unknowtl sidcs and angles. Since a triangle is solvnble given three sidcs, two sides and an angle, or a side and two angles, there are u number of ways in which the known data for a solvable triangle may be present."]},{"title":"TRIANGLE","paragraphs":["first enumertltes the kno~\\w data for the three objects in the order in which they are given. The funct,ion GDIST cnlculntes the geometric distance bet~veen the two nttauhment points for each object. The function GANGLE conlputes the angle between two objects whose rotations are known."]},{"title":"(GANGLE","paragraphs":["as itnplerne~lted does not 11nndle all possible riiscs, but it would be fairly straightforward to malte it do so.) Lists are made of the sides and angles, and a tsanskr is made to the appropriate subsection based bn the types of known quantities. (Only the section for solvillg triangles for which two sides and an angle are given is coded, but provision is made for the other sections.) The triangle is \"normalized\" by circularly shifting the order of the sides so that the single known quantity (e.g., the known angle) is"]},{"title":"in","paragraphs":["the first position; this makes it relatively easy to test for the remaining unknown and","solve the .5","triangle. After all unknowns have been found, the triangle is un-normalized by shifting back to the initial order of the objects, and the newly found information is transferred to the objects which comprise the triangle. In the case of computed angles, the function DEFANG defines the rotation of the object based on the angle it makes with other objects in the triangle. The geometry found in elementary physics problems is usually fairlv simple; the solution of a triangle is the ~mst difficult geometric problem which is typically found."]},{"title":"EUCLID","paragraphs":["and its subroutines solve such problems in a general way which is based on legitimate geometric rules, rather than on \"canned\" forn~ulas which work for particular problems but are not true in general. Geometric programs like EUCLID {but much more sophisticated) might be of great benefit to scientists and engineers for A solving problems in geometry, just as symbolic manipulation packages are now used to aid in solving algebraic problems. Although the present program does not do so, it would be easy to generate a geometric diagram, similar to the \"force diagrams\" often found in physics texts, from the geometric model of the problem. Such a diagram would be useful if a program similar to ISAAC were to be used for computer-assisted instruction in physics. 5.4 Frame Completion After the geometric model has been completed, the function CFDRIVER is called to complete the cauonical object frame for each object. Since the canonical object frame has already been selected for each object, CFDRIVER simply calls the frame-completion routine associated with the canonical frame for each object. The primary operation performed during frame complctioh is the completioxl of attachment relations by associating appropriate force vectors for each object ~vit 11 the attachment frame. In some cases, the geometric model is* requlred in comp~lti~lg the force vectors. The function CMPA'I'T, which is used for LEVER and PIVOrI' frames, associates a two-variable f~rce vector with each attachment for which the force vector is unspecified. (A separate force vector is added to an attachment frame for each object which is dttached there.) The forces exerted by the object and t,hc geometljic position of the point at which each force is exerted are collected and saved on the 111y)prrty list of the object under the indicator FORCES. For a LEVER frame, the location of a PIVOT attached to it is noted if there is one. The function MKWTFRC makes a weight f@>rec, exerted on the object at its center of gravity, for a lever ob,ject if it has a weight.","In the case of a WEIGHT object, the weight of the object (which must exist since the frame creation routine requires it) ismed to make a downward force vector. This vector is inserted directly into the attachment frame.","In the case of a spring (or rope), the force exerted by the spring is equal to the tension"]},{"title":"in","paragraphs":["the spring"]},{"title":"and","paragraphs":["directed from the end of the spring toward its center. ~h;s law is so \"obvious\" that it is almost never st~ted in a physics text; nevertheless, it is w physical law of the SPRING and ROPE canonical objects, and is necessary to solve the problems. The frame completion routine for SPRINGS and ROPES calculates the unit vwtor from each attachment point to the center of the object. Each component of the hnit vector is mul.t.iplied by the tension, and the resulting force vector is put into the attachment frame.","A FORCE may be specified as a two-component force vector, or in magnitude and direction form. If the vector form is specified, it is used directly. If the xnagnitude and direction are used, they are .converted to vector form for use in the attachment relation.","A SURFACE is assumed to be a \"smooth\" surface as found in physics texts: that is, it can only exert a force perpendicular to the surface. The unit vector perpendicular to the surface is calculated and multiplied by a single force variable to give the force veetor.","Once the canonical object frame for each object has been completed, the problem model is ready to be turned over to the problem solver. 5.5 Conclusion The processes of frame selection, geometric model construction,"]},{"title":"and","paragraphs":["frame completion which were described in this chapter are relatively simple processes: yet. they are crucial for solving physics problems. We shall argue that selecting and completing canonical object frames is a primary skill which is taught in a physics class, that this skill is taught mostly by example rather than explicitly, and that failure to learn the skill from the examples is what causes people to be \"bad\" at physics."]},{"title":"6. Problem Solving Problem solving, as described in this chapter, is the process of writing equations which describe","paragraphs":["the"]},{"title":"interactions of objects according","paragraphs":["to"]},{"title":"well-known","paragraphs":["physical"]},{"title":"laws, solving these equations for the deqired unknowns, and printing the answer in the desired form. Compared to the processes","paragraphs":["of'"]},{"title":"language understanding and frame construction which precede it, the problem solvix~g process seems very simple: it consists mostly of elementary algGbra, which is well understood. 6.1 Generation of Equations Some equations may have been generated directly in Eesponse to statements in the prablem, e.g. \"the man supports twice as much as","paragraphs":["the"]},{"title":"boy\" (P7). Any existing equations such as these are passed to the equation solver, SOLVEQ, at the beginning of the problem solving process. The remaining equations","paragraphs":["are"]},{"title":"generated and solved","paragraphs":["by"]},{"title":"the functions ATTDRIVER and PSOLVER. ATTDRIVER writes equations for eqch attachment relation according to","paragraphs":["the"]},{"title":"physical law that","paragraphs":["the sum of"]},{"title":"the","paragraphs":["x"]},{"title":"forces","paragraphs":["and the sum"]},{"title":"of","paragraphs":["the y"]},{"title":"forces","paragraphs":["must each be"]},{"title":"zero for a b~dy in static equilibrium. The x and","paragraphs":["y"]},{"title":"components of each force involved in the attachment are added to two accumulators using the function SPLUS (symbolic PLUS);.two equations are then written setting each","paragraphs":["of the"]},{"title":"accumulators","paragraphs":["equal"]},{"title":"to zero, and the equations are used as arguments in calls to SOLVEQ. These equations are generally quite simple, and result in a numeric value for a variable","paragraphs":["or"]},{"title":"a substitution equation which allows","paragraphs":["one"]},{"title":"variable","paragraphs":["to"]},{"title":"be rewritten as","paragraphs":["a"]},{"title":"function of another. The following equations from the set generated for (P4) are typical of the types of equations generated","paragraphs":["by"]},{"title":"ATTDRIVER: (EQUALS 0 FORCE179) (EQUALS","paragraphs":["0"]},{"title":"(PLUS","paragraphs":["-100"]},{"title":"FORCE180)) (EQUALS","paragraphs":["0"]},{"title":"(PLUS (TIMES TENSION173","paragraphs":[",7071 )"]},{"title":"FORCE175)) The first","paragraphs":["two"]},{"title":"equations give numerical values for","paragraphs":["the"]},{"title":"variables, and","paragraphs":["the"]},{"title":"last equation allows FORCE175 to be expressed as","paragraphs":["a"]},{"title":"function of TENSIONl'i3, thus reducing the number of active unknowns","paragraphs":["by"]},{"title":"one. The function PSOLVER calls the problem-solving functions which are associated with some canonical object frames","paragraphs":["to"]},{"title":"write equations","paragraphs":["for objects"]},{"title":"of that","paragraphs":["t-ye and"]},{"title":"solve","paragraphs":["them. The"]},{"title":"objects which","paragraphs":["have"]},{"title":"desired unknowns associated with","paragraphs":["them are"]},{"title":"selected first, followed by objects","paragraphs":["which"]},{"title":"involve other unknowns. After a problem-solving function","paragraphs":["has"]},{"title":"been called for","paragraphs":["an"]},{"title":"object,","paragraphs":["a test is made"]},{"title":"by TESTSOL to","paragraphs":["see"]},{"title":"whether values have been found for all of the desired unknowns; if-so, PSOLVER","paragraphs":["returns, without requiring that values be found for the other variables. In the present"]},{"title":"system,","paragraphs":["there are problem-solving functions for"]},{"title":"SPRING","paragraphs":["and"]},{"title":"LEVER","paragraphs":["cauonical objects."]},{"title":"SOLVESPRING","paragraphs":["generates a single equation"]},{"title":"for","paragraphs":["the spring law, which states"]},{"title":"that","paragraphs":["the tension on"]},{"title":"a","paragraphs":["spring is equal to"]},{"title":"the","paragraphs":["spring constant times the distance the spring"]},{"title":"is","paragraphs":["stretched."]},{"title":"The","paragraphs":["other laws which apply to a spring, namely"]},{"title":"that","paragraphs":["the"]},{"title":"sum of the","paragraphs":["forces exerted on it must"]},{"title":"be","paragraphs":["zero (in static equilibrium) and that"]},{"title":"the","paragraphs":["force exerted by the spring"]},{"title":"is directed","paragraphs":["from the end*of the spring toward"]},{"title":"its","paragraphs":["center, are"]},{"title":"made","paragraphs":["true implicitly by the way"]},{"title":"the","paragraphs":["force vectors are generated by the frame completion routine for springs."]},{"title":"SOLV$LEVER","paragraphs":["generates the"]},{"title":"three equations,","paragraphs":["which govern"]},{"title":"a rigid body in","paragraphs":["static equilibrium, namely that the sums"]},{"title":"of","paragraphs":["forces"]},{"title":"(in the x and","paragraphs":["y directions) must be"]},{"title":"zerb","paragraphs":["and"]},{"title":"that the sum","paragraphs":["of moments on the body must be zero."]},{"title":"If a PIVOT","paragraphs":["object attached to"]},{"title":"the LEVER","paragraphs":["was found"]},{"title":"by","paragraphs":["the frame completion routine for the"]},{"title":"LEVER,","paragraphs":["the pivot point"]},{"title":"is","paragraphs":["chosen as the point around which moments are summed; otherwise, a point"]},{"title":"whose","paragraphs":["position is known and which has one"]},{"title":"or","paragraphs":["more unknown forces exerted there is chosen. The number of equations generated for a single problem is surprisingly"]},{"title":"large: between","paragraphs":["seven and thirteen equations per problem, with an average of about ten equations per problem. For"]},{"title":"a","paragraphs":["reasonably skilled"]},{"title":"human","paragraphs":["problem solver, all of our sample problems can be solved using two equations except for (P4), which requires three. This large discrepancy suggests that the human problem solver performs a number of steps (which become largely subconscious with practice) to reduce the number of equations which must"]},{"title":"be","paragraphs":["written. Some equations, such as those involving"]},{"title":"horizontal forces","paragraphs":["in a problem where all the significant forces are vertical,"]},{"title":"are","paragraphs":["simply ignored. Others,"]},{"title":"such","paragraphs":["as our attachment equations, are eliminated by substitution of variables which is done mentally. Since these processes are largely subconscious in a skilled person, it may be difficult to teach them to a person who is unable to acquire the"]},{"title":"skill by","paragraphs":["watching the solution of example problems. A program such as"]},{"title":"ISAAC,","paragraphs":["which makes"]},{"title":"all","paragraphs":["of"]},{"title":"the","paragraphs":["steps explicit, might be useful for teaching physics to such persons. 6.2 Equation Solving The equations which are generated to describe the interactions of objects in"]},{"title":"the","paragraphs":["model"]},{"title":"of","paragraphs":["the problem are solved by a set of routines for simplifying expressions and solving linear equations. This"]},{"title":"small","paragraphs":["symbolic manipulation package is fairly primitive compared to the state of the art"]},{"title":"in","paragraphs":["symbolic manipulation. Much more powerful packages exist, such as"]},{"title":"MACSYMA","paragraphs":["[Moses 741; a more powerful program"]},{"title":"for","paragraphs":["soJxring physics problems could easily be interfaced to such a system (as was Charniak's"]},{"title":"CARPS program),","paragraphs":["allowing problems involving more complex mathematics to be solved. Equations are solved by the method of substitution, that is, by expressing one variable as a function of another variable and substituting this fur~ction for the variable when it occurs in other equations. Since this reduces the number of active variables by one, the process can be repeated until"]},{"title":"a","paragraphs":["value is found for sollle variable,"]},{"title":"This","paragraphs":["value"]},{"title":"can","paragraphs":["then be substituted illto the f~~x~ctiot~s to calculate the values"]},{"title":"of","paragraphs":["other variables, and 80 forth until values have been calculated for all of the variables. This method is the one generally used by humans for solving simple equations. For equations"]},{"title":"as","paragraphs":["simple as those generated for our sample problems, the method works well and is reasonably efficient; for more complex equations, other methods (such as Gaussian elimination) would be needed. Equations are written using the five functions SPLUS, SMINUS, SDIFF, STIMES,"]},{"title":"and SQUOT.","paragraphs":["These functions perform some elementary simplifications on their arguments when possible; for example, (SPLUS 0 x) = x, where"]},{"title":"x","paragraphs":["is any expression."]},{"title":"If","paragraphs":["no simplification is possible, these functions construct a prefix subexpression using the corresponding LISP function name. The function SIMPLIFY may be used to simplify an expression (not necessarily an equation) by operations such as removing double negations, combining constant factors of a variable, and so forth. SIMPLIFY is used in making the geometric model as well as in the problem solving process. The function SIMVECT simplifies a vector by callihg SIMPLIFY for each component. The function COPYSUB copies an expression, substituting the VALUE of"]},{"title":"each","paragraphs":["variable (gotten from its property list) for the variable if the value is defined. Such a value may be either numeric value or a substitution function in terms of another variable."]},{"title":"SOLVEFOR","paragraphs":["solves an equation for a given variable. which should occur only once in the equation. This is easily done by finding a path from the root of the tree representing the equation to the desired variable. Inverse operations are then generated along this path to bring the desired variable to the top. For example, to solve the equation (EQUALS A (TIMES"]},{"title":"B","paragraphs":["C)) for"]},{"title":"C,","paragraphs":["we generate the inverse operation QUOTIENT to obtain (EQUALS"]},{"title":"C","paragraphs":["(QUOTIENT A"]},{"title":"B)). A","paragraphs":["similar process is easily applied to an arbitrarily large expression. The function LISTVC examines an expression and const'ructs a list of all the variables and constants used in the expression and the number of times each symbol appears. This list is used by SOLVEQ to guide the equation solving process. The function SETEQUAL is used to define the value of a variable based on an equation. The equation is solved for the value of the variable using SOLVEFOR; this value is put on the variable's property list under the indicator"]},{"title":"VALUE.","paragraphs":["The value is then substituted in the value expression for each variable whose value is expressed as"]},{"title":"a","paragraphs":["function of the variable just defined; a list of all such variables is stored on the property list of the variable under the indicator"]},{"title":"USEDIN.","paragraphs":["For each such variable,"]},{"title":"COPYSUB","paragraphs":["is used to copy its value, substituting the new value of the variable just defined. The resulting expression is made into an equation, and"]},{"title":"SETEQUAL","paragraphs":["is called"]},{"title":"again","paragraphs":["(recursively) to define the new value of the variable."]},{"title":"In","paragraphs":["this way, a new definition of a variable is propagated to all the variables whose values are dependent"]},{"title":"on","paragraphs":["it. Since"]},{"title":"the new","paragraphs":["definition of a variable may make some saved equations solvable, each equation"]},{"title":"on","paragraphs":["the list"]},{"title":"EQUATIONS","paragraphs":["is copied using"]},{"title":"COPYSUB; SOLV~Q","paragraphs":["is then called to solve the resulting equation."]},{"title":"SOLVEQ","paragraphs":["attempts"]},{"title":"to","paragraphs":["solve"]},{"title":"an","paragraphs":["equation; if"]},{"title":"it","paragraphs":["succeeds, the results"]},{"title":"are","paragraphs":["propagated to related equations and variables, which may lead to the solution of additional equations."]},{"title":"SOLVEQ","paragraphs":["first uses"]},{"title":"COPYSUB and SIMPLIFY","paragraphs":["to substitute values"]},{"title":"for","paragraphs":["any variables whose values are known or defined in terms of other variables"]},{"title":"and simplify the","paragraphs":["resulting expression."]},{"title":"LISTVC","paragraphs":["is then"]},{"title":"called","paragraphs":["to"]},{"title":"list the","paragraphs":["number"]},{"title":"of","paragraphs":["constants and variables in the expression and the number of times each occurs. If there are"]},{"title":"more than two","paragraphs":["variables, the equation is considered temporarily unsolvable and is put"]},{"title":"on","paragraphs":["the"]},{"title":"EQUATIONS","paragraphs":["list."]},{"title":"If","paragraphs":["there"]},{"title":"is","paragraphs":["only one variable in the equation,"]},{"title":"SETEQUAL","paragraphs":["is called to define the value of the variable based on the equation;"]},{"title":"SETEQUAL","paragraphs":["will propagate the consequences of this definition, possibly causing"]},{"title":"SOLVEQ","paragraphs":["to be called again."]},{"title":"If the","paragraphs":["equation involves two variables, an attempt is made to solve for one variable in terms of the other."]},{"title":"(If","paragraphs":["both variables occur more than once in the equation, it is"]},{"title":"saved on the EQUATIONS","paragraphs":["list). After defining one variable"]},{"title":"as a","paragraphs":["function of the other and adding it to the"]},{"title":"USEDIN","paragraphs":["list of the other, the new value of the variable"]},{"title":"is","paragraphs":["propagated to all members of its"]},{"title":"USEDIN","paragraphs":["list, which is then set to"]},{"title":"NIL.","paragraphs":["The propagation"]},{"title":"is","paragraphs":["done by using"]},{"title":"COPYSUB","paragraphs":["and"]},{"title":"SIMPLIFY","paragraphs":["on"]},{"title":"the","paragraphs":["value of each variable"]},{"title":"on the USEDIN","paragraphs":["list to substitute the value of the new variable, then adding the variable"]},{"title":"to the USEDIN","paragraphs":["list of the other variable in the equation. Thus, for example, if a were"]},{"title":"defined in","paragraphs":["terms of b as a"]},{"title":"= f(b)","paragraphs":["and"]},{"title":"b was","paragraphs":["then redefined as b"]},{"title":"= g(x),","paragraphs":["we would redefine a as a = f(g($) and put both a and"]},{"title":"b","paragraphs":["on the"]},{"title":"USEDIN","paragraphs":["list for i.'~f theaewly defined variable is used in any of the equatibns on the EQUATIONS list, the new value"]},{"title":"is","paragraphs":["substituted using"]},{"title":"COPYSUB,","paragraphs":["and"]},{"title":"SOLVEQ","paragraphs":["is called recursively to attempt to solve the resulting equation."]},{"title":"The","paragraphs":["time required"]},{"title":"to","paragraphs":["solve a set of equations varies, but typically is about one second (using interpreted LISP on a"]},{"title":"CDC","paragraphs":["6600) for our sample problems. 6.3 Answer Generation Once the values"]},{"title":"of","paragraphs":["the desired unknowns have been calculated, answer generation is fairlyeasy. The name of an answer-generation routine rind the object to be used as its argument are saved (for each part of the answer) on the list SYSREPLY in response to"]},{"title":"the","paragraphs":["question asked"]},{"title":"in","paragraphs":["the problem statement."]},{"title":"The","paragraphs":["functiot~"]},{"title":"PRTSOL","paragraphs":["evaluates each"]},{"title":"of the","paragraphs":["members"]},{"title":"of this list","paragraphs":["in turn, putting commas between the"]},{"title":"generated","paragraphs":["answers."]},{"title":"PRTVAR","paragraphs":["prints the value of"]},{"title":"a","paragraphs":["variable and the wits associated with it,"]},{"title":"If","paragraphs":["the answer"]},{"title":"is","paragraphs":["an expression which contains constants, the f~ilnction"]},{"title":"EXPLCON","paragraphs":["is called to explain"]},{"title":"each","paragraphs":["constant."]},{"title":"EXPLCON","paragraphs":["gets the object with which the constant"]},{"title":"is;","paragraphs":["associated and the attribute which it measures from the constant's property list, and outputs these in"]},{"title":"a","paragraphs":["standard format, e.g., \"where"]},{"title":"1 ENGTH'iG","paragraphs":["is the length of the pole''"]},{"title":"(P2). EXPLCON","paragraphs":["is called by"]},{"title":"most","paragraphs":["of"]},{"title":"the","paragraphs":["answer generation routines if the answer"]},{"title":"is","paragraphs":["an expression involving constants."]},{"title":"PRTFV","paragraphs":["prints the two compo~lellts"]},{"title":"of a force","paragraphs":["vector in parerrtheses, separated by"]},{"title":"a","paragraphs":["comma."]},{"title":"PRTMAG","paragraphs":["and"]},{"title":"PRTDIR","paragraphs":["compute and print the magnitude and direction, respectively, of a force vector."]},{"title":"PRTLOC","paragraphs":["generates a description of a location; typically, a location which is the object of a question will be represented as a point which is a certain distance from a known point, with the distance an unknown."]},{"title":"PRTLOC","paragraphs":["pri~nts the distance from the known point, then generates a description of it. If the known point has a name, the name is printed following the location name, as in \"end (A)\"; if it has a meaningful SELECT modifier, the modifier is printed with the location name, as in \"tha heavy end\". Otherwise, an attempt is made to find an object which is attached at the known point; if such an object is found, it is used to describe the location, as in \"7.4"]},{"title":"Et","paragraphs":["from the boy\""]},{"title":"(P7)*","paragraphs":["All of the answer generation functions comprise about two pages of LISP code, compared to 44 pages of code for input parsing and semantics. Language generation to describe the answers to physics problems is a relatively easy task, since the \"objects\" to be described are so simple. [Simmons and Slocum 721 describe a method for generating fairly complex sentences using semantic networks and an ATN grammar."]},{"title":"7. Picture Construction The process of constructing a picture from the internal model of the problem is in many ways similar to the process of constructing the geometric model of the problem; however, there are some significant differences. While a WEIGHT object is represented as a point in the geometric model, it must be drawn a,t a reasonable size. A size must","paragraphs":["be"]},{"title":"chosen for each object whose size is a symbolic constant, and relative pusitions on the object must be scaled accordingly. The size of the picture must be scaled to","paragraphs":["the space"]},{"title":"available for the drawing, independent of the size of the objects in the problem. Construction of a picture is done in two stages. First, a picture model is constructed, specifying the position and size of each object. From this model, global offsets and","paragraphs":["a"]},{"title":"scale factor are computed to properly scale and position the picture withirl the drawing area. Finally, picture generation functions are. called to generate each object in the picture.","paragraphs":["7.1"]},{"title":"Constructing the Picture Model The picture model for the problem is constructed by the function DIAGRAM. Each object in the picture is assigned a starting point and","paragraphs":["a"]},{"title":"size, which are stored under the property list indicators STVAL and PSIZE, respectively. The rotation, stored under the indicator ROTN, is the same","paragraphs":["as"]},{"title":"for the geometric model. A set of objects arranged in a picture is represented","paragraphs":["by"]},{"title":"a \"picture frame\", or PFRAME, consisting of a set of minimum and maximum x and y values which bound all 6f the objects in the picture, and a list of the objects in the picture frame..The starting point value for each object is relative to its picture frame set. Two picture frame sets niay be combined by specifying the coordinates relative to each","paragraphs":["of"]},{"title":"a point which is to be made common tcr both. A new","paragraphs":["set"]},{"title":"of bounds is computed, and objects from one picture frame set are incorporated into the oiher by adjusting their starting points and adding them to the object list of","paragraphs":["the"]},{"title":"other picture frame set. DIAGRAM first calls the function PICSCALE to determine the picture scaling factor for each object. Some objects are scaled according to the value of a certain attribute: poles according to their length, weights according to their weight, springs according to their spring constant, and so forth. If such an attribute is defined for an object and the attribute has a numerical value, the attribute name and value are saved on the property list","paragraphs":["of"]},{"title":"the object under the indicator SIZEDET. In addition, PICSCALE keeps a list of the different attributes and the maximum value found for each attribute. This list and the saved SIZEDET value are used later to determine the scale factor to be used","paragraphs":["for each object in the picture."]},{"title":"If R","paragraphs":["scaling attribute is not specified for an object"]},{"title":"or is not","paragraphs":["defined as a numeric value,"]},{"title":"a","paragraphs":["test"]},{"title":"is","paragraphs":["l~lade"]},{"title":"to","paragraphs":["see"]},{"title":"if","paragraphs":["there is"]},{"title":"n","paragraphs":["special Rinctidx~ to determine"]},{"title":"the","paragraphs":["scaling factor for the object:"]},{"title":"such","paragraphs":["fut~ctiotls exist for"]},{"title":"FOIiCE","paragraphs":["i~nd ri8id body objects."]},{"title":"PSIZEFORCE","paragraphs":["computes the magnitude"]},{"title":"of t~","paragraphs":["two-rompdnent forre vector and returns this value"]},{"title":"as","paragraphs":["the scaling"]},{"title":"factor.","paragraphs":["I11 additicln,"]},{"title":"it","paragraphs":["computes the rotation of the force vector and storus this 011 the force object's property list under the indicator"]},{"title":"ROTN. PSIZERB","paragraphs":["is used to compute the scaling factor for rigid body objects, includillg both"]},{"title":"SURFACE and LEVER","paragraphs":["objects. The attachment points of the object are esamined."]},{"title":"If","paragraphs":["the attachment goints"]},{"title":"have","paragraphs":["ntimcric geonletric posit ions, then the largest distance"]},{"title":"in","paragraphs":["the x or"]},{"title":"y","paragraphs":["directions between two"]},{"title":"att~chrnent","paragraphs":["points"]},{"title":"is","paragraphs":["used 8s a"]},{"title":"LENGTH","paragraphs":["srnlc"]},{"title":"factor. Thus,","paragraphs":["in the picture for (PX), the uilspecified length of the vertical wall"]},{"title":"is","paragraphs":["set equal to the distance between the rope and ladder which are attached to it."]},{"title":"If","paragraphs":["numeric values are not available for the attach~nent points, but there are some numerical relative positions, the minimum distance from the center of gravity of the object to its boundaries in the s direction is made equal to the maximum relative position offset: this guarantees that all of the relative positions will be drawn within the area of the object in the picture. Thus,"]},{"title":"in","paragraphs":["the picture for"]},{"title":"(P2O),","paragraphs":["the seesaw is made large emugh so that both boys are drawn as being on the seesaw, with their relative distances from the center in correct proportion."]},{"title":"If","paragraphs":["neither of the above methods can be used, the rnaxi~num dimension of the dra\\ving of the object is used as the scaling factor with the artificial attribute name"]},{"title":"CLENGTH. This","paragraphs":["will cause objects of unspecified size to be drawn at a size proportional to the unscaled size produced by their drawing programs. Once the picture scaling factors have been conlputed by"]},{"title":"PISCALE, DIAGRAM","paragraphs":["constructs the picture model in a manner similar to the way the geometric model is constructed by"]},{"title":"EUCLID.","paragraphs":["An initial object. is chosen arbitrarily to start the picture. Objects are added to the picture by combining a new object with the existing picture at a point of attachment between the new object and an object already in the picture. Objects which are attached to the new object but are not in the picture are added to the waiting list of objects to be added to the picture. The subroutines which are used in performing this process are described below."]},{"title":"MAKEPF","paragraphs":["is a function which makes a picture frame for a single object. In order to do so, it must compute the drawing size to be used for the object and a set of picture frame boundaries which will completely enclose the drawing of the object,. Some objects, such as a door or person, have special size computation routines; these are used to compute the size for an object if they are defined."]},{"title":"If","paragraphs":["a"]},{"title":"SIZEDET","paragraphs":["attribute and value were found for the object, its size is scaled in proportion to the rnasimurll value found for that attribute in the problem. (For some objects, such as"]},{"title":"WEIGHT","paragraphs":["objects, the picture could be made more realistic by using a special function to make the picture size proportional to, say, the square root of the weight proportion. This was done in an earlier version of the program, but"]},{"title":"is not","paragraphs":["in the present version.)"]},{"title":"If all else fails,","paragraphs":["the scale factor is set to one. The size computation routine for a doorbcomputes separate scale factors for the height and width of the door. The picture making function for a"]},{"title":"door draws a square, but with","paragraphs":["separate scale factors for the x and y coordinates; this allows a door to be drawn to scale for the specified width and height. The size computation routine for a person uses"]},{"title":"the SIZEDET","paragraphs":["value"]},{"title":"if it","paragraphs":["is available. Otherwise,"]},{"title":"a","paragraphs":["test"]},{"title":"is","paragraphs":["made to see if the person has"]},{"title":"a RESTRICT YOUNG","paragraphs":["modifier; if so, the size is"]},{"title":"reduced","paragraphs":["slightly."]},{"title":"Thus,","paragraphs":["in"]},{"title":"(P2) the","paragraphs":["boy is drawn slightly smaller than the man. If the size of an object is defined in terms of"]},{"title":"length,","paragraphs":["tho scale factor between length and picture site is computed and stored"]},{"title":"on","paragraphs":["the object's property list under the indicator"]},{"title":"PSCALE. The picture size","paragraphs":["(which"]},{"title":"is s","paragraphs":["vector, although in most cases only one component is used)"]},{"title":"is","paragraphs":["stored"]},{"title":"under","paragraphs":["the indicator"]},{"title":"PSIZE.","paragraphs":["The initial picture frame is computed by scaling"]},{"title":"the basic","paragraphs":["picture size (stored under the indicator"]},{"title":"FRMSCL","paragraphs":["in"]},{"title":"the GEOMODEL","paragraphs":["of the object) by"]},{"title":"PSIZE;","paragraphs":["the minimum values and'starting point are defined by convention to be (0 0)."]},{"title":"if","paragraphs":["the object is rotated,"]},{"title":"its","paragraphs":["picture frame is recomputed by"]},{"title":"ROTPF.","paragraphs":["This is done by computing the positions of the corners of the picture frame after rotation, and computing a new .frame which encloses all of these points."]},{"title":"Tbis","paragraphs":["process is illustrated in Figure 7.1."]},{"title":"As","paragraphs":["the figure shows, the-rotated picture frame may be somewhat larger than needed to contain the object. However, it is easily computed-in this manner, and is"]},{"title":"certain to be large enough.","paragraphs":["The"]},{"title":"only","paragraphs":["effect on the final drawing"]},{"title":"from","paragraphs":["a picture frame which is"]},{"title":"too large is","paragraphs":["to"]},{"title":"make","paragraphs":["the drawing slightly smaller than it might have been.","Figure 7.1: Computing Picture Frame for a Rotated Object >"]},{"title":"-","paragraphs":["After a picture frame has been made for an object by MAKEPF, DIAGRAM searches the attachment rclutions of the object to find a pbint at which it is attached to an object which is al~*eildy in the picture. Whrn such an attachment is found, PICTI,OC is called twice to find the position of the point of nttnchment on the new object relative to its picture frame and the point"]},{"title":"of","paragraphs":["attachment on the other o\\)ject relative to thc lurgcr picture frame. These two positions are then used in a rill1 to"]},{"title":"COMPFHM","paragraphs":["to combine t ha new object's picture frarl-le into the total picture fra111~ which is being r\\onstrwtr.d. Finally, objects which are att>ached to the new object c1nd are not ~lre~dy it1 the picture or on the waiting list are added to the waiting list. After all the ub,iects on the waiting list have been processed, DIAGRAM esits with the completed picture frame set as its value."]},{"title":"PICTLOC","paragraphs":["calculates the position of a point on an object relative to the object s picture frame. When the geometric size of the object and the name"]},{"title":"of","paragraphs":["the location are specified, the position is calculated by simple vector operations as described in section 5.3 and illustrated in Figure 5.1 for geometric positions. If there is a relative position offset from a known location and the geometric size of the object is R symbolic constant (as in (P2), where the weight is attached 0.75 times the length of the pole from the boy),"]},{"title":"PSIZERB","paragraphs":["will have made a"]},{"title":"CLENGTH","paragraphs":["size factor for the object. When it does so, PSIZERB also defines the VALUE of the length constant to be the same factor. Thus, by performing COPYSUB and SIMPLIFY on the relative position expression, the correct proportional length on the object in the diagram is obtained. (If the relative position were a function of other constants, this procedure would fail, and the relative position would be ignored. This does not happen in our sample problems.) If no location name is specified for the object, a default location must be found for the object's point of attachment in the picture. (This is not usually necessary in the geometric model, where such an object is typically treated as a single point.) The defaultn location for the object may be stored on the property list of its token word, or there may be a function to compute it. Such a function is provided for"]},{"title":"PERSON","paragraphs":["objects; this function selects"]},{"title":"HANDS","paragraphs":["as the default location if the person is modeled as a PIVOT object, or FEET","otherwise. (Some verbs, such as SIT and STAND, specify the location as part of the verb","semantics, so that a default location is not needed.)","COMPFRM combines two picture frame sets, given a point relative to each picture frame which is to be made a common point in the combined picture frame. A constanttranslation vector is easily computed from the two givein points; by adding this. vector to the coocdiriates of each point in the second picture frame, the coordihates of the eonresponding point in the first picture frame (which will become the combined frame) are obtained. Since the position of each object is relative to its .starting point, only the starting point coordinates of the objects in the second picture frame need to be recomputedq. A simple loop is used to recompute thP starting p~int of each objcct in the second picture frame and add it to the ohject set of the first picture frame. The picture boundaries are recomputed by clrlculati~lg the offset positions of the boundaries of the second picture frame, then choosing boundaries for the combined set which e~\\close both of the component picture frames. This process is illustrated in Figure 7.2, where the frame drawn with solid lines is the cot~~bined frame for the two smaller frames drawn with dotted lines. (The solid lines are drawn outside of the dotted lilies for clarity where they would be in the same place.)","Many of the functions used for constructing the picture model and drawing the pictures are similar or identical to those used in (Simmons and Bennett-Novak 751. The picture frame concept used in constructing the picture model is so simple and obvious that it probably is not new; it is described here for completeness. 7.2 Drawing the Diagram The completed picture frame set is passed as an argument to the function"]},{"title":"DRAWPICS,","paragraphs":["which control$ the drawing of the picture. The size of the picture frame in the x and y directions is computed from the frame boundaries. These size values are used in conjunction with the size of the available picture area to set the global constant GLOBALSIZE so that the finished picture will occupy 0.9 of the available space along its maximum dimension. The frame boundaries and global size are used to compute an offset base vector so that the picture will be centered in the available area in each dimension. For each object which is to be drawn, DRAWPICS calculates the proper offsetstarting position, sets the initial position and heading, and calls the program to draw the object with the size as an argument.","The functions used from LISP to draw the pictures have a structure similar to the LOGO language of Papert [Papert 721. The \"turtle\" concept of plotter commands used in LOGO is convenient for drawing objects because an object can be drawn in any orientation if the turtle is initially pointed in the right direction. Figure 7.2: Cohbining Two Picture Frames J 8. Cox~clusion"]},{"title":"In","paragraphs":["the preceding chapters, we have described a particular pi*ograrn which is capable of reading, understanding, solving, anti drnwirlg pictures of a class of physics problems which are stated in English. In this ~1111pt~'r, \\YO shall exatnine the methodology of this research, some directions t'or future research \\vl~ic'h are suggested by this work, and- potential al)plic:\\tintls of programs similiti* to this one. Finally, \\vu present some data on the progrn,m's sixe und execution time, and exanrille what extensions would be necessary to handle ciddit ional problems. 8.1 Metfiodology The area of physics problems invol~ing rigid body statics is certainly a \"micro-world\", and a fairly sniall one at tht~t; howevtlr, in the opinion of this authnr. it"]},{"title":"is","paragraphs":["a fruitful one for research in computational linguistics. The area is sufficiently -- circumscribed to be tractable for progranlnling, but still involves a number of interesting problems-many more than a casual glance at the sample problems ivould suggest. In some cases, the correct parsing of a sentence depends on the particular relations of objects in the model of the problem, thu3 forcing the integration of syntax, semantics, and world knowledge in the parsing program. The difficult problem of referent identification must be solved (though of course in a limited way) for both physical objects and locations. Different sense-meanings of words (particularly verbs and prepositions) nus st be disambiguated. C;tnonical object frames must be selected to represent objects in the model, and inferences nlust be niade to construct a corllylete and consistent model. Geometrical models of the probleln must be constructed both for solving the problem and for drawing the picture. Thus. although the problem sol\\ying is specific to the area of physics problems, the process of understanding the English statement of the problem involves a number of interesting sub-p~*ocesses which are likely to be important in any language-understanding program. The area of physics problems is a good one for investigating these sub-processes because there is a relatively clear urlderstanding of what the result of understailding a physics problenl must consist of: a model of the problem in which the attributes and relationships of objects are represented with sufficient specificity to allow equations to be written describ~ng the interactions of the objects and to allow a diagram"]},{"title":"of","paragraphs":["the problem to be constructed. The twenty sanlple problems used to test the progrnrn were selected before the major version of the program was written. (When the program was almost complete, one problem which involved a great deal of worlcl.knowledge required only for that problem was deleted and replaced by another problem.) Thus. iil a sense. the program was written to solve twenty specific problems-not a very large number. However. we trled to solve the pr6blr.m~ it1 a legitimate. general way, using a lnitlimum of \"tricks\" We hope (but have not yet shown) that the program could be espanded considerably without rewriting very much of the existing code, and that it could be made to solve twellty more problems of the same type with relatively little difficulty. (Atlding the problem which replaced the deleted one required only a semantic routine for (,nu word.) The use of twenty preselected problems by several different authors actually niatle the program much more clifficult than it might have been. Almost every problem had some idiosyncracy which required additional capabilities of the program or prevented a11 easy trick from being used in a superficially similar situatio~l in another prd~lem. On the other hand, the diversity of the problems led to the discovery of many interesting regularities which would have been missed if we had (say) selectcd problems that an existing program could solve or edited the problel~ls to make it easier otl the program. Thus, in a sense we are treating computational linguistics us an expcri~~~el~tal science, in which the experimental data are existing examples of linguistic yerformuncr hy competent native speakers, and in which the goal of the research is the production of progra~ns which can adequately understand the examples of language perfo14rnance. In this author's opinion, this is a valuable approach. Many interesting problems which would never have been noticed were made glaringly apparent when the program Sailed to work. Likewise, many regularities were found bx suddenly rmlizing that a subroutine almost identical to the one needed for the current task was written earlier. This approach does'not replace theory, but rather lays the gra~ndwork for theories which can be powerful because they account for a large number ~f exarpples of li~~guistic performance. Because a program such as this one deals with the whole process of understanding language, it can serve as the basis of a more complete theory of language, rather than a theory which deals only with a narrow aspect such as syntax.","8.2 Directions for Future Resltzarch In this section, we will comment briefly on some interesting possibilities for"]},{"title":"future","paragraphs":["research which are suggested by some af the techniques used in this program."]},{"title":"The SFRAME","paragraphs":["(semantic frame) concept. in which a sernantirl interpretation is assigned to a phrase, inferences are made to fill in missing arguments of the semantic frame, and specialist routirles are associated with the frame to perform tasks associated with that type of semantic object, is au interesting one. Only a few types of SFKAMEs are used in ISAAC; it would be ihteresting to see if this technique is useful for understanding language in other areas besides physics problems, and to investigate how the use of SFRAMEs might be integrated into the parsing process.","The process of referent identification is an important one for understanding virtually all types of language. The procedures used for referent identification by ISAAC are fairly rudimentary, are specific to the area of physics problems, and deal only witb extensionally specified referents. This area deserves much more research to determine rules for referent identification in wider contexts and ways to represent and use intensionally specified referents. (For example. when identifying the phrase \"the 8 million people of New York\", we would like to create an intensional referent, rather 76"]},{"title":"than","paragraphs":["creating 8 million"]},{"title":"PERSON","paragraphs":["referents.) While a"]},{"title":"PLANNER","paragraphs":["theorem can be used as","an intensional representation, it would be desirable to have a representation which is","more accessible QS a data object than a PLANNER theorem is.","The concept of the cal~oniral object frame (due primarily"]},{"title":"to","paragraphs":["Minsky) is o powerful one. The canonical frames dealt with in"]},{"title":"ISAAC","paragraphs":["are particularly simple ones."]},{"title":"It would","paragraphs":["be interesting to develop canonical frames for more complex objects in physics and engineering. Analpis done by engineers"]},{"title":"is","paragraphs":["based very heavily on the use of canonical object frames; it would be interesting to study how such frames are selected and used, and how such frames are used when the modeled object doesn't fit the canonical frame very well (as, for example, when piecewise lillear analysis is used to","simulate a nonlinear device charactefistk). Since the model of n problem is constructed before equations nre written to solve the problem, the existing program could be used as s test bed fcr in~estiga~iqg other strategies for solving this type of problem."]},{"title":"It","paragraphs":["is clear that the prqsent method generates many more equations than are usually generated by humans; it would be interesting to investigate how the fey critical equations could be writ ten more directly, and what rules might be used to select and inhibit such shortcut methods.","It would be interesting to extend ISAAC to additional tvpes of physits problems. Although the present program handles only static problems. most dynamic problems are handled as a sequ-ence of (usually two) \"static\" situations with a specific relationship (such as a conservation law) which holds between the two situatiol~s. [de Kleer 751 investigates the interaction of qualit nt ive and qu~ntit at ivr knobv!c)dye in solv it~g dynan~ic problems. 8.3 Potential Applications Programs similar to ISAAC, but with expanded capabilities, might find useful application in two arcas: as engineering assistants, and in technical education. There are many specialized programs to aid in the analysis of engineering problems. 'Often, however, these progrqrns are not used for problems of small to moderate size, either because considerablb knowledge of a system is required in order to use it (and it isn't worth the effort-to acquire this knowledge for a small problem), or because the data must be laboriously prepared ina rigidly specified format. A program which, like ISAAC, could accept a problem statement id English could overcome these problems. Another patential application of a program stlch as ISAAC is in computer-assisted instruction (CAI). Other CAI progra~n's using natmal language, such as the SOPHIE program [Brown and Burton 753 for teaching electronic circuit analysis, have been successfully developed and used. ISAAC is particularly interestit~g for application in this area because of the insights it give$ into the problem solving process. The primary skill $hich is taught in a physics class to enable the students to solve problems is the application of physical laws to actual prob1t.111~. The physical laws themselves are of less importance-in fact, not all of the laws uecessary to solve a problem are taught explicitly (such as, for example. the \"laws\" that the force exerted l~y a rope is direct~d toward the center of the rope and cannot be negative). Many of' these laws are \"bu~aied\" in the procedures for setting up a problem sol'utioll. These p~ocedures are usually taught by example-often with Inany steps left out. The stutlent who does not understand how the missing steps are being skipped may become completely lost. A program such as ISAAC could be valuable for teaching physics (and similar subjec.ts) because it could present all of the steps in detail, progressing to Inore abbreviated forms onre the studc~lt grasped the steps that were to be skipped. 8.4 Program Statistics","The time required by the program to process a complete problem (including parsing, semantics, problem solving, and picture generation) averages about 10 seconds per problem, using interpreted LISP on a CDC 6600. This is really quite fast. By using compiled LISP instead of interpreted LISP, an iiwrease in speed of several times might be obtained, so that the processing time per problem in a \"production\" system might be reduced to a second or two. It took the author about 45 minutes to solve all the problems (drawing only minimal diagrams a6 a innemonic aid); two of the answers were wrong due to \"careless\" errors. Thus, even in its present form, the program is more than ten times as fast as a human test subject and (assuming the problem is within its range of competence) more accurate.","The program fs coded in UT LISP 1.5, using a virtual memory package for function definitions which was written by Mabry Tyson. Virtual memory is particularly good for programs such as this one because it allows se~nantic functions for a large vocabulary to be available without clogging the machine when they are not in use. Some of the standard transcendental functions needed for the geometry and picture generation were coded in LAP to ir~crease their executiotl speed,","The complete program comprises about 5000 lines of LISP source code, including comments. (This is admittedly an impl~ecise measure of the program's size.)","Breaking the program down roughly into functional categories, the percentages of the","total code in each of the categories are approximately as follows: Syntax Sem ntics Canonical Frame Programs Geometric Model Problem Solving Symbolic Algebra Package Answer Generation Picture Model Picture Genera tion Lexicon and Other Data Miscellaneous 78 The current version of the program has a vocabulary of about 2000 words. Some of these (for example, different ways of writing tnensurement units) do not appear in the sample problems. Not counting different forms of' the same root word, tile twenty sample problems use a total of 138 words. It is interesting to graph the number of wortis required as a function of the number"]},{"title":"OF","paragraphs":["problems, even though this is somewhat dependent on the arbitrary ordering of the problems. Such a graph is sho\\~n in Figure 8.1; the graph is extended to include the vocabulary for fi\\re udditionnl prnhlems, which are discussed in the next section. The graph suggests that twenty pl-oblems (even though they are of the same type) are not enough to read1 a plateau where the esisting vocabulary will handle many new problems."]},{"title":"In","paragraphs":["the next section, we discuss the program's ability to handle new problems."]},{"title":"- a I I 1","paragraphs":["O 0","1","1","1 I","I .,","5 10 15 20 25","Problems Figure 8.1: Required Vocabulary as a Function of Number of Problems 6 8.5 Handling Additional Problems The ultimate test of an artificially intelligent program is its ability to handle new situations for which it was not specifically programmed. Unfortunately, many artificial intelligence programs turn out to be \"toy'' programs which cannot solve many new problems beyond the few test cases used and cannot easily be extended. It is of interest, therefore, to examine the ability of"]},{"title":"ISAAC","paragraphs":["to solve new problems and, more important, to examine the specific improvements (in the many abilities of the program) which are required to handle new problems. In order to do this, we asked our colleague, Michael"]},{"title":"K.","paragraphs":["Smith, to select independently five additional test problems. The restrictions on this selection were that the. problems ~hould be problems involvillg rigid body statics, and that they should be stated in English without requiring a diagram as part of the problem statement. The five additional problems are reproduced below. P21. A uniform steel meter bar rests WI two scales"]},{"title":"at","paragraphs":["its ends. The bar weighs 4.0 lb. Find the readings on the scales.","P22. A 60 ft ladder weighing 100 lb rests against a wall at a point 48"]},{"title":"ft","paragraphs":["above the ground. The center of gravity of the ladder is one-third the way up. A 160 lb"]},{"title":"man","paragraphs":["climbs halfway up the ladder. Assunling thut the wall is Erictio~~less, find"]},{"title":"the","paragraphs":["forces exerted by the system on the ground and the wall.","P23. A uniform beam is hinged at the wall. A wire conne'cted to the wall a distance d above the hinge is attached to the other-end of the beam. The bean1 makes an angle of 30 deg with the horizontal when a weight w is hung from a string fastened to the end of the beam."]},{"title":"If","paragraphs":["the beam has a weight"]},{"title":"W","paragraphs":["atid a length"]},{"title":"I,","paragraphs":["find the tension in the wire and the forces exerted by the hinge 011 the beam.","P24. A door 7.0 ft high ant1 3.0 ft wide weighs 60 lb. A hinge I .O ft from the top and another 1.0 ft from the bottom each support half the door's weight. Assume that the center of gravity is at the geometrical center of the door and dete1;lnine the horizontal and vertical force components exerted by each hinge on the door,","P25. An automobile weighing 3000 lb has a wheel base of 120 in. Its center of gravity is located 70 in behind the front asle. Determine the force exerted on each ofthe front wheels (assumed the same) and the force exerted on each of the back wheels (assumed the same) by the level ground.","These problems are taken from Physics [Halliday and Resnick 67]*, pages 327-339, This is a somewhat harder book than the texts from which cc: took the origillal twenty sample problems; nevertheless. all of the new problems except (P23) are within the existing capability of the problem-solving, geometry, and picture-generation parts of the program. However, the program could not complete any of these problems without some modifications. In order to solve all five of these problems, it would be necessary to extend the capabilities of the program in the areas of vocabulary, grammar. world knowledge, and algebraic manipulation. We do not feel that these modifications would be too difficult, and we believe that they could be made within the existing framework of the program. In the sections below, we consider the specific extensions needed in each of these areas to solve the additional problems. \"Copyright 1967 by John Wiley & Sons, Inc. Used by permission.","8.5.1 Vocabulary Each of the new problems requires additional vocabulary. The average increase of seven words per problem is higher than that of the last few problems of the original set, probably due to the fact that the problems are written by different authors and are somewhat harder. The new words required for each problem are listed below."]},{"title":"Of","paragraphs":["the thirty-six words, ten (those-marked with an asterisk) could be added trivially as simple lexicon entries or as synonyms of existing words. For example, \"one-third\" could be defined as a nun~ber with a value of 0,33333:33:3; \"connect\" could be made synonymous with \"attach\", and \"wire\" and \"string\" could be made synonymous with \"rope\"","P21 meter bar'\" P23 hinge [verb]* P25 wheel base scale wire* front reading connect* axle","distance wheels","P22 above string* same ground fasten* back one- third* length level* way behind UP P24 another climb* each [proizoun] halfway halP assume geometrical frict~ionless force [adj] system component","high","bottom","Of the remaining words, some (such as \"wheel base\") are useful only for individual problems; however, there are still a number of more general words (such as \"above\" and \"distance\") which are likely to be used in a number of problems out of a large sample. This seems to indicate that it would take a much larger vocabulary (perhaps twice as large) to include most of the \"general\" wordslikely to be encountered in this type of physics problems. It also indicates that several times more than twenty"]},{"title":"test cases","paragraphs":["would be needed before we could have confidence in the program's ability to solve a new,, independently selected problem, There are several constructions in the new problems which are not handled by the existing grammar. We shall discuss these below, wth the caveat that it is easy to overlook subtle features of sentences which might confuse the existing grammar and require some debugging."]},{"title":"In","paragraphs":["(P22), the phrase \"one-third the way up\" would not be handled by the present grammar. Such a phrase would become a type of LOCPART SFRAME, with inferences required to determine the object involved, the starting point for the relative position, and the length of the object. A slight grammar extension might be required to","9 1 handle the initial clause \"assuming that"]},{"title":". .","paragraphs":[","]},{"title":".","paragraphs":["In (P24), an extension would be necessary to accept the \"each'' ill the second sentence. Extensions would also be aeecied to accept \"half the door s weight\", both to handle the \"half' and to 'iiccept the possessive form of 11ouns as an adjective (this would not be hard, since possessive pronouns are already hanciled)."]},{"title":"An","paragraphs":["extension would be needed for the compound adjectives"]},{"title":"in","paragraphs":["\"horizontal and vertical farce components\"."]},{"title":"In","paragraphs":["(P25), it would be necessary to handle the two parenthetical expressions \"(assumed the same)\".","8.5.3 World Knowledge \"World knowledge\", as we use the term here, is knowledge of the usual relationships and. features of objects which is used in making inferences used to understand a problem. Additional world knowledge is needed for several of the new problems. In (P22), we need to infer that the bottom of the ladder is resting on the"]},{"title":"ground.","paragraphs":["Similar knowledge is needed for (P26), where we need to infer that the ground supports"]},{"title":"the","paragraphs":["automobile in four places (the four wheels)."]},{"title":"In (P24),","paragraphs":["we need to know that (whatever their vertical position) the hinges are on one side of the door. This would","require additional semantic routines to control the generation of these locations. Additional research on ways to represent and control world knowledge such as that described in this section would be-very valuable.","8.5.4 Comments on Individual Problems (P21) is of course very simple."]},{"title":"If","paragraphs":["we substituted another word (say \"supports\") for \"scales\" and substituted \"forces\" for \"readings\", the present program could solve it. To handle the problem as stated, we would need to add a SCALE canonical object (which has a reading equal to the force on it) and add a drawing program to draw a scale."]},{"title":"In (P22), we","paragraphs":["could take a static view of \"climbs\" and make it equivalent to \"stands\". Although the program automatically assumes that walls are frictionless, it"]},{"title":"would","paragraphs":["be easy to write a semantic routine to set a zero coefficient of friction if desired. A","semantic routine would be needed to identify the referent of \"system\".","(P23) is beyond the algebraic capabilities of the present program, since it involves algebraic arguments bf transcendental functions. It wo\\ild not be hard to allow this, although the resulting expressions might be intractable for-the present expression simplifier and equation solver. The present prograrri would work if d and. 1"]},{"title":"ere","paragraphs":["constants. (P24) would present no problems beyond the ones previously mentioned.","For (P25), a semantic program (or a more general program which referenced the object's GEOMODEL) would be needed to correctly define the wheel base of the car as the distance between the two axles. The car's GEOMODEL would have to be expanded to include wheels and axles. It would be desirable to he able to handle an object such as a car either as a single point, as in"]},{"title":"(el@,","paragraphs":["or as a lever system in its own right, as in (P25)."]},{"title":"(F1 LEVER 10 FT LONG IS PINNED FIT ITS LEFT END 1 ITHE LEVER IS SUPPORTED BY fl SPRING WITH R CONSTFINT OF 40 LB/FTI [THE SPRING IS ATTRCHED 6 FT FROM THE LEFT END OF THE LEVERI[fl NEIGHT OF 20 LB IS RTTRCHED FIT THE OTHER END OF THE LEVER) (THE NEIGHT OF THE LEVER IS 8 LBI(H0W MUCH IS THE SPRING STRETCHED) ANSWER: 1.00000 FT P2 SCHRUM\" PAGE 12 NUMBER","paragraphs":["Ll"]},{"title":"[WHERE MUST A UEIGHT BE HUNG ON A POLE . OF NEGLIGIBLE NEIGHT SO THAT THE BOY RT ONE END SUPPORTS 113 RS MUCH RS THE HflN flT THE OTHER END) RNSWER: [TIIIES LENGTH76 7.50000E-1) FROV THE BOY . MHERE LENGTH76 IS THE LENGTH OF THE POLE *Problems marked SCHAUM are","paragraphs":["from College Physics [Schaum 611. Copyright 1061 by McGraw-Hill Book Company. Used by permission. Appendix"]},{"title":"B:","paragraphs":["Object Frame Representations"]},{"title":"This appendix","paragraphs":["briefly"]},{"title":"describes","paragraphs":["the representat"]},{"title":"ions of objects and their relationships","paragraphs":["which"]},{"title":"are","paragraphs":["constructed"]},{"title":"by the various","paragraphs":["parts"]},{"title":"of the program. The vnrious items of information associated with each object are stored in","paragraphs":["its"]},{"title":"property list under named indicators; in","paragraphs":["describing"]},{"title":"each","paragraphs":["type"]},{"title":"of information, we","paragraphs":["give"]},{"title":"the name of the indicator under which it is","paragraphs":["stored,"]},{"title":"followed by a description of the information itself. B.1 Physical","paragraphs":["Entity"]},{"title":"Representation The property list indicators for","paragraphs":["physical"]},{"title":"entities (which include","paragraphs":["ezplieit"]},{"title":"forces as well as","paragraphs":["physical"]},{"title":"objects) and the type of","paragraphs":["information"]},{"title":"stored under each one are described below. ENTITY: PHYSENT TOK i word WORD word NAME: name RESTRICT: ((attribute","paragraphs":["value)"]},{"title":". .","paragraphs":[".)"]},{"title":"SELECT:","paragraphs":["(selection)"]},{"title":"PARTOF:","paragraphs":["object"]},{"title":"PARTS:","paragraphs":["(object."]},{"title":".","paragraphs":[".)"]},{"title":"COFG:","paragraphs":["(location)"]},{"title":"LOGS: (location . .","paragraphs":[".)"]},{"title":"ATTACH:","paragraphs":["(attachment."]},{"title":".","paragraphs":[",) Identifies the object"]},{"title":"as","paragraphs":["a physical"]},{"title":"entity. Identifies the","paragraphs":["tokenbword"]},{"title":"of which","paragraphs":["this"]},{"title":"object is","paragraphs":["an example."]},{"title":"Usually","paragraphs":["the"]},{"title":"word representing","paragraphs":["the object in the sentence. Identifies the specific word describing the object in a sentence, if different"]},{"title":"from","paragraphs":["the"]},{"title":"TOK. For","paragraphs":["example, \"boy\""]},{"title":"would be","paragraphs":["represented by"]},{"title":"TOK: PERSON","paragraphs":["and"]},{"title":"WORD: BOY. Name of","paragraphs":["the"]},{"title":"object if it has one. Restrictians","paragraphs":["on"]},{"title":"the TOK","paragraphs":["fo~ this"]},{"title":"object. For","paragraphs":["example,"]},{"title":"\"boy'' would","paragraphs":["have"]},{"title":"(RESTRICT (SEX MALE) (AGE YOUNG)).","paragraphs":["Selection used to select a particular"]},{"title":"object. For","paragraphs":["example,"]},{"title":"\"the","paragraphs":["upper hinge\""]},{"title":"would","paragraphs":["have"]},{"title":"SELECT: (UPPER). Object which","paragraphs":["this object is a part of. List of"]},{"title":"all","paragraphs":["objects which"]},{"title":"are","paragraphs":["part of this object. Location object"]},{"title":"dhich","paragraphs":["is the location of"]},{"title":"the","paragraphs":["center of gravity of this object (if"]},{"title":"specified). List of all","paragraphs":["locations on this object."]},{"title":"List of","paragraphs":["all attachment relations which invoIve this object."]},{"title":"SUPPORT:","paragraphs":["(object"]},{"title":".","paragraphs":[", .)"]},{"title":"SUPPORTBY:","paragraphs":["(object"]},{"title":". .","paragraphs":[".)"]},{"title":"UNKNOWNS:","paragraphs":["(variable"]},{"title":". .","paragraphs":[".)"]},{"title":"CONSTANTS:","paragraphs":["(constant"]},{"title":". .","paragraphs":[".)"]},{"title":"ROTN:","paragraphs":["(angle)"]},{"title":"FRAME:","paragraphs":["frame"]},{"title":"GSIZ E","paragraphs":[": (sx"]},{"title":"sy) GSTART: (X Y(.) PIVOT:","paragraphs":["(x Y)"]},{"title":"FORCES:","paragraphs":["("]},{"title":"(CX y) (fx","paragraphs":["fy))"]},{"title":".","paragraphs":[".) SIZEDET: (measurement"]},{"title":".","paragraphs":["value)"]},{"title":"PSCALE:","paragraphs":["scale"]},{"title":"PSIZE","paragraphs":[": (sx"]},{"title":"sy) STVAL:","paragraphs":["(x Y)"]},{"title":"IMLACXTEM: *T* LENGTH:\"","paragraphs":["(value units) WEIGHT: (value units)"]},{"title":"TENSION:","paragraphs":["(value units) CONSTANT: (value units) B.2 Location Representation"]},{"title":"ENTITY:","paragraphs":["LOCATION"]},{"title":"FRAME:","paragraphs":["LOCATION"]},{"title":"OBJECT:","paragraphs":["object"]},{"title":"LOCNAME:","paragraphs":["word"]},{"title":"NAME:","paragraphs":["name List of objects which this object supports. List of objects"]},{"title":"which","paragraphs":["support this object. List of all variables associated with this object. List of all constants associated with this object. Rotation of the object. (counterclockwise"]},{"title":"in","paragraphs":["degrees) from its"]},{"title":"GEOMODEL","paragraphs":["orientation. Name of the canonical object freurne which represents the object in its current instantiation, e.g., LEVER. Geometric size scaling vector. Geometric starting point. Preferred pivot kcation for a rigid body object. Position and force vector for each force exerted by the object. Measured quantity and value for this object, used to determine picture sizt scaling. Scale factor between geometric-length and picture size. Picture size scaling vector. Starting point for object in drawing. True if the object has been drawn, Not really used in current system. Measurements of various attributes, as appropriate for a particular type of object. Identifies the object"]},{"title":"as","paragraphs":["a location entity. Identifies a location frame. Identifies the object with which the location is associated. Location name, e.g,, END, Name of the location, if specified."]},{"title":"SELECT: REFLOC: REFLOCS: RELPOS:","paragraphs":["(selection) location (location"]},{"title":". .","paragraphs":[".) (type (quantity units)) POSITION: (s"]},{"title":"y)","paragraphs":["Selection used to select this particular location. For example, \"the ltlft end\" would have"]},{"title":"SEIIX;'ICT: (Ll.(=lJrr),","paragraphs":["Location"]},{"title":"to","paragraphs":["which this locnt ion is relative."]},{"title":"List","paragraphs":["of all locations which nru relative to this 10ca t ion. Specifies posit ion relnt i1.e to the"]},{"title":"referme","paragraphs":["locntion. For example, \"ti ft from on@ en(.\\\" ~\\*nuld hrt\\-e l3E:I,l3C)S:"]},{"title":"(FROMLOC'","paragraphs":["(6"]},{"title":"FT)),","paragraphs":["Gcornetric posit ion of t hc loc.nt ion."]},{"title":"FRAME: ATTACH","paragraphs":["Identifies this as an attachment frar-r~e."]},{"title":"TY PEATT:","paragraphs":["type"]},{"title":"Type","paragraphs":["of attachment. e.g.."]},{"title":"PINJOINT","paragraphs":["or"]},{"title":"CONTACT. LOCS:","paragraphs":["( (object 1ocatio11 (fx.fj7))"]},{"title":". .","paragraphs":[".) Specifies each object involved in the attachment, along with the location on that object and the force vector for the force exerted by the object at that location. B.4 Constant or Variable Representation"]},{"title":"ENTITY: CONSTANT","paragraphs":["or"]},{"title":"VARIABLE","paragraphs":["SYSTEM: object"]},{"title":"MEASURE]","paragraphs":["attribute UNITS: units VALUE: value Geometric position of the point of attachment. Identifies this object as a constant or variable. Physical entity object with ~vhich the constant or variable iS assocla~ed. Attribute which is measured, e.g.,"]},{"title":"TENSION Units","paragraphs":["of the measurement. e.g.,"]},{"title":"FT. Numeric","paragraphs":["or symbolic espression which is the calculated value of a variable. Appendix"]},{"title":"C:","paragraphs":["Generated Structures for"]},{"title":"a","paragraphs":["Sample Problem"]},{"title":"This","paragraphs":["appendix contains snapshots of some of the major data structures produced by ISAAC at various stages in the processing of the sample problem (P8). The first part of the listing shows the st?uctures produced by the parsing and semantic processing of each sentence. After each sentence, the result of the parsing is shown;"]},{"title":"<","paragraphs":["S> indicates that a major clause was parsed, and the list of tokens which follows gives the root of the parse tree (the verb) for each of the major clauses which was parsed. This is followed by a listing of each of the tokens produced during parsing."]},{"title":"The","paragraphs":["dump follows all of the semantic processing: the tokens are not used thereafter except in","finding pronoun referents. Following the dump of the parse structures is a listing of the internal model of the problem as"]},{"title":"it","paragraphs":["exists just after all of the input sentences have been processed, but before frame creation and all the subsequent processing. Each of the GENSYM atoms is a separate object in the model. The four atoms UNKNOWNS, DESUNKS, SYSREPLY, and"]},{"title":"SYSUNITS","paragraphs":["are global variables whose bindings are the list of all unknowns, the list of desired unknow~~s, the reply to be generated once the problem is solved, and the","measurement units used for various types of measurements, respectively. The next part of the dump- shows each of the equations presented to SOLVEQ for solution, followed by the answer generated by PRTVAR. The equation (EQUALS 0 0) is caused by a deficiency in"]},{"title":"CFSURFACE","paragraphs":["(complete frame for"]},{"title":"SURFACE)","paragraphs":["which went unnoticed because it didn't cause any problems."]},{"title":"CFSURFACE","paragraphs":["requires that the force"]},{"title":"exerted","paragraphs":["by a surface be perpendicular to the surface; this is fine for an attachment of type CONTACT, but not for one of type PINJOINT, such as the attachment between the rope and the wall. Thus, one of the zeros should be a variable representing the vertical force exerted by the wall. The other zero, representing the vertical force exerted by the rope on the wall, is correct.","The final part of tlle dump shows the model of the problem at the end of the problem solving and picture generation processes. It can be seen that a great deal of information has been added to the model beyond that which was available immediately after the problem statement was read. The meaning of the information associated with each of the objects in the model is explained in Appendix B. '3 0 Sentence Structures After Parsing and Semantics","(THE FOOT Of A LADDER RESTS AGAINST A VERTICAL WALL AN0 ON A HORIZONTAL FLOOR)","TQK289 ((TOK e FOOT) (LFRAME NP) IDET * DEF) (NOR YS) (SFRAME"]},{"title":".","paragraphs":["LOCPART) (SEMOBJ LADDER2913 (RFNT LOC297)) TOK290 ( (TOK"]},{"title":". L.ADOER)","paragraphs":["(LFRAME NP) (DET"]},{"title":".","paragraphs":["INDEF)"]},{"title":"(NSH","paragraphs":["NF) (SFRAME PHYSENT) (RFNT LADDER291 1 TOK292 ( (TOK"]},{"title":".","paragraphs":["REST) (LFRAME"]},{"title":",","paragraphs":["VP) (YAINVB"]},{"title":".","paragraphs":["RESTS) (INTRANS *T*) (ACT *T*) (SUBJ * TOK289) (MODS. (CASEARG AGAINST (WALL294)) {CASEARG ON"]},{"title":"IFLOOR296)l)) TOK293","paragraphs":["((TOK WALL) (LFRAME NP) (DET INDEF) (NBR NS) (MODS (ROTN 90)) (SFRAME PHYSENF) (RFNT WALLZ94))","TOK295 ( (TOK FLOOR) (LFRAME NP) (DET INDEF) (NBR NS) (MODS (ROTN 0)) (SFRAME"]},{"title":".","paragraphs":["PHYSENT) (RFNT FLOOR296))","(THE TOP OF THE LADDER IS SUPPORTED FROM THE WALL BY A HORIZONT4L ROPE 30 FT LONG)","TOK300 ( (TOK TOP) (LFRAMf NP) (DET DEF) (NBR NS) (SFRAME"]},{"title":".","paragraphs":["LOCPART) (SEMOBJ LADDER291) (RFNT LOC309)) TOK301 ((TOK LADDER) (LFRAME"]},{"title":".","paragraphs":["NP) [LILT"]},{"title":".","paragraphs":["DEF) (NRR NS) (SFRAME"]},{"title":",","paragraphs":["PHYSENT) (HfNT LADDER291 1 TOK302 ( (TOK SUPPORT) 4 (LFRAME"]},{"title":",","paragraphs":["VP) (MAINVB"]},{"title":".","paragraphs":["SUPPORTED) (AUX"]},{"title":"IS)","paragraphs":["(TRANS r 'T\") (PASV"]},{"title":".","paragraphs":["Of\") (OBJ"]},{"title":".","paragraphs":["TOK300) [MODS (,CASEARG FROM (WALL2941 1 (~b~d"]},{"title":".","paragraphs":["TOK304) 1 TOK303 ((TOK WALL) (LFRAME"]},{"title":".","paragraphs":["No) (DET DEF). (NBR VS) (SFR4ME"]},{"title":".","paragraphs":["PHYSENT) (RFNt WALL294)) TOK304 ( (TOK"]},{"title":".","paragraphs":["ROPE) (LFRAME NP) (DET"]},{"title":".","paragraphs":["INDEF) (NR2 NS) (MODS (ROTN 0) (LENGTH 30 FTI) (SFRAME"]},{"title":".","paragraphs":["PHYSENT) (RFNJ ROPE305))","(THE LADDER IS SO FT LONG r WEIGHS 100 LP WITH ITS CEdTER OF GRAVITY 20 FT FROM THE FOOT AND A 150 LB MAN IS 10 FT FROM THE TOP) TOK311 ((TOK"]},{"title":". LADDER) (&FRAYâ‚¬","paragraphs":["NP) (DET"]},{"title":".","paragraphs":["DEF) (NBQ NS) (SFRAME PHYSENT) (HFNT LADQER291)) TOK312"]},{"title":"I(TOK","paragraphs":["BE) (LFRAME VP) (MAINVB IS) (INTRANS *Ta) (ACT 'T\") (SUBJ"]},{"title":".","paragraphs":["TOK311) (COMP LENGTH 50 FT) (VPCONJ TOK313) TOK313 ((TOK WEIGH) (LFRAME VP) (MAINV8"]},{"title":", dEIGHY)","paragraphs":["(INTRANS UTU) (ACT fiT{') (SURJ TOK311) (COMP"]},{"title":".","paragraphs":["TOK314)) TOK314 ((TOK"]},{"title":".","paragraphs":["LB) (LFRAME"]},{"title":".","paragraphs":["NP) (QTY"]},{"title":".","paragraphs":["100))","TOK315 ( (TOK COFG) (LFHAME NP) (NBR NS) (SFMAME 0 LOCPART) ( SEMOBJ LADDER291 1 (MODS (LOC AT (LOC317)","TOK316 ((TOK FOOT) (LFHAME NP) (OET DEF) (NBR YS) (SFRAME"]},{"title":".","paragraphs":["LOCPART) (SEMOHJ LADDEHZol) (HFNT LOC297)","TOK3lb ((TOK PERSON) (LFRAME NP) (WORD MAN) (MOD5 (RESTRICT (SEX MALE)) (RESTRICT (AGE ADULT))"]},{"title":"(NEIGH1 150","paragraphs":["LB)) (DET"]},{"title":".","paragraphs":["INDEF) (NBH NS) (SFHAME PHYSENT) (RFNT PERSON3191) TOK320 ((TOK BE) (LFHAME VP) (MAINVB 15) (INTRANS"]},{"title":".","paragraphs":["$T*) (ACT *T*) (SUBJ TOK318) (MOOS"]},{"title":"(LOC AT","paragraphs":["40C3223))) TOK321 ((TOK"]},{"title":".","paragraphs":["TOP) (LFRAME"]},{"title":".","paragraphs":["NP) (DET"]},{"title":".","paragraphs":["DEF) (NBR NSI (SFRAME"]},{"title":",","paragraphs":["LOCPART) (SEMOBJ ~ann~~291) (HFNT ~0~309)) (DETERMINE THE TENSION IN THE ROPF)","TOK324 ((TOK DETERMINE) (LFRAME 9 VP) (MAI*NVB DETEHMINE) (TRANS *f*) (IMPERATIVE aTU) (ACT"]},{"title":".","paragraphs":["*T*) (OR3"]},{"title":". TOK3?5))","paragraphs":["TOK325 ((TOK TENSION) ([..FRAME"]},{"title":".","paragraphs":["NP) (DET"]},{"title":".","paragraphs":["DEF) (N8R NS) (SFRAME"]},{"title":".","paragraphs":["ATTROF) (SEMORJ ROPE305)) TOK326 ((TOK"]},{"title":".","paragraphs":["ROPE) (LFRAME"]},{"title":".","paragraphs":["NP) (DET"]},{"title":".","paragraphs":["DEF) (NHR YS) (SFRAME"]},{"title":".","paragraphs":["PHYSENT) (RFNT ROPE305)) Initial Model After Reading Problem Statement LADDER291 ((TOK"]},{"title":".","paragraphs":["LADOER) (ENTITY PHYSENT) (LOCS LOC297 LOC309 LOC317 LOC322) (ATTACH ATTACH298 ATTACti299 ATTACH340 ATTACH3231 (SUPPORTBY FLOOR296 WALL294 ROPE3051 (COFG LOC317) (LENGTH 50 FT) (WEIGHT 100 LB))","WALd2Y4 ((TOK WALL) (ENTITY PHYSENT) (ROTIU 90) (ATTACH ATTACH299 ATTACH3081 (SUPPORT LADDER291)) FLOOR296 ((TOK FLOOR1 (ENTITY"]},{"title":".","paragraphs":["P+iYSENT) (ROTN 0) (ATTACH ATTACH2981 (SUPPORT LADDERL91))","LOC297 ((FRAME a LOCATION) (ENTITY LOCATION) (OBJECT LADDER2911 (LOCNAME"]},{"title":".","paragraphs":["FOOT) (REFLOCS LOC317))","ATTACH29R ((FRAME ATTACH) (TYPEATT a CONTACT) (LOCS (LADDER291 LOC297) (FLOOR296 NIL)))","ATTACH299 ((FRAME ATTACH) (TYPEATT m CONTACT) (LOCS (LADDER291 LOC297) (WALL294 NIL))) ROPE305 1 (TOK"]},{"title":",","paragraphs":["ROPE) (ENTITY PHYSENT) lROTN 0,) (LENGTH 30 FT) (LOCS LOC306 LOC307) (ATTACH ATTACH308 ATTAcH310) (SUPPORT LADDER291) (UNKNOWNS TENSION327) (TENSION TENSION327 LR)) LOC306 ((FRAME * LOCATION) (ENTITY LOCATION) (OBJECT"]},{"title":",","paragraphs":["ROPE305) (LOCNAME a END))","LOG307 ((FRAME LOCATION) (ENTITY LOCATION) (OBJECT ROPE305) (LOCNAME END) 1 ATTACH308 ((FRAME a ATTACH) (TYPEATT"]},{"title":".","paragraphs":["PINJOJNT) (LOCS (WALL294 NIL) (ROPE305 LOC307))) LOC309 ((FRAME LOCATION) (ENTITY LOCATION) (OBJECT"]},{"title":",","paragraphs":["LA DOER^Ì‚)Ì‚ (LOCNAME"]},{"title":".","paragraphs":["TOP) (REFLOCS LOC322)) ATTACH310 ((FRAME"]},{"title":".","paragraphs":["ATTACH) (TYPEATT"]},{"title":".","paragraphs":["PINJOINT) (LOCS (ROPE305 LOC306) (LADDER291 LOC309)))","LOC317 ((FRAME LOCATION) (ENT-ITY a LOCATION) (OBJECT LADDERZBI,) (LOCNAME FOOT) (REFLOC"]},{"title":".","paragraphs":["LOC297) IRELPOS FROMLOC (20 FT))) PERSON314 ((TOK PERSON) (WORD"]},{"title":".","paragraphs":["MAN) (ENTITY PHYSENT) (RESTRICT (SEX MALE) (AGE ADULT)) (WEIGHT 150 LB) (ATTACH ATTACH323))","LOC322 ((FRAME a LOCATION) (ENTITY a LOCATION) (OBJECT LADDER291) (LOCNAME"]},{"title":".","paragraphs":["TOP) (REFLOC LOC309) iRELPOS FROMLOC (10 FT))) ATTACH323 ((FRAME"]},{"title":".","paragraphs":["ATTACH) (TYPEATT CONTACT) (LOCS (PERSON319 NIL) (LADDER291 LOC322))) TENSION327 ((ENTITY VAQIABLE) (SYSTEM ROPE305) (YEASURE"]},{"title":".","paragraphs":["TENSION) (UNITS LR)) UNKNOWNS (TENS ION327 1 OESUNKS ITENSION327) SYSREPLY ( (PRTVAH TENSION327 1 1 SYSUNITS ((FORCE"]},{"title":".","paragraphs":["LB) (LENGTH FT)) Equations Generated By Problem Solver SOLVEQ (EQUALS 0 FORCE3281 SOLVEQ (EQUALS 0 (PLUS FORCE329 FORCE3381 SOLVEQ (EQUALS 0 (PLUS FORCE330 (TIMES FORCE336 -1))) SOLVEQ (EQUALS 0 FORCF331) SOLVEQ (EQUALS 0 (PLUS (TIMES FORCE337 -1 TENSION327) SOLVEQ (EQUALS 0 0) SOLVEQ (EQUALS 0 (PLUS (TIMES TENSION327 -1,00000) F3HCE332)) SOLVEQ (EQUALS 0 FORCE3331 SOLVEQ (EQUALS 0 FORCE3341 SOLVEQ (EQUALS 0 (PLUS -150 FOHCE335)) SOLVEQ (EQUALS 0 (PLUS 250 (MINUS FORCE338)')) SOLVEQ (EQUALS 0 (PLU5 FORCE332 FORCE33611","SOLYEQ (EQlUALS 0 (PLUS (PLUS (PLUS (DIFFERENCE (TIMES FORCE332 8o00000) (TIMES FORCE333 6,00000)) ((1IFFERENCE (TIMES FORCE330-32*80000) (TIMES FOHCE331 -24,00000))) (DIFFERENCE (TIMES FORCE328 -32,00000) (TIMES FORCE329 -24.00000))1 1200.00000)) ANSWER: 120000000 LR Final Model of the Problem LADDER-291 ((TOK"]},{"title":".","paragraphs":["LADDER) (ENTITY"]},{"title":",","paragraphs":["PHYSENT) (LOCS L3C297 LOC309 LOC317 LOC322) (ATTACH ATTACti298 ATTACtiL99 ATTACH310 ATTACH3231 (SUPPOHTRY FLOOR296 WALL294 ROPE305) rCOFG LOC317) (LENGTH 50 FT) (WEIGHT 100 LY)"]},{"title":"(GSIZE","paragraphs":["1.00000 0) (FRAME LEVER) (SUPPORT PERSON3141 (GSTART 0 0) (ROTpiJ 53,13010) (FOYCES ((24.00000 32.000001 (FORCE334 FORCE335)) ((30,00000 40,00000) (FORCE332 FORCE3331 1 ((0 0) (FORCE330 FOHCE331)) ((0 0) (FORCE328 FORCE32911 ((12.00000 16,00000) (0 100))) (UNKNOHNS FORCE328 FORCE329 FORCE330 FORCE331 FORCE332 FORCE333 FORCE334 FORCE3351 (SIZEDET LENGTH"]},{"title":",","paragraphs":["50) (PSIZE 1.00000 1.00000) (PSC4LE 1.00000) (STVAL 0 0) (IMLACITEM"]},{"title":". '+T*))","paragraphs":["WALL294 ((TOK l WALL) (ENTITY PHYSENT) (ROTN -90) (ATTACH ATTACH299 ATTACH3081 (SUPPORT LADDER2911"]},{"title":"(G5IZE","paragraphs":["0 0) (FRAME"]},{"title":".","paragraphs":["SUHFACE)(GSTART 0 0) (UVKNONNS FORCE336 FORCE337) (FORCES ((6,13909E-12 40.00000) ((TIMES FORCE337 -1)"]},{"title":"6Tl ((0 0) ((TIMES","paragraphs":["FORCE336 -1) 0))) (SIZEDET LENGTH l 40,00000) (PSIZE 8e00000E-1 8,00000E-1) (PSCALE 1,250001 (STVAL -8,00000E-1 6r00000E-1) (IMLACITEM"]},{"title":". *TU)) FLOOR296","paragraphs":["I(TQK FLOOR) (ENTITY PHYSENT) (HOTN 0) [ATTACH ATTACH2981 (SUPPORT LADDEREB1)"]},{"title":"(GSIZE","paragraphs":["0 0) [FRAME SURFACE) (GSTART"]},{"title":"0 0)","paragraphs":["(UNKNOWNS FORCE3381 (FORCES ((0 0) (0 FORCE330))) (PSIZE 1 1) (STVAL -8,000OOE-1 6,00000E-1) IIMLACITEM \"T')) LOC297 ((FRAME"]},{"title":",","paragraphs":["LOCATION) (ENTITY LOCATION) (OBJECT LADDER2911 (LOCNAME"]},{"title":".","paragraphs":["FOOT) (REFLOCS LOC317) (POSITION 0 0))","ATTACH298 ((FRAME ATTACH) tTYPEATT CONTACT) CLOCS (LADDER291 LOC297 (FORCE328 ~0~6~329) 1FLOOR29b NIL (0 FORCE'~~B-) 1 )"]},{"title":"(POSITION 0 0 1","paragraphs":["ATTACH299 ((FRAME"]},{"title":",","paragraphs":["ATTACH) (TYPEATT"]},{"title":",","paragraphs":["CONTACT)"]},{"title":"(LOCS","paragraphs":["(LADDER291 LOC297 (~0~~~336 FORCE331)) (WALL294"]},{"title":"NIL","paragraphs":["((TJMES FORGE336 -1) 0)))"]},{"title":"(POSITION 0","paragraphs":["011","ROPE305 1 (TOK r ROPE) (ENTITY PHYSENT) [RQTN 0) (LENGTH 30 FT) (LOGS LOC306 LOC307) (ATTACH ATTACH308 ATTACY310) (SUPPORT LAODERZ91) (UNKNOWNS TENSION327) (TENSION"]},{"title":". TE~SION~~~ l.0) (GSIZE","paragraphs":["6.00000E-1 0) (FRAME"]},{"title":".","paragraphs":["ROPE) (GSTART 6,13909E-32 40,00000) (FORCES(!30.00000~ 40.00000) ((TIMES TENSION327 -1.000QO) 0)) ((6.13909f-12 k0.00000) (TENSION327 0))) (SIZEDET LENGTH"]},{"title":", 30) (PSIZE 6,0000OE-1","paragraphs":["6,00000E-11 (PSCALE 1.66667) (STVAL -8.00000E-1 40,30000) (IMLACITEM *To)) ~0~306 ((FRAME"]},{"title":". LOCATION) (ENTITY .","paragraphs":["LOCATION) (OBJECT ROPE305') (LOCNAME RIGHTEND] (POSITION 3Tl.00000 0)) LOC307 ((FRAME r LOCATION) (ENTITY"]},{"title":".","paragraphs":["LOCATION) (OBJECT l ROPE305) (LQCNAME"]},{"title":"LEFTEND) (POSITION","paragraphs":["6.13909E-12 40.00008)l ATTACH308 ((FRAME ATTACH) (TYPEATT"]},{"title":".","paragraphs":["PINJOINT) (LOCS (WALL294 NIL ((TIMES FORCE337 -1) 0)) (ROPE305 LOC307 (TENSION327 01)) (POSITION 6,13909E-12 40,00008) 1 LQC30? ( (FRAME r"]},{"title":"LOCATION)","paragraphs":["(EN1 ITY"]},{"title":"LOC4TION)","paragraphs":["(OBJECT LADDERZ91) (LOCNAVE TOP) (REFLQCS LOC322) (POSITION 30oOOOOO 40,00000))","ATTACH310 ((FRAME 4.","ATTACH) (TYPEATT PINJOINT) (LOCS (ROPE305 LOC306 ( (TIMES ~~~~10~327 -1.00000) 01 (LADDER291 Lot309 (FORCE332 FORCE333))) (POSITIOY 3o.ooooo"]},{"title":"40.060oo13 LOC317 ((FRAME , LOCATION)","paragraphs":["(ENTITY"]},{"title":", LOCATIO~J) (o~~fcf ,","paragraphs":["LADDER2911 (LOCNAME FOOT) (REFLOC LOC297) (RELPOS FROMLOC (20 FT)) (POSITION 12,00000 16,00000)) PERSON319 ((TOK"]},{"title":". PERSON)","paragraphs":["(WORD"]},{"title":",","paragraphs":["MAN) (ENTITY"]},{"title":",","paragraphs":["PHYSENT) (RESTRICT (SEX MALE) (AGE ADULT)) (WEIGHT 150 LR) (ATTACH ATTACH3231"]},{"title":"(GSIZE","paragraphs":["0 0 ) (SUPPORTBY ~~00~~291) (FRAME"]},{"title":".","paragraphs":["WEIGHT) (GSTART ~4.ooooo 32.00000) (ROTY oj (FORCES ( (24.00000 32.00000) (4 -150) 1) (SIZEDET"]},{"title":"FORCE","paragraphs":["150) (PSIZE 6,00000E-1 6a00000E-1) (STVAL 17.80000 32.60000) (~MLACITEM"]},{"title":". *TQ) LOC322","paragraphs":["( (FRAME LOCATION) (ENTITY LOCATION) (OBJECT LADDERZ91) (LOCNAME TOP) (REFLoC LOC309) (RELPOS FROMLOC (10 FT))"]},{"title":"(POSITfON'","paragraphs":["24m00000 32a00000)) ATTACH323 ((FRAME"]},{"title":".","paragraphs":["ATTACH1 (TYPEATT"]},{"title":",","paragraphs":["CONTACT) tLOCS (PUSON319"]},{"title":"NIL (0 -150))","paragraphs":["(LA0DER291 LOC322 (FORCE334 FORCE335))) (POSITION 24m00000 32,00000)) TENSION327 ((ENTITY"]},{"title":".","paragraphs":["VARIABLE) (SYSTEM ROPE305) (qEASURE TENSION) (UNITS a LB) (VALUE 120e00000)) FQRCC328 ((ENTITY"]},{"title":".","paragraphs":["VARIABLE) (SYSTEM"]},{"title":",","paragraphs":["LADDER2911 (MEASURE a FORCE) (UNITS"]},{"title":".","paragraphs":["LB) (VALUE 0)) FORCE329 ((ENTITY a VARIABLE) (SYSTEM kADDEH2Q1) (MEASURE"]},{"title":".","paragraphs":["FORCE) (UNITS LB) (VALUE"]},{"title":".","paragraphs":["-250)) FORCE330 ((ENTITY VARIABLE) (SYSTEM LADDER2911 (MEASURE"]},{"title":".","paragraphs":["FORCE) (UNITS"]},{"title":".","paragraphs":["LB) (VALUE -120~00000))","FORCE331 ((ENTITY a VARIABLE) (SYSTEM LADDEH291) (YEASUWE 1 FORCE) (UNITS LB) (VALUE"]},{"title":". 0)) FORCE332","paragraphs":["((ENTITY VARIABLE) (SYSTEM"]},{"title":".","paragraphs":["LAODER291) (MEASURE r FORCE) (UNITS + LB) (VALUE"]},{"title":",","paragraphs":["120,00000)) FORCE333 ((ENTITY"]},{"title":".","paragraphs":["VARIABLE) (SYSTEM LADDER2911 (YEASURE FORCE) (UNITS"]},{"title":".","paragraphs":["LR) (VALUE"]},{"title":",","paragraphs":["0)) FORCE334 ((ENTITY"]},{"title":".","paragraphs":["VARIABLE) (SYSTEM l LADDER291) (VEASURE FORCE) (UNITS LB) (VALUE 0)) FORCE335 (. (ENTITY VARIABLE) (SYSTEM"]},{"title":".","paragraphs":["LADDER291 CAEASURE FORCE) (UNITS LB) (VALUE a 150))","FORCE336 ((ENTITY a VARIABLE) (SYSTEM , WALL2941 (MEASURE FORCE) (UNITS LB) (VALUE -120.00000)) FORCE337 ((ENTITY.. VARIABLE) (SYSTEM"]},{"title":",","paragraphs":["HALL294) (MEASURE FORCE) (UNITS"]},{"title":".","paragraphs":["LB) (VALUE"]},{"title":",","paragraphs":["120a00000)) FORCE338 ( (ENTITY VARIABLE) (SYSTEM E'LOOR296) (MEASURE"]},{"title":".","paragraphs":["FORCE) (UNITS LB) (VALUE 250)) Becker, Josep!~"]},{"title":"D. \"The","paragraphs":["Phrasal IJesicoll\", pp. 6O-(il in TIleoretical issues in Nottr~*nl Language Pr.oressirg, prt~cecldings of n conference held at M.I.T. OR +June 10-13, 1975.","Bobrow, Daniel"]},{"title":"G.","paragraphs":["\"Naturul Language Input for a Coinguter Problem-Solving Systenl\" , ill [hlinsky 68).","Bobrow. Dnniel and Collins. A411iul 1Kd.1. Rel~r*rserztntio~l nrttl Li~ciers/nric~i;!g NP\\Y York: Aoudenric P~*ess, 197;i. Browi1, G. Spencer. Lows of FOIW~. Xc\\v York: R:inturn Hooks, 1972. Brown. John Sltely and Burton. Hicl~:~l~d"]},{"title":"K.","paragraphs":["\"hlultiplr Hrpresrntntions of Knc,wlcdxc for Tutorial Reasoning \" In Hnbrow and Collins. Charniak, Eugene. \"Computer Solutiotl of Calculus Kurd Problems\" Proc. 1st Intl"]},{"title":"Joint ConJ","paragraphs":["on Artificial Irltellige~ce, pp. 303-916. Boston: Mitre Corporation, 1969."]},{"title":".","paragraphs":["\"CAKPS, a Program which Solves Calculus Word Problems.\" 3I.I.T. report MAC-TH-31, available frotn W\"S 3s"]},{"title":"AD","paragraphs":["673 ($70, .Jul? 19BS."]},{"title":".","paragraphs":["\"Toward a Mndel of Children's Story Comprehensior~\",',"]},{"title":"M.I.T. *I.I,","paragraphs":["Lab Report A1 TR-3Glj. Dec. l!)'i2.","de Kleer, Johan. \"Qualitative and Quantit at i~r Knowlecige in Classical RIechnnics \" M.I.T. A.I. LR~ l3eport AI-TR-35'2, Ilccember 19'75. Dull,"]},{"title":"C.E.,","paragraphs":["hletcolf'e,"]},{"title":"H.C.,","paragraphs":["nl~d 'CVilli~ilns, .J.E. .lIoder.rl Physics, Ntw York: Woit, Rinehart and \\Vinstou, l9ti4.","Gelb, Jxck P. \"Esperinlents with a Nntul-nl Z,angutige Problenl-Solving Systunl' ' , Yr.oc. Brzd"]},{"title":"Intl. Joint","paragraphs":["Conf. OIZ .41.tificinl Intelligence. pp. -135-462. LAondon: The British Cotrlputer Society, 197 1.","Halliday, David and Resnick. Robert.'Ph~sics \\Parts I and 11). Nex York: John UTile> $ Sons, 1967.","*. Heidorn, George"]},{"title":"E.","paragraphs":["\"Natural Language Inputs to a Sirnulation Programming System. NPS-55HD72101X, Naval Postgraduate School. Monterrey, Califol-nla, 1972.","McCarthy, John, et al. LISP 1.5 Programmer's illar~ual. Cambridge, Mass.: hI.1.T. Press, 1965.","McDermott, D.V. and Sussnlar~, G.J. \"The CONXIVER Reference Man~~al\", h1.I.T A.1. Lab Memo No. 259, 197'3.","Minsky, Marvin. Senlantic Inforrrmtion Processing. Cambridge, Mass.: M.I.T. Press. 1968."]},{"title":". \"A","paragraphs":["Framework for Representing Knowledge\". M.I.T. A.I. Memo No. 306. 1971. Also appears in Wqinston"]},{"title":"(d.)","paragraphs":["1975.","Moses, Joel. \"MACSJyMA-The Fifth Year.\" ACM SIGSAV Bttlletin. Vol. 8, No. 3 (Aug. 1974), pp. 105-1 10.","Papert, Seymour. \"Teaching Children to be Mathematicians vs. Teaching About. Mathematics.\""]},{"title":"ht. J Math. Educ. in Science","paragraphs":["& Tech.,"]},{"title":"New","paragraphs":["York: Wiley & Sons, 1972;"]},{"title":"M.I.T. A.I.","paragraphs":["Meluo No. 249, July 1971. Schank, Roger"]},{"title":"C.","paragraphs":["\"Identification of Co~lceptualizatiolls Underlying Natural Language\", in Schank and Colby (eds), 1973."]},{"title":". Conceptual Informfation Processing.","paragraphs":["New York: American Elsovier, 1975. Schank, Roger"]},{"title":"C.","paragraphs":["and Colby,"]},{"title":"K.M.","paragraphs":["(eds)."]},{"title":"Computer Models of Tllought and Language.","paragraphs":["San Francisco:"]},{"title":"W.H.","paragraphs":["Freeman and Co., 1973. Schaum, Daniel;"]},{"title":"Theory and Problems of College Physics,","paragraphs":["6th ed. New York: McGraw-Hill, 1961. Simmons,"]},{"title":"R.F.","paragraphs":["\"Natural Language"]},{"title":"Question","paragraphs":["Anstvering Systems: 1969,\""]},{"title":"Corntn. ACM,","paragraphs":["vol, 13, no. 1 (January, 1970), yp. 15-30,"]},{"title":".","paragraphs":["\"Semantic Networks: Their Computatiotl and Use for Understanding English Sentences\", in Schank and Colby (eds.),'1979. Simmons,"]},{"title":"R.F.","paragraphs":["and Amsler, R.A. \"Modeling Dictionary Data\" Technical Report NL-25, Computer Science Dept., The University of Texas at A.ustin. 1975. Simmons,"]},{"title":"R.F.","paragraphs":["ahd Bennett-Novak, G. \"Semantically Analyzing an English 5ubset for the Clowns Microworld\","]},{"title":"American","paragraphs":["Journal"]},{"title":"of Computational Linguistics,","paragraphs":["Microfiche 18, 1975. Simmons,"]},{"title":"R.F.","paragraphs":["and Bruce, B. \"Some Relations between Predicate Calculus and Semantic Net Representations of Discourse.\""]},{"title":"Proc.","paragraphs":["2nd"]},{"title":"internatio1~~2 Joint Conf. on Artificial Intelligence,","paragraphs":["London: British Computer Society, 19'7 1. Simmons,"]},{"title":"R.F.","paragraphs":["and Slocum,"]},{"title":"J.","paragraphs":["\"Generating English Discobrse from Srtnantic Networks,\""]},{"title":"Conzm. ACM,","paragraphs":["vol. lt5, no. 10 (October 1972), pp. 891-9115."]},{"title":"Wilks,","paragraphs":["Yorick."]},{"title":"\"An","paragraphs":["Intelligent Analyzer. and Understandel of English\" Communications of the ACiM, vol. 18. no. 5 (hIay 19751, pp. 26.4-274. Winograd, Terry. Understanding"]},{"title":"Natural","paragraphs":["Languczge.Nekr York: Acatie~nic Press. 1972. Winston, Patrick"]},{"title":"H.","paragraphs":["The"]},{"title":"Psychology of","paragraphs":["Cornputer"]},{"title":"Vision.","paragraphs":["New York: McGraw-Hill, 1975. Woods,"]},{"title":"William A.","paragraphs":["\"Transition Network Grammars for Natural Language Allalysis\""]},{"title":"Communications of the","paragraphs":["ACM, vol. 13, no. 10 (October 1970). pp. 591-(506."]}]}