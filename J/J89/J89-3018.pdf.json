{"sections":[{"title":"ABSTRACTS OF CURRENT LITERATURE","paragraphs":["The following research reports are available on request from: Advanced Computational Methods Center Computer Services Annex Building University of Georgia Athens, Georgia 30602 NEW REPORTS AND MEMOS 01-0004 A Programming Solution to Certain Problems with Loops in Prolog Nute, D. Representing transitive relations in the obvious way in Prolog results in unwanted loops. A programming solution to this problem is provided and limitations and possible extension of this solution to other looping problems is discussed. (Bound with 01-0001 and 01-0006.) 01-0006 A Further Note on Looping in Prolog Covington, M. In an earlier paper (01-0001) I proposed that looping in Prolog should be prevented by blocking all derivations in which the current goal matches a higher goal. This is too strong a constraint; it causes exhaustive searches to be incomplete. A better approach is to block all derivations in which the current goal matches a higher goal and is about to be evaluated using the same rule as was used to evaluate the higher goal. This is sufficient to block looping, and produce otherwise correct behavior, in all of the cases mentioned in the earlier paper. (Bound with 01-0001 and 01-0004.) 01-0007 A Non-Monotonic Logic Based on Conditional Logic Nute, D. A reasoning system is monotonic just in case it has the following property: whenever it infers a conclusion C from a set of assumptions S, it will also infer C from any larger set of assumptions containing S. Many AI researchers have stressed the need for non-monotonic reasoning systems, systems that can draw good conclusions from incomplete information and revise them as more information becomes available. Human beings often use defeasible rules in such reasoning. I will develop a system of formal logic for sentential versions of defeasible rules and compare this logic to other formal systems proposed as a foundation for non-monotonic reasoning. I will also discuss briefly a PROLOG program within which this logic is implemented. 01-0009 Could Non-monotonic Inference Ever Be Deductively Valid? Rankin, T. Recent advances in Artificial Intelligence (AI) meant to provide formal systems of non-monotonic inference have apparently prompted some linguists, logicians, and philosophers to take seriously the notion of \"nonmonotonic validity.\" Arguments presented here reveal this approach as a mistake that will only lead to a drasticaltly weakened conception of deductive validity that appears to be inherently inconsistent. If so, it cannot be an adequate program or framework for achieving the characteristic goal of deduction (i.e., truth preservation), but it can be seen as an indispensab]le feature of any program or framework in which the characteristic goal of induction (i.e., knowledge extension) could be achieved. 214 Computational Linguistics, Volume 15, Number 3, September 1989 Abstracts of Current Literature 01-0011A Evaluations of Expert System Development Tools Lewis, M. This document contains reports that describe and evaluate expert system development tools. Its purpose is twofold: 1. to advise and assist potential expert system builders, and 2. to prepare the way for the construction of new expert system development tools at ACMC. The reports herein are not intended to substitute for the reference manuals, although the reader should find them informative and helpful. Ideally, the reports are useful as a basis for selecting the most suitable tool prior to consulting the appropriate manual. 01-0013 LDR: A Logic for Defeasible Reasoning Nute, D. Our reasoning often leads to conclusions that we would reject if we had additional information. We need a general account of this \"defeasible\" reasoning. Several accounts found in the literature give intuitively incorrect answers when applied to examples of correct .defeasible reasoning in ordinary circumstances. An account that avoids these problems is developed in the form of a formal system of sentential logic and an accompanying epistemic semantics. Called LDR, this logic is implemented in Prolog. 01-0014 The Automation of a Practical Reasoning System Based on Concepts in Deontic Logic Lewis, M. In this report I examine three systems of deontic logic (the logic of \"ought\"), and based two automated practical reasoning systems on them. The first one is implemented in Prolog. It is a second order reasoning system that involves quantification over act properties (or norms) and act individuals. The second one is implemented in d-Prolog, and is a propositional reasoning system that appeals to general defeasible rules of thumb. Defeasibility of practical conclusions is a feature of both systems. 01-0015 Implicature, Disjunction, and Non-monotonic Logic Nute, D. and Covington, M. This paper presents a formal description of one case of implicature (Pelletier's analysis of \"or\") using LDRI, a non-monotonic logic that was originally developed to encode generalizations that have exceptions. 01-0021 GULP 1.1: An Extension of Prolog for Unification-Based Grammar Covington, M. GULP 1.1 is a syntactic extension of Prolog similar in purpose and function to PATR-II (Shieber 1986) and PrAtt (Johnson and Klein 1986). It provides a convenient notation for feature structures in which features are identified by keyword rather than by position. The present version of GULP runs under the Arity Prolog Interpreter version 4.0. 01-0022 Parsing Variable Word Order Languages With Unification-Based Dependency Grammar Covington, M. This paper presents a formalism and an n3-time parsing algorithm for unification-based dependency grammars. Unlike phrase structure grammars, a dependency grammar does not divide the sentence up into substrings (constituents); instead, it identifies the grammatical relations that connect one word to another. This is advantageous in languages where the order of words is variable and many of the constituents are discontinuous. The algorithm presented here has been used successfully to parse Russian and Latin sentences. 01-0023 An Implementation of Discourse Representation Theory Covington, M. and Schmitz, N. This paper documents a computer program that constructs discourse representation structures (DRSes) from ordinary English input. A source listing of the program is included. This program is a much extended version of the one developed by Johnson and Klein (1986) and was built to serve as a basis for other research. It is implemented in Prolog using GULP, a Computational Linguistics, Volume 15, Number 3, September 1989 215 Abstracts of Current Literature locally developed system for translating feature structure notation into Prolog terms. The reader of this paper is expected to be familiar with discourse representation theory, Prolog, and GULP. 01-0024 From English to Prolog via Discourse Representation Theory Covington, M.; Nute, D.; Schmitz, N.; and Goodman, D. This is a preliminary report on a set of techniques for translating the discourse representation structures (DRSes) of Kamp (1981) into semantically equivalent clauses in a slightly extended form of Prolog. Together with discourse representation theory (DRT) itself, these techniques yield a system for translating English into Prolog. A working prototype has been built using Quintus Prolog on a VAX workstation. 01-0025 READ.PRO: A Pattern Matching Approach to Perceptual Learning in Reading McEneaney, J. READ.PRO is a Prolog program that simulates a theory of perceptual learning in reading. The theory employs pattern matching (unification) as a recognition mechanism. The primary determinant of learning is the frequency with which letter strings are encountered in the text. A source listing is included. 01-0026 Parsing German with GPSG: The Problem of Separable Prefix Verbs Volk, M. This paper discusses parsing with GPSG (generalized phrase structure grammar) in general, then examines the problem of separable prefix verbs in German. Verb and prefix can be separated dependent on the type of sentence and the form of the verb. An implementation of a parser (in Prolog) that handles these verbs will demonstrate the suitability of GPSG for this problem. 01-0027 A Comparative Performance Study on Various Parsers Written in Prolog Chou, T. This paper compares the actual performance of several types of top-down and bottom-up parsers on subsets of English with a variety of crucial properties. Timings are given for Arity Prolog, ALS Prolog, and Quintus Prolog.","The following new papers from the project group KIT can be obtained free of charge from: PROJEKTGRUPPE KIT Technische Universitat Berlin Fachbereich Informatik Sekr. FR5-12 Franklinstr. 28/29 D-1000 Berlin 10 Fed. Rep. of Germany ciskit%db0tuil 1.bitnet@cunyvm.cuny.edu KIT-Report 63 GROW: Graphik-orientierte Wissenpraesentation fuer KL-ONE Kindermann, C. and Quantz, J. June 1988, 85 pp. The topic of this paper is the graphics-oriented presentation of knowledge for KL-ONE. A knowledge representation system can be decomposed into an interaction component and an application component,, so we therefore distinguish between presentation and representation of knowledge. Beginning with a modeling scenario and a study of existing user interfaces for KL-ONE systems and general demands on graphic user interfaces, we discuss problems concerning the presentation KL-ONE and propose solutions. The incremental modeling of a domain, the inspection of the represented knowledge, the navigation through large nets, and the visualization of structural changes as a result of classification or deletion can be supported by graphics-oriented techniques. Since the design of a presentational component leads to new demands on the representational component, we give a brief specification of Computational Linguistics, Volume 15, Number 3, September 1989 216 Abstracts of Current Literature these demands. Some of the proposed solutions have been implemented in a prototype of a user interface for the BACK System at the TU Berlin. KIT-Report 66 Incremental and Reversible Acquisition of Taxonomies Kietz, J. October 1988, 11 pp. To appear in: J. Boose, B. Gaines, M. Linster (eds.): Proceedings of the European Knowledge Acquisition Workshop (EKAW'88), GMD-Studien Nr. 143, GMD, Sankt Augustin, 1988 One of the prerequisites for building up a domain model is the specification of a description language. For a logic-oriented representation, domain-specific predicates have to be declared along with their admissible arguments. If a many sorted logic is used for representing the domain model, the sorts of the arguments, the compatibility of the sorts, and the mapping of terms to sorts have to be declared, as well. This specification can be viewed as a knowledge acquisition task itself. In this paper, an implemented approach to the automatic acquisition of a sort taxonomy is presented. The sort taxonomy, as well as the sorts of the predicates arguments are constructed automatically on the basis of facts inputted by the user. The sort taxonomy is used to specify the well-sorted expressions in a many sorted logic, i.e., to specify the logic description language for a particular domain model. KIT-Report 68 Wortorientiertes Parsen"]},{"title":"Eimermacher,","paragraphs":["M. November 1988, 312 pp. Ph.D. thesis, Computer Science Department, Technical University Berlin, 1988 Conventional grammars are restricted to the competence of language. They describe which syntactical structures are correct, but not how they can be generated. Therefore, the Parser has to search through a large space of syntactical rules. In order to obtain an adequate left-right parsing without superfluous backtracking, knowledge of cross-relations between individual words and different readings is required, i.e., a word-oriented grammar (object-oriented knowledge representation). Rieger/ Small's Word-Expert System did have one \"Expert\" for each word, but there was no grammar to define general rules (about those Experts). Therefore, lexical transformation rules are introduced, which reconcile two (up until now) seemingly opposing goals: On the one hand, these WAXPs (Word-Class Experts, German: Wortartexperten) are general rules, so they may be investigated linguistically. On the other hand, they generate WXPs (Words Experts) which can exploit the relations between single words. So WXPs are no longer stored in a dictionary; instead they are generated for the current input \"on demand.\" Therefore, linguistic knowledge is modularized: vertically by lattices for semantic sorts and word classes. On this basis, syntax and semantics can be integrated horizontally by individual experts for the morpheme, word, and sentence level (quasi-parallel evaluation). The evaluation is supported by powerful representation structures (augmented binary chart, a stack \"Expectations of Context,\" different lattices). As well as the basic idea of a word-oriented parse system, the thesis deals with complex grammatical problems, e.g., bracketed infinitives and extrapositions. Within the word-oriented grammar, modifiers are treated separately from the WAXPs by \"filters,\" so that no \"normal\" rule (WAXP) has to take account of these exceptions. Moreover, sentence structures are introduced concerning meta-grammatical phenomena (wrong input and elliptical conjunctions). Since WAXPs already contain the kernel of the grammar, the sentence level can be represented by means of flat (and efficient) sentence frames. The word-oriented procedure allows for a wide range of parse strategies. They are compiled into a hierarchical master strategy, which makes it largely possible to avoid backtracking. Computational Linguistics, Volume 15, Number 3, September 1989 217 KIT-Report 69 Temporal Constraint Networks Schmiedei, A. November 1988, 30 pp. Abstracts of Current Literature A representation of time and specialized temporal reasoning mechanisms can greatly enhance the capabilities of hybrid knowledge representation formalisms such as the BACK system. Time lends itself to a special purpose treatment because of its uniform structure across all kinds of domains. After discussing various classes of conceivable constraint types, simple order constraints, bounded differences, and Allen's interval relations are considered in more detail, and a uniform algorithmic approach is presented. While complete polynomial time algorithms for simple order constraints and bounded differences exist, ensuring consistency for networks based on Allen's interval relations is intractable. 218 Computational Linguistics, Volume 15, Number 3, September 1989"]}]}