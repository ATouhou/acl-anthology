{"sections":[{"title":"","paragraphs":["Computational Linguistics Volume 20, Number 1"]},{"title":"The Logical Approach to Syntax: Foundations, Specifications, and Implementations of Theories of Government and Binding Edward P. Stabler, Jr.","paragraphs":["(University of California, Los Angeles) Cambridge, MA: The MIT Press (The ACL-MIT Press Series in Natural Language Processing, edited by Aravind K. Joshi, Karen Sparck Jones, and Mark Y. Liberman), 1992, xiv + 433 pp. Hardbound, ISBN 0-262-19315-9, $45.00"]},{"title":"Reviewed by Robert J. Kuhns SigniCorp, Inc.","paragraphs":["The title"]},{"title":"The Logical Approach to Syntax: Foundations, Specifications, and Implementations of Theories of Government and Binding","paragraphs":["describes Stabler's book very well. In it, Stabler introduces techniques and results pertaining to formal logic, develops logical representations of particular instantiations of Government-Binding Theory (GB), and explores the consequences of the theory within a deductive framework. Beyond specific results found in the book, Stabler shows how logical implications of alternative conceptions of linguistic principles can be rigorously investigated. The logical representations are, in effect, specifications for the implementation of language processing models."]},{"title":"1. Working Assumptions","paragraphs":["To provide foundation to his work, Stabler begins his book by putting forth two working assumptions. \"The first is that the study of language processing ought to be guided by the study of properties of human languages themselves, properties that linguistic theories tell us about\" (p. 1). \"The second fundamental premise of the present study is that human languages are complex enough that it makes sense to begin a computational study with some formal specifications of the linguistic problems to be handled\" (p. 2). The assumption that language processing should be grounded on theories of language has been a working principle for researchers from a variety of theoretical positions. 1 Stabler carries the assumption a step further in assuming that idealizations presupposed in theory should carry over to a computational model; that is, a machine computing structures in correspondence with principles of a linguistic theory should be without \"performance limitations,\" just as theories reflect abstractions from those same limitations. 2","The second assumption states that a formal specification of language phenomena is desirable because of the complexity of human languages. Whereas the first assumption seems uncontroversial for many researchers, the second working principle could 1 For example, Berwick, Abney, and Tenny (1991) provide the GB approach to language processing and Shieber (1986) discusses unification approaches to processing Generalized Phrase Structure Grammar and related theories. 2 Stabler does note that constraints on an idealized computational model may be relaxed so as to mirror actual human language processing once an adequate computational system has been developed. 150 Book Reviews be problematic for some. Beyond brief references to formal methods employed by logicians in their study of arithmetic and proof techniques in computer program construction, Stabler gives little justification for the hypothesis that is central to his entire work. It could be argued that premature formalization of language analysis would put investigators at a disadvantage precisely because the domain is so complex and many aspects are not well understood. Nevertheless, the two assumptions lay the ground-work for bridging the gap between theory and language-processing algorithms. 2. Overview of Contents The book is divided into four parts: \"Logical Foundations\" (Part I), \"Formalizing Barriers\" (Part II), \"Variations and Elaborations\" (Part III), and \"Computational Models\" (Part IV). Part I provides the proof-theoretic techniques that are used throughout the book and is included as background material and reference for readers who are not familiar with the techniques. It covers a standard set of topics related to first-order theories, such as completeness, axiomatization, representability, and decidability. The discussion continues to automatic proof methods or resolution techniques (e.g., SLD resolution) and definite-clause theories. With the foundation developed to this point, a discussion of recognizing and parsing context-free languages follows, including a presentation of LR parsing and deduction. Aspects of extraposition and restricted logic grammars are also briefly overviewed. Part I ends with an introduction to employing logic techniques for parsing fragments of English.","Whereas the focus of Part I is on the logic and deductive framework, Part II emphasizes linguistic theory. More specifically, Part II formalizes major ideas of GB theory, especially those found in Barriers (Chomsky 1986). The discussion progresses from elementary notions such as phrase structure (X-bar Theory) and movement (substitution and adjunction) to those of government, barriers, bounding theory, and the empty-category principle. Although the primary purpose of this section is to develop logical representations of the key concepts and principles of the Barriers model, the linguistic rationale underlying the principles is presented with numerous examples.","Part III builds on the two previous sections by exploring a number of recent theoretical extensions to GB theory. These proposals cover a diverse set of topics including determiner phrases, inflectional phrases and head movement, and VP-internal subjects. Briefly, the chapter on determiner phrases explores the implications of accepting determiners as heads of determiner phrases that have NP complements. The claim that inflectional phrases (IPs) include projections of tense, negation, and agreement and the hypothesis that subjects in English result from raising from VP-internal position are explored. In each case, Stabler shows how modest modifications to his Barriers formalization will account for the theoretical shifts or where further investigations are necessary. As in Part II, discussion and argumentation for departures from Barriers are provided.","The final part, \"Computational Models,\" covers ways in which the techniques and proof theory developed in the first three parts can be applied to linguistic claims. For instance, it is possible to show that specific strings violate subjacency or that the head movement constraint is not derivable from the empty-category principle. The last chapter is about parsing as constraint satisfaction, an area that is currently subject to much research. Complexity results and efficiency considerations of developing a constraint-based parser as a model of human processing are also investigated.","Three appendices containing formal derivations, listings of the first-order formalization of Barriers, and Prolog code of the formalization complete the book. 151 Computational Linguistics Volume 20, Number 1 3. Discussion This book makes an important contribution to the areas of formal syntax and computational linguistics. Stabler demonstrates that the two fields have much to offer one another through formal logical techniques. For the linguist, it develops a proof-theoretic framework in which linguistic principles can be formalized and consequences explored. Subsequent argumentation of an empirically motivated theory can be precisely formulated and rigorously pursued.","For the computational linguist, the book shows details of what it means to formal-ize a theory within first-order logic. Stabler starts with the linguistic argumentation of key principles of GB theory and carefully develops their logical representation. More importantly, the work does not end just with a logical \"translation\" of GB theory or Barriers. It illustrates how proof techniques can be exploited to determine the consequences (positive or negative) of a set of linguistic assumptions. As a result, the techniques developed in the book go beyond the computational linguist's task of developing language recognizers or parsers (which are worthwhile endeavors in their own right); they become a tool for exploring linguistic hypotheses in formal terms. This type of exploration of the formal consequences of a particular theory of language is what distinguishes Stabler's work from those that are mainly formal encodings of a linguistic theory.","It is important to stress, though, that the interconnections between theory and computation should not suggest that foemalization is a substitute for linguistic argumentation based on empirical observations. As Stabler states, Of course, the formalization does not add anything to the theories. Anyone who understood them well enough might be able to draw the same conclusions without the aid of the formalism, but the theories are rather complex. The formalism is a valuable aid to specify unambiguously the theory about which claims are being made, and the exercise of discovering a proof is a valuable check on whether we have forgotten any cases that would be exceptions to our claims. (p. 322) The main purpose of formalization is as an aid to the researcher in delimiting the ambiguous parts of a model and then determining the logical implications of a formalized theory. It is not meant as a substitute for empirical inquiry and linguistic argumentation.","As seen by the overview of the book's contents, The Logical Approach to Syntax covers a wide range of topics from a presentation of deductive systems and an introduction to Chomsky's Barriers to a first-order formalization of the theory and theorems of the formalized theory. Although the breadth of coverage is extensive, touching on several different disciplines, the book is not a linguistics, mathematical logic, or Prolog text. The background required to appreciate and use Stabler's research limits the readership to those who are familiar with logical systems, proof methods, and the principles of GB theory. Nevertheless, for those who have worked with formal methods and linguistic theory or who have the patience to consult the references that Stabler provides to supplement the text, the book offers a new approach to bridging linguistic and logical methods.","From another perspective, since many major ideas of the GB paradigm have been formalized, the book should provide a firm basis for GB-based parser development. Stabler even addresses some implementation concerns such as efficiency of logic pro-152 Book Reviews grams and data structuring. An interesting research project would be to develop a GB-based parser that incorporates many of the representations found in the book. An implementation of this sort would satisfy one of the book's goals--namely, that the formalizations presented are specifications for development of language processing systems.","The book's major strength is the balance between formal methods and linguistic theory. Stabler has skillfully blended a plethora of results from logic and linguistics. The formal sections develop the techniques required later in the book, while the sections covering main theoretical claims are presented with examples and argumentation. Readability is further enhanced as Stabler lays out his formalization incrementally; that is, key notions and principles are represented by first-order expressions as they are in-troduced. However, the significance of Stabler's book comes in the latter parts, where logical implications of GB theory and several competing hypotheses are analyzed. With this type of logical analysis, linguistic theories can be more fully developed in ways that are not always evident without a formal framework. References Berwick, Robert C.; Abney, Steven P.; and Tenny, Carol, editors. (1991). Principle-Based Parsing: Computation and Psycholinguistics. Kluwer Academic Publishers. Chomsky, Noam (1986). Barriers. MIT Press.","Shieber, Stuart M. (1986). An Introduction to Unification-Based Approaches to Grammar. Lecture Notes Number 4. Stanford, CA: Center for the Study of Language and Information. Robert J. Kuhns has developed GB-based parsers in Prolog and Parlog and is interested in embedding GB kernels within text processing applications. He is co-founder of SigniCorp, Inc., and is also a consultant working on grammar development at Sun Microsystems Laboratories, Inc. His address is: 205 Walnut Street, Brookline, MA 02146; e-mail: kuhns@world.std.com. 153"]}]}