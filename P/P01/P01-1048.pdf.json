{"sections":[{"title":"Predicting User Reactions to System Error Diane Litman and Julia Hirschberg AT&T Labs–Research Florham Park, NJ, 07932 USA diane/julia @research.att.com Marc Swerts IPO, Eindhoven, The Netherlands, and CNTS, Antwerp, Belgium m.g.j.swerts@tue.nl Abstract","paragraphs":["This paper focuses on the analysis and prediction of so-called aware sites, defined as turns where a user of a spoken dialogue system first becomes aware that the system has made a speech recognition error. We describe statistical comparisons of features of these aware sites in a train timetable spoken dialogue corpus, which reveal significant prosodic differences between such turns, compared with turns that ‘correct’ speech recognition errors as well as with ‘normal’ turns that are neither aware sites nor corrections. We then present machine learning results in which we show how prosodic features in combination with other automatically available features can predict whether or not a user turn was a normal turn, a correction, and/or an aware site."]},{"title":"1 Introduction","paragraphs":["This paper describes new results in our continu-ing investigation of prosodic information as a potential resource for error recovery in interactions between a user and a spoken dialogue system. In human-human interaction, dialogue partners apply sophisticated strategies to detect and correct communication failures so that errors of recognition and understanding rarely lead to a complete breakdown of the interaction (Clark and Wilkes-Gibbs, 1986). In particular, various studies have shown that prosody is an important cue in avoiding such breakdown, e.g. (Shimojima et al., 1999). Human-machine interactions between a user and a spoken dialogue system (SDS) exhibit more frequent communication breakdowns, due mainly to errors in the Automatic Speech Recognition (ASR) component of these systems. In such interactions, however, there is also evidence showing prosodic information may be used as a resource for error recovery. In previous work, we identified new procedures to detect recognition errors. In particular, we found that prosodic features, in combination with other information already available to the recognizer, can distinguish user turns that are misrecognized by the system far better than traditional methods used in ASR rejection (Litman et al., 2000; Hirschberg et al., 2000). We also found that user corrections of system misrecognitions exhibit certain typical prosodic features, which can be used to identify such turns (Swerts et al., 2000; Hirschberg et al., 2001). These findings are consistent with previous research showing that corrections tend to be hyperarticulated — higher, louder, longer ...than other turns (Wade et al., 1992; Oviatt et al., 1996; Levow, 1998; Bell and Gustafson, 1999).","In the current study, we focus on another turn category that is potentially useful in error handling. In particular, we examine what we term aware sites — turns where a user, while interact-ing with a machine, first becomes aware that the system has misrecognized a previous user turn. Note that such aware sites may or may not also be corrections (another type of post-misrecognition turn), since a user may not immediately provide correcting information. We will refer to turns that are both aware sites and corrections as corrawares, to turns that are only corrections as corrs, to turns that are only aware sites as awares, and to turns that are neither aware sites nor corrections as norm.","We believe that it would be useful for the dialogue manager in an SDS to be able to detect aware sites for several reasons. First, if aware sites are detectable, they can function as backward-looking error-signaling devices, mak-ing it clear to the system that something has gone wrong in the preceding context, so that, for example, the system can reprompt for information. In this way, they are similar to what others have termed ‘go-back’ signals (Krahmer et al., 1999). Second, aware sites can be used as forwardlooking signals, indicating upcoming corrections or more drastic changes in user behavior, such as complete restarts of the task. Given that, in current systems, both corrections and restarts often lead to recognition error (Swerts et al., 2000), aware sites may be useful in preparing systems to deal with such problems.","In this paper, we investigate whether aware sites share acoustic properties that set them apart from normal turns, from corrections, and from turns which are both aware sites and corrections. We also want to test whether these different turn categories can be distinguished automatically, via their prosodic features or from other features known to or automatically detectible by a spoken dialogue system. Our domain is the TOOT spoken dialogue corpus, which we describe in Section 2. In Section 3, we present some descriptive findings on different turn categories in TOOT. Section 4 presents results of our machine learning experiments on distinguishing the different turn classes. In Section 5 we summarize our conclusions."]},{"title":"2 Data","paragraphs":["The TOOT corpus was collected using an experimental SDS developed for the purpose of compar-ing differences in dialogue strategy. It provides access to train information over the phone and is implemented using an internal platform combining ASR, text-to-speech, a phone interface, and modules for specifying a finite-state dialogue manager, and application functions. Subjects performed four tasks with versions of TOOT, which varied confirmation type and locus of initiative (system initiative with explicit system confirmation, user initiative with no system confirmation until the end of the task, mixed initiative with implicit system confirmation), as well as whether the user could change versions at will using voice commands. Subjects were 39 students, 20 native speakers of standard American English and 19 non-native speakers; 16 subjects were female and 23 male. The exchanges were recorded and the system and user behavior logged automatically. Dialogues were manually transcribed and user turns automatically compared to the corresponding ASR (one-best) recognized string to produce a word accuracy score (WA) for each turn. Each turn’s concept accuracy (CA) was labeled by the experimenters from the dialogue recordings and the system log; if the recognizer correctly captured all the task-related information given in the user’s original input (e.g. date, time, departure or arrival cities), the turn was given a CA score of 1, indicating a semantically correct recognition. Otherwise, the CA score reflected the percentage of correctly recognized task concepts in the turn. For the study described below, we examined 2328 user turns from 152 dialogues generated during these experiments. 194 of the 2320 turns were rejected by the system.","To identify the different turn categories in the corpus, two authors independently labeled each turn as to whether or not it constituted a correction of a prior system failure (a CA error or a rejection) and what turn was being corrected, and whether or not it represented an aware site for a prior failure, and, if so, the turn which the system had failed on. Labeler disagreement was subsequently resolved by consensus. The fragment in Figure 1, produced with a version of TOOT in which the user has the initiative with no confirmation until the end of the task, illustrates these labels. This example illustrates cases of corraware, in which both the user’s awareness and correction of a misrecognition occur in the same turn (e.g. turns 1159 and 1160, after system prompts for information already given in turn 1158). It also illustrates cases in which aware sites and corrections occur in different turns. For example, after the immediate explicit system confirmation of turn 1162, the user first becomes aware of the system errors (turn 1163), then separately corrects them (turn 1164); turn 1163 is thus an aware turn and turn 1164 a corr. When no immediate confirmation of an utterance occurs (as with turn 1158), it may take several turns before the user becomes aware of any","Turn Turn ID Aware of Corr of Type S: How may I help you? U: Get me the train to New York City from","Baltimore on Sunday at eight thirty pm 1158 NA NA NORM S: Which city do you want to go to? U: New York City 1159 1158 1158 CORRAWARE S: Which city do you want to leave from? U: Baltimore 1160 1158 1158 CORRAWARE S: Do you want me to find the trains from","Baltimore to New York City today at anytime now? U: No 1161 1158 NA AWARE S: How may I help you? U: Get me the train to New York City from","Baltimore on Sunday at eight thirty pm 1162 NA 1158 CORR S: Do you want me to find the trains from","Baltimore to New York City today at anytime now? U: No 1163 1162 NA AWARE S: How may I help you? U: Get me the train on Sunday at eight thirty pm 1164 NA 1162 CORR Figure 1: Dialogue Fragment with Aware and Correction Labels. misrecognition errors. For example, it is not until turn 1161 that the user first becomes aware of the error in date and time from 1158; the user then corrects the error in 1162. So, 1161 is classified as an aware and 1162 as a corr. Note that corr turns represent 13% of the turns in our corpus, awares represent 14%, corrawares account for 16%, and norm turns represent 57% of the turns in the corpus."]},{"title":"3 Descriptive Analysis and Results","paragraphs":["We examined prosodic features for each user turn which had previously been shown to be useful for predicting misrecognized turns and corrections: maximum and mean fundamental frequency values (F0 Max, F0 Mean), maximum and mean energy values (RMS Max, RMS Mean), total duration (Dur), length of pause preceding the turn (Ppau), speaking rate (Tempo) and amount of silence within the turn (%Sil). F0 and RMS values, representing measures of pitch excursion and loudness, were calculated from the output of Entropic Research Laboratory’s pitch tracker, get f0, with no post-correction. Timing variation was represented by four features. Duration within and length of pause between turns was computed from the temporal labels associated with each turn’s be-","","While the features were automatically computed, beginnings and endings were hand segmented from recordings of the entire dialogue, as the turn-level speech files used as input in the original recognition process created by TOOT were unavailable. ginning and end. Speaking rate was approximated in terms of syllables in the recognized string per second, while %Sil was defined as the percentage of zero frames in the turn, i.e., roughly the percentage of time within the turn that the speaker was silent.","To see whether the different turn categories were prosodically distinct from one another, we applied the following procedure. We first calculated mean values for each prosodic feature for each of the four turn categories produced by each individual speaker. So, for speaker A, we divided all turns produced into four classes. For each class, we then calculated mean F0 Max, mean F0 Mean, and so on. After this step had been repeated for each speaker and for each feature, we then created four vectors of speaker means for each individual prosodic feature. Then, for each prosodic feature, we ran a one-factor within subjects anova on the means to learn whether there was an overall effect of turn category.","Table 1 shows that, overall, the turn categories do indeed differ significantly with respect to different prosodic features; there is a significant, overall effect of category on F0 Max, RMS Max, RMS Mean, Duration, Tempo and %Sil. To identify which pairs of turns were significantly different where there was an overall significant effect, we performed posthoc paired t-tests using the Bonferroni method to adjust the p-level to 0.008 (on the basis of the number of possible pairs that","Turn categories","Feature Normal Correction Aware Corraware","-stat","***F0 Max (Hz) 220.05 263.40 216.87 229.00 ","=10.477","F0 Mean (Hz) 161.78 173.43 162.61 158.24 ","=1.575","***RMS Max (dB) 1484.14 1833.62 1538.91 1925.38 ","=7.548","*RMS Mean (dB) 372.47 379.65 425.96 464.16  ","=3.190","***Dur (sec) 1.43 4.39 1.12 2.33 ","=34.418","Ppau (sec) 0.60 0.93 0.87 0.80 ","=1.325","**Tempo (syls/sec) 2.59 2.38 2.16 2.43  ","=4.206","*%Sil (sec) 0.46 0.41 0.44 0.42  ","=3.182","Significance level: *(p",".05), **(p",".01), ***(p",".001) Table 1: Mean Values of Prosodic Features for Turn Categories.","Prosodic features Classes F0 max F0 mean RMS max RMS mean Dur Ppau Tempo %Sil norm/corr – – – + norm/aware + norm/corraware – – aware/corr – – – – aware/corraware – – – corraware/corr – – Table 2: Pairwise Comparisons of Different Turn Categories by Prosodic Feature. can be drawn from an array of 4 means). Results are summarized in Table 2, where ‘ + ’ or ‘ – ’ indicates that the feature value of the first category is either significantly higher or lower than the second. Note that, for each of the pairs, there is at least one prosodic feature that distinguishes the categories significantly, though it is clear that some pairs, like aware vs. corr and norm vs. corr appear to have more distinguishing features than others, like norm vs. aware. It is also interesting to see that the three types of post-error turns are indeed prosodically different: awares are less prominent in terms of F0 and RMS maximum than corrawares, which, in turn, are less prominent than corrections, for example. In fact, awares, except for duration, are prosodically similar to normal turns."]},{"title":"4 Predictive Results","paragraphs":["We next wanted to determine whether the prosodic features described above could, alone or in combination with other automatically available features, be used to predict our turn categories automatically. This section describes experiments using the machine learning program RIPPER (Cohen, 1996) to automatically induce prediction models from our data. Like many learning programs, RIPPER takes as input the classes to be learned, a set of feature names and possible values, and training data specifying the class and feature values for each training example. RIPPER outputs a classification model for predicting the class of future examples, expressed as an ordered set of if-then rules. The main advantages of RIPPER for our experiments are that RIPPER supports “set-valued” features (which allows us to represent the speech recognizer’s best hypothesis as a set of words), and that rule output is an intuitive way to gain insight into our data.","In the current experiments, we used 10-fold cross-validation to estimate the accuracy of the rulesets learned. Our predicted classes correspond to the turn categories described in Section 2 and variations described below. We represent each user turn using the feature set shown in Figure 2, which we previously found useful for predicting corrections (Hirschberg et al., 2001). A subset of the features includes the automatically computable raw prosodic features shown in Table 1 (Raw), and normalized versions of these features, where normalization was done by first turn (Norm1) or by previous turn (Norm2) in a dialogue. The set labeled ‘ASR’ contains standard input and output of the speech recognition process, which grammar was used for the dialogue state the system believed the user to be in (gram),","Raw: f0 max, f0 mean, rms max, rms mean, dur, ppau, tempo, %sil;","Norm1: f0 max1, f0 mean1, rms max1, rms mean1, dur1, ppau1, tempo1, %sil1;","Norm2: f0 max2, f0 mean2, rms max2, rms mean2, dur2, ppau2, tempo2, %sil2;","ASR: gram, str, conf, ynstr, nofeat, canc, help, wordsstr, syls, rejbool; System Experimental: inittype, conftype, adapt, realstrat; Dialogue Position: diadist; PreTurn: features for preceding turn (e.g., pref0max);","PrepreTurn: features for preceding preceding turn (e.g., ppref0max);","Prior: for each boolean-valued feature (ynstr, nofeat, canc, help, rejbool), the number/percentage of prior turns exhibiting the feature (e.g., priorynstrnum/priorynstrpct);","PMean: for each continuous-valued feature, the mean of the feature’s value over all prior turns (e.g., pmnf0max); Figure 2: Feature Set. the system’s best hypothesis for the user input (str), and the acoustic confidence score produced by the recognizer for the turn (conf). As subcases of the str feature, we also included whether or not the recognized string included the strings yes or no (ynstr), some variant of no such as nope (nofeat), cancel (canc), or help (help), as these lexical items were often used to signal problems in our system. We also derived features to approximate the length of the user turn in words (wordsstr) and in syllables (syls) from the str features. And we added a boolean feature identifying whether or not the turn had been rejected by the system (rejbool). Next, we include a set of features representing the system’s dialogue strategy when each turn was produced. These include the system’s current initiative and confirmation strategies (inittype, conf-type), whether users could adapt the system’s dialogue strategies (adapt), and the combined initiative/confirmation strategy in effect at the time of the turn (realstrat). Finally, given that our previous studies showed that preceding dialogue context may affect correction behavior (Swerts et al., 2000; Hirschberg et al., 2001), we included a feature (diadist) reflecting the distance of the current turn from the beginning of the dialogue, and a set of features summarizing aspects of the prior dialogue: for the latter features, we included both the number of times prior turns exhibited certain characteristics (e.g. priorcancnum) and the percentage of the prior dialogue containing one of these features (e.g. priorcancpct). We also examined means for all raw and normalized prosodic features and some word-based features over the entire dialogue preceding the turn to be predicted (pmn ). Finally, we examined more local contexts, including all features of the preceding turn (pre ) and for the turn preceding that (ppre ).","We provided all of the above features to the learning algorithm first to predict the four-way classification of turns into normal, aware, corr and corraware. A baseline for this classification (always predicting norm, the majority class) has a success rate of 57%. Compared to this, our features improve classification accuracy to 74.23% (+/– 0.96%). Figure 3 presents the rules learned for this classification. Of the features that appear in the ruleset, about half are features of current turn and half features of the prior context. Only once does a system feature appear, suggesting that the rules generalize beyond the experimental conditions of the data collection. Of the features specific to the current turn, prosodic features dominate, and, overall, timing features (dur and tempo especially) appear most frequently in the rules. About half of the contextual features are prosodic ones and half are ASR features, with ASR confidence score appearing to be most useful. ASR features of the current turn which appear most often are string-based features and the grammar state the system used for recognizing the turn. There appear to be no differences in which type of features are chosen to predict the different classes.","If we express the prediction results in terms of precision and recall, we see how our classification accuracy varies for the different turn categories (Table 3). From Table 3, we see that the majority class (normal) is most accurately classified. Predictions for the other three categories, which occur about equally often in our corpus, vary considerably, with modest results for corr and corraware, and rather poor results for aware. Table 4 shows a confusion matrix for the four classes, produced by","if (gram=universal)","(dur2","7.31) then CORR","if (dur2","2.19)","(priornofeatpct","0.09)","(tempo","1.50)","(pmntempo","2.39) then CORR","if (dur2","1.53)","(pmnwordsstr 2.06)","(tempo1","1.07)","(predur","0.80)","(prenofeat=F)","(presyls","4) then CORR","if (predur1","0.26)","(dur","0.79)","(rmsmean2","1.51)","(f0mean","173.49) then CORR","if (dur2","1.41)","(prenofeat=T) (str contains word ‘eight’) then CORR","if (predur1","0.18)","(dur2","4.21)","(dur1","0.50)","(f0mean","276.43) then CORR","if (predur1","0.19)","(ppregram=cityname)","(rmsmax1","1.10)","(pmntempo2","1.64) then CORR","if (realstrat=SystemImplicit)","(gram=cityname)","(pmnf0mean1","0.96) then CORR","if (preconf","-2.66)","(dur2","0.31)","(pprenofeat=T)","(tempo2","0.61) then AWARE","if (preconf","-2.85)","(syls","2) (predur","1.05)","(pref0max","4.82)","(tempo2","0.58)","(pmn%sil","0.53) then AWARE","if (preconf","-3.34)","(syls","2) (ppau","0.57)","(conf","-3.07)","(preppau","0.72) then AWARE","if (dur","0.74)","(pmndur","2.57)","(preconf","-4.36)","(f0mean2","0.90) then CORRAWARE","if (preconf","-2.80)","(pretempo 2.16)","(preconf","-3.95)","(tempo1","4.67) then CORRAWARE","if (preconf","-2.80)","(dur","0.66)","(rmsmean","488.56) then CORRAWARE","if (preconf","-3.56)","(dur2","0.64)","(prerejbool=T) then CORRAWARE","if (pretempo","0.71)","(tempo 3.31) then CORRAWARE","if (preconf","-3.01)","(tempo2 0.78)","(pmndur","2.83)","(pmnf0mean","199.84) then CORRAWARE","if (pmnconf","-3.10)","(prestr contains the word ‘help’)","(pmndur2","2.01)","(ppau","0.98) then CORRAWARE","if (pmnconf","-3.10)","(gra